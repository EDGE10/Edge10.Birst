//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Edge10.Birst.BirstWebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    // CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.birst.com/' was not handled.
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CommandWebServiceSoap", Namespace="http://www.birst.com/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(QueryResult))]
    public partial class CommandWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback enableSourceInSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback listLanguagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLanguageForUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback setLanguageForUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback setSpaceNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback setSpaceCommentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback setEmailFromForSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback setEmailSubjectForSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback setBackgroundColorForSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback setForegroundColorForSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback setLogoForSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback setDefaultLogoForSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSourcesListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSourceDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback setSourceDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback mapLiveAccessSourceOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLiveAccessSourceDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback setLiveAccessSourceDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLiveAccessColumnPropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback setLiveAccessColumnPropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback uploadImageToReportCatalogOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSpaceCommentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback setSpaceProcessEngineVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSpaceProcessEngineVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getODBCMetaDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getODBCMetaDataSubjectAreasOperationCompleted;
        
        private System.Threading.SendOrPostCallback createProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback listProfilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProfileDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProfilePropertyWithLocaleOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProfilePropertyOperationCompleted;
        
        private System.Threading.SendOrPostCallback setProfilePropertyOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteLocaleValueInProfilePropertyOperationCompleted;
        
        private System.Threading.SendOrPostCallback linkProfileToAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback linkProfileToUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback unlinkProfileFromUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback unlinkProfileFromAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserProfileDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDefaultProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDefaultProfileDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProfileForUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUsersForProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDashboardViewOperationCompleted;
        
        private System.Threading.SendOrPostCallback setDashboardViewOperationCompleted;
        
        private System.Threading.SendOrPostCallback rebuildIndicesOperationCompleted;
        
        private System.Threading.SendOrPostCallback loadStagingtableFromS3BucketOperationCompleted;
        
        private System.Threading.SendOrPostCallback addSfdcAccountMappingOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeSfdcAccountMappingOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSfdcAccountMappingOperationCompleted;
        
        private System.Threading.SendOrPostCallback setDenyAddSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback addEmailDomainsOperationCompleted;
        
        private System.Threading.SendOrPostCallback listEmailDomainsOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeEmailDomainsOperationCompleted;
        
        private System.Threading.SendOrPostCallback createHierarchyOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteHierarchyOperationCompleted;
        
        private System.Threading.SendOrPostCallback getHierarchyOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateHierarchyOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginViaSamlOperationCompleted;
        
        private System.Threading.SendOrPostCallback clearCacheInSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback swapSpaceContentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback swapSpaceForPackagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback copySpaceContentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback copySpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback copyCatalogDirectoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback resetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback addUserToSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback listUsersInSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeUserFromSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback addGroupToSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeGroupFromSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback listGroupsInSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAvailableACLsOperationCompleted;
        
        private System.Threading.SendOrPostCallback listGroupAclsInSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback addAclToGroupInSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeAclFromGroupInSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback addUserToGroupInSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeUserFromGroupInSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback listUsersInGroupInSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback listUserGroupMembershipOperationCompleted;
        
        private System.Threading.SendOrPostCallback listProxyUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback listOpenIDsOperationCompleted;
        
        private System.Threading.SendOrPostCallback addOpenIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeOpenIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback setUserDefaultSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback listReleasesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserReleaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback setUserReleaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback enableUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback unlockUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback enableAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback addProxyUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeProxyUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback listCreatedUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback listManagedUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback listAllowedIpsOperationCompleted;
        
        private System.Threading.SendOrPostCallback addAllowedIpOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeAllowedIpOperationCompleted;
        
        private System.Threading.SendOrPostCallback listAllowedIPAddrsForAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback addAllowedIPAddrForAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeAllowedIPAddrForAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback setVariableInSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback addUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback addProductToUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeProductFromUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback executeQueryInSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback executeQueryInSpaceWithOptionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getReportDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback queryMoreOperationCompleted;
        
        private System.Threading.SendOrPostCallback createDashboardCollectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback createExpressionOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateExpressionOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteExpressionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getExpressionOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveQueryReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback replaceExpressionInReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback beginDataUploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback setDataUploadOptionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback uploadDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback finishDataUploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback isDataUploadCompleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDataUploadStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback isJobCompleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback getJobStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback publishDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback isPublishingCompleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPublishingStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback getVariablesForSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDirectoryContentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDirectoryPermissionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback setDirectoryPermissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback setDirectoryPermissionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback setCatalogPermissionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback copyFileOrDirectoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback copyFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteFileOrDirectoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback renameFileOrDirectoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback createNewDirectoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkAndCreateDirectoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLoadStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback createNewSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback createNewSpaceUsingSchemaOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback copyCustomSubjectAreaOperationCompleted;
        
        private System.Threading.SendOrPostCallback listCustomSubjectAreasOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSubjectAreaContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback getExtendedSubjectAreaOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUpdatedSubjectAreaOperationCompleted;
        
        private System.Threading.SendOrPostCallback createSubjectAreaOperationCompleted;
        
        private System.Threading.SendOrPostCallback renameSubjectAreaOperationCompleted;
        
        private System.Threading.SendOrPostCallback setSubjectAreaPermissionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSubjectAreaPermissionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback setSubjectAreaDescriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSubjectAreaDescriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback setSubjectAreaOperationCompleted;
        
        private System.Threading.SendOrPostCallback addExpressionToSubjectAreaOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeExpressionFromSubjectAreaOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteSubjectAreaOperationCompleted;
        
        private System.Threading.SendOrPostCallback listSpacesOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteLastDataFromSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteAllDataFromSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback executeScheduledReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback exportReportToPNGOperationCompleted;
        
        private System.Threading.SendOrPostCallback exportReportToPDFOperationCompleted;
        
        private System.Threading.SendOrPostCallback exportReportToPPTOperationCompleted;
        
        private System.Threading.SendOrPostCallback exportReportToXLSOperationCompleted;
        
        private System.Threading.SendOrPostCallback exportReportToCSVOperationCompleted;
        
        private System.Threading.SendOrPostCallback exportReportToRTFOperationCompleted;
        
        private System.Threading.SendOrPostCallback getExportDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback setSpaceSSOPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractSalesforceDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractConnectorDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractCloudConnectorDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSpaceJNLPFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSpaceStatisticsOperationCompleted;
        
        private System.Threading.SendOrPostCallback setUpGenericJDBCRealTimeConnectionForSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback setUpRealTimeConnectionForSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback modifyRealTimeConnectionInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback importCubeMetaDataIntoSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback setUserPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback clearDashboardCacheOperationCompleted;
        
        private System.Threading.SendOrPostCallback renameDashboardOperationCompleted;
        
        private System.Threading.SendOrPostCallback renameDashboardPageOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CommandWebService() {
            this.Url = global::Edge10.Birst.Properties.Settings.Default.Edge10_Birst_BirstWebService_CommandWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event enableSourceInSpaceCompletedEventHandler enableSourceInSpaceCompleted;
        
        /// <remarks/>
        public event listLanguagesCompletedEventHandler listLanguagesCompleted;
        
        /// <remarks/>
        public event getLanguageForUserCompletedEventHandler getLanguageForUserCompleted;
        
        /// <remarks/>
        public event setLanguageForUserCompletedEventHandler setLanguageForUserCompleted;
        
        /// <remarks/>
        public event setSpaceNameCompletedEventHandler setSpaceNameCompleted;
        
        /// <remarks/>
        public event setSpaceCommentsCompletedEventHandler setSpaceCommentsCompleted;
        
        /// <remarks/>
        public event setEmailFromForSpaceCompletedEventHandler setEmailFromForSpaceCompleted;
        
        /// <remarks/>
        public event setEmailSubjectForSpaceCompletedEventHandler setEmailSubjectForSpaceCompleted;
        
        /// <remarks/>
        public event setBackgroundColorForSpaceCompletedEventHandler setBackgroundColorForSpaceCompleted;
        
        /// <remarks/>
        public event setForegroundColorForSpaceCompletedEventHandler setForegroundColorForSpaceCompleted;
        
        /// <remarks/>
        public event setLogoForSpaceCompletedEventHandler setLogoForSpaceCompleted;
        
        /// <remarks/>
        public event setDefaultLogoForSpaceCompletedEventHandler setDefaultLogoForSpaceCompleted;
        
        /// <remarks/>
        public event getSourcesListCompletedEventHandler getSourcesListCompleted;
        
        /// <remarks/>
        public event getSourceDetailsCompletedEventHandler getSourceDetailsCompleted;
        
        /// <remarks/>
        public event setSourceDetailsCompletedEventHandler setSourceDetailsCompleted;
        
        /// <remarks/>
        public event mapLiveAccessSourceCompletedEventHandler mapLiveAccessSourceCompleted;
        
        /// <remarks/>
        public event getLiveAccessSourceDetailsCompletedEventHandler getLiveAccessSourceDetailsCompleted;
        
        /// <remarks/>
        public event setLiveAccessSourceDetailsCompletedEventHandler setLiveAccessSourceDetailsCompleted;
        
        /// <remarks/>
        public event getLiveAccessColumnPropertiesCompletedEventHandler getLiveAccessColumnPropertiesCompleted;
        
        /// <remarks/>
        public event setLiveAccessColumnPropertiesCompletedEventHandler setLiveAccessColumnPropertiesCompleted;
        
        /// <remarks/>
        public event uploadImageToReportCatalogCompletedEventHandler uploadImageToReportCatalogCompleted;
        
        /// <remarks/>
        public event getSpaceCommentsCompletedEventHandler getSpaceCommentsCompleted;
        
        /// <remarks/>
        public event setSpaceProcessEngineVersionCompletedEventHandler setSpaceProcessEngineVersionCompleted;
        
        /// <remarks/>
        public event getSpaceProcessEngineVersionCompletedEventHandler getSpaceProcessEngineVersionCompleted;
        
        /// <remarks/>
        public event getODBCMetaDataCompletedEventHandler getODBCMetaDataCompleted;
        
        /// <remarks/>
        public event getODBCMetaDataSubjectAreasCompletedEventHandler getODBCMetaDataSubjectAreasCompleted;
        
        /// <remarks/>
        public event createProfileCompletedEventHandler createProfileCompleted;
        
        /// <remarks/>
        public event listProfilesCompletedEventHandler listProfilesCompleted;
        
        /// <remarks/>
        public event getProfileCompletedEventHandler getProfileCompleted;
        
        /// <remarks/>
        public event getProfileDetailsCompletedEventHandler getProfileDetailsCompleted;
        
        /// <remarks/>
        public event updateProfileCompletedEventHandler updateProfileCompleted;
        
        /// <remarks/>
        public event deleteProfileCompletedEventHandler deleteProfileCompleted;
        
        /// <remarks/>
        public event getProfilePropertyWithLocaleCompletedEventHandler getProfilePropertyWithLocaleCompleted;
        
        /// <remarks/>
        public event getProfilePropertyCompletedEventHandler getProfilePropertyCompleted;
        
        /// <remarks/>
        public event setProfilePropertyCompletedEventHandler setProfilePropertyCompleted;
        
        /// <remarks/>
        public event deleteLocaleValueInProfilePropertyCompletedEventHandler deleteLocaleValueInProfilePropertyCompleted;
        
        /// <remarks/>
        public event linkProfileToAccountCompletedEventHandler linkProfileToAccountCompleted;
        
        /// <remarks/>
        public event linkProfileToUsersCompletedEventHandler linkProfileToUsersCompleted;
        
        /// <remarks/>
        public event unlinkProfileFromUsersCompletedEventHandler unlinkProfileFromUsersCompleted;
        
        /// <remarks/>
        public event unlinkProfileFromAccountCompletedEventHandler unlinkProfileFromAccountCompleted;
        
        /// <remarks/>
        public event getUserProfileCompletedEventHandler getUserProfileCompleted;
        
        /// <remarks/>
        public event getUserProfileDetailsCompletedEventHandler getUserProfileDetailsCompleted;
        
        /// <remarks/>
        public event getDefaultProfileCompletedEventHandler getDefaultProfileCompleted;
        
        /// <remarks/>
        public event getDefaultProfileDetailsCompletedEventHandler getDefaultProfileDetailsCompleted;
        
        /// <remarks/>
        public event getProfileForUserCompletedEventHandler getProfileForUserCompleted;
        
        /// <remarks/>
        public event getUsersForProfileCompletedEventHandler getUsersForProfileCompleted;
        
        /// <remarks/>
        public event getDashboardViewCompletedEventHandler getDashboardViewCompleted;
        
        /// <remarks/>
        public event setDashboardViewCompletedEventHandler setDashboardViewCompleted;
        
        /// <remarks/>
        public event rebuildIndicesCompletedEventHandler rebuildIndicesCompleted;
        
        /// <remarks/>
        public event loadStagingtableFromS3BucketCompletedEventHandler loadStagingtableFromS3BucketCompleted;
        
        /// <remarks/>
        public event addSfdcAccountMappingCompletedEventHandler addSfdcAccountMappingCompleted;
        
        /// <remarks/>
        public event removeSfdcAccountMappingCompletedEventHandler removeSfdcAccountMappingCompleted;
        
        /// <remarks/>
        public event getSfdcAccountMappingCompletedEventHandler getSfdcAccountMappingCompleted;
        
        /// <remarks/>
        public event setDenyAddSpaceCompletedEventHandler setDenyAddSpaceCompleted;
        
        /// <remarks/>
        public event addEmailDomainsCompletedEventHandler addEmailDomainsCompleted;
        
        /// <remarks/>
        public event listEmailDomainsCompletedEventHandler listEmailDomainsCompleted;
        
        /// <remarks/>
        public event removeEmailDomainsCompletedEventHandler removeEmailDomainsCompleted;
        
        /// <remarks/>
        public event createHierarchyCompletedEventHandler createHierarchyCompleted;
        
        /// <remarks/>
        public event deleteHierarchyCompletedEventHandler deleteHierarchyCompleted;
        
        /// <remarks/>
        public event getHierarchyCompletedEventHandler getHierarchyCompleted;
        
        /// <remarks/>
        public event updateHierarchyCompletedEventHandler updateHierarchyCompleted;
        
        /// <remarks/>
        public event LogoutCompletedEventHandler LogoutCompleted;
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event LoginViaSamlCompletedEventHandler LoginViaSamlCompleted;
        
        /// <remarks/>
        public event clearCacheInSpaceCompletedEventHandler clearCacheInSpaceCompleted;
        
        /// <remarks/>
        public event swapSpaceContentsCompletedEventHandler swapSpaceContentsCompleted;
        
        /// <remarks/>
        public event swapSpaceForPackagesCompletedEventHandler swapSpaceForPackagesCompleted;
        
        /// <remarks/>
        public event copySpaceContentsCompletedEventHandler copySpaceContentsCompleted;
        
        /// <remarks/>
        public event copySpaceCompletedEventHandler copySpaceCompleted;
        
        /// <remarks/>
        public event copyCatalogDirectoryCompletedEventHandler copyCatalogDirectoryCompleted;
        
        /// <remarks/>
        public event resetPasswordCompletedEventHandler resetPasswordCompleted;
        
        /// <remarks/>
        public event addUserToSpaceCompletedEventHandler addUserToSpaceCompleted;
        
        /// <remarks/>
        public event listUsersInSpaceCompletedEventHandler listUsersInSpaceCompleted;
        
        /// <remarks/>
        public event removeUserFromSpaceCompletedEventHandler removeUserFromSpaceCompleted;
        
        /// <remarks/>
        public event addGroupToSpaceCompletedEventHandler addGroupToSpaceCompleted;
        
        /// <remarks/>
        public event removeGroupFromSpaceCompletedEventHandler removeGroupFromSpaceCompleted;
        
        /// <remarks/>
        public event listGroupsInSpaceCompletedEventHandler listGroupsInSpaceCompleted;
        
        /// <remarks/>
        public event getAvailableACLsCompletedEventHandler getAvailableACLsCompleted;
        
        /// <remarks/>
        public event listGroupAclsInSpaceCompletedEventHandler listGroupAclsInSpaceCompleted;
        
        /// <remarks/>
        public event addAclToGroupInSpaceCompletedEventHandler addAclToGroupInSpaceCompleted;
        
        /// <remarks/>
        public event removeAclFromGroupInSpaceCompletedEventHandler removeAclFromGroupInSpaceCompleted;
        
        /// <remarks/>
        public event addUserToGroupInSpaceCompletedEventHandler addUserToGroupInSpaceCompleted;
        
        /// <remarks/>
        public event removeUserFromGroupInSpaceCompletedEventHandler removeUserFromGroupInSpaceCompleted;
        
        /// <remarks/>
        public event listUsersInGroupInSpaceCompletedEventHandler listUsersInGroupInSpaceCompleted;
        
        /// <remarks/>
        public event listUserGroupMembershipCompletedEventHandler listUserGroupMembershipCompleted;
        
        /// <remarks/>
        public event listProxyUsersCompletedEventHandler listProxyUsersCompleted;
        
        /// <remarks/>
        public event listOpenIDsCompletedEventHandler listOpenIDsCompleted;
        
        /// <remarks/>
        public event addOpenIDCompletedEventHandler addOpenIDCompleted;
        
        /// <remarks/>
        public event removeOpenIDCompletedEventHandler removeOpenIDCompleted;
        
        /// <remarks/>
        public event setUserDefaultSpaceCompletedEventHandler setUserDefaultSpaceCompleted;
        
        /// <remarks/>
        public event listReleasesCompletedEventHandler listReleasesCompleted;
        
        /// <remarks/>
        public event getUserReleaseCompletedEventHandler getUserReleaseCompleted;
        
        /// <remarks/>
        public event setUserReleaseCompletedEventHandler setUserReleaseCompleted;
        
        /// <remarks/>
        public event enableUserCompletedEventHandler enableUserCompleted;
        
        /// <remarks/>
        public event unlockUserCompletedEventHandler unlockUserCompleted;
        
        /// <remarks/>
        public event deleteUserCompletedEventHandler deleteUserCompleted;
        
        /// <remarks/>
        public event enableAccountCompletedEventHandler enableAccountCompleted;
        
        /// <remarks/>
        public event addProxyUserCompletedEventHandler addProxyUserCompleted;
        
        /// <remarks/>
        public event removeProxyUserCompletedEventHandler removeProxyUserCompleted;
        
        /// <remarks/>
        public event listCreatedUsersCompletedEventHandler listCreatedUsersCompleted;
        
        /// <remarks/>
        public event listManagedUsersCompletedEventHandler listManagedUsersCompleted;
        
        /// <remarks/>
        public event listAllowedIpsCompletedEventHandler listAllowedIpsCompleted;
        
        /// <remarks/>
        public event addAllowedIpCompletedEventHandler addAllowedIpCompleted;
        
        /// <remarks/>
        public event removeAllowedIpCompletedEventHandler removeAllowedIpCompleted;
        
        /// <remarks/>
        public event listAllowedIPAddrsForAccountCompletedEventHandler listAllowedIPAddrsForAccountCompleted;
        
        /// <remarks/>
        public event addAllowedIPAddrForAccountCompletedEventHandler addAllowedIPAddrForAccountCompleted;
        
        /// <remarks/>
        public event removeAllowedIPAddrForAccountCompletedEventHandler removeAllowedIPAddrForAccountCompleted;
        
        /// <remarks/>
        public event setVariableInSpaceCompletedEventHandler setVariableInSpaceCompleted;
        
        /// <remarks/>
        public event addUserCompletedEventHandler addUserCompleted;
        
        /// <remarks/>
        public event addProductToUserCompletedEventHandler addProductToUserCompleted;
        
        /// <remarks/>
        public event removeProductFromUserCompletedEventHandler removeProductFromUserCompleted;
        
        /// <remarks/>
        public event executeQueryInSpaceCompletedEventHandler executeQueryInSpaceCompleted;
        
        /// <remarks/>
        public event executeQueryInSpaceWithOptionsCompletedEventHandler executeQueryInSpaceWithOptionsCompleted;
        
        /// <remarks/>
        public event getReportDataCompletedEventHandler getReportDataCompleted;
        
        /// <remarks/>
        public event queryMoreCompletedEventHandler queryMoreCompleted;
        
        /// <remarks/>
        public event createDashboardCollectionCompletedEventHandler createDashboardCollectionCompleted;
        
        /// <remarks/>
        public event createExpressionCompletedEventHandler createExpressionCompleted;
        
        /// <remarks/>
        public event updateExpressionCompletedEventHandler updateExpressionCompleted;
        
        /// <remarks/>
        public event deleteExpressionCompletedEventHandler deleteExpressionCompleted;
        
        /// <remarks/>
        public event getExpressionCompletedEventHandler getExpressionCompleted;
        
        /// <remarks/>
        public event saveQueryReportCompletedEventHandler saveQueryReportCompleted;
        
        /// <remarks/>
        public event replaceExpressionInReportCompletedEventHandler replaceExpressionInReportCompleted;
        
        /// <remarks/>
        public event beginDataUploadCompletedEventHandler beginDataUploadCompleted;
        
        /// <remarks/>
        public event setDataUploadOptionsCompletedEventHandler setDataUploadOptionsCompleted;
        
        /// <remarks/>
        public event uploadDataCompletedEventHandler uploadDataCompleted;
        
        /// <remarks/>
        public event finishDataUploadCompletedEventHandler finishDataUploadCompleted;
        
        /// <remarks/>
        public event isDataUploadCompleteCompletedEventHandler isDataUploadCompleteCompleted;
        
        /// <remarks/>
        public event getDataUploadStatusCompletedEventHandler getDataUploadStatusCompleted;
        
        /// <remarks/>
        public event isJobCompleteCompletedEventHandler isJobCompleteCompleted;
        
        /// <remarks/>
        public event getJobStatusCompletedEventHandler getJobStatusCompleted;
        
        /// <remarks/>
        public event publishDataCompletedEventHandler publishDataCompleted;
        
        /// <remarks/>
        public event isPublishingCompleteCompletedEventHandler isPublishingCompleteCompleted;
        
        /// <remarks/>
        public event getPublishingStatusCompletedEventHandler getPublishingStatusCompleted;
        
        /// <remarks/>
        public event getVariablesForSpaceCompletedEventHandler getVariablesForSpaceCompleted;
        
        /// <remarks/>
        public event getDirectoryContentsCompletedEventHandler getDirectoryContentsCompleted;
        
        /// <remarks/>
        public event getDirectoryPermissionsCompletedEventHandler getDirectoryPermissionsCompleted;
        
        /// <remarks/>
        public event setDirectoryPermissionCompletedEventHandler setDirectoryPermissionCompleted;
        
        /// <remarks/>
        public event setDirectoryPermissionsCompletedEventHandler setDirectoryPermissionsCompleted;
        
        /// <remarks/>
        public event setCatalogPermissionsCompletedEventHandler setCatalogPermissionsCompleted;
        
        /// <remarks/>
        public event copyFileOrDirectoryCompletedEventHandler copyFileOrDirectoryCompleted;
        
        /// <remarks/>
        public event copyFileCompletedEventHandler copyFileCompleted;
        
        /// <remarks/>
        public event deleteFileOrDirectoryCompletedEventHandler deleteFileOrDirectoryCompleted;
        
        /// <remarks/>
        public event renameFileOrDirectoryCompletedEventHandler renameFileOrDirectoryCompleted;
        
        /// <remarks/>
        public event createNewDirectoryCompletedEventHandler createNewDirectoryCompleted;
        
        /// <remarks/>
        public event checkAndCreateDirectoryCompletedEventHandler checkAndCreateDirectoryCompleted;
        
        /// <remarks/>
        public event getLoadStatusCompletedEventHandler getLoadStatusCompleted;
        
        /// <remarks/>
        public event createNewSpaceCompletedEventHandler createNewSpaceCompleted;
        
        /// <remarks/>
        public event createNewSpaceUsingSchemaCompletedEventHandler createNewSpaceUsingSchemaCompleted;
        
        /// <remarks/>
        public event deleteSpaceCompletedEventHandler deleteSpaceCompleted;
        
        /// <remarks/>
        public event copyCustomSubjectAreaCompletedEventHandler copyCustomSubjectAreaCompleted;
        
        /// <remarks/>
        public event listCustomSubjectAreasCompletedEventHandler listCustomSubjectAreasCompleted;
        
        /// <remarks/>
        public event getSubjectAreaContentCompletedEventHandler getSubjectAreaContentCompleted;
        
        /// <remarks/>
        public event getExtendedSubjectAreaCompletedEventHandler getExtendedSubjectAreaCompleted;
        
        /// <remarks/>
        public event getUpdatedSubjectAreaCompletedEventHandler getUpdatedSubjectAreaCompleted;
        
        /// <remarks/>
        public event createSubjectAreaCompletedEventHandler createSubjectAreaCompleted;
        
        /// <remarks/>
        public event renameSubjectAreaCompletedEventHandler renameSubjectAreaCompleted;
        
        /// <remarks/>
        public event setSubjectAreaPermissionsCompletedEventHandler setSubjectAreaPermissionsCompleted;
        
        /// <remarks/>
        public event getSubjectAreaPermissionsCompletedEventHandler getSubjectAreaPermissionsCompleted;
        
        /// <remarks/>
        public event setSubjectAreaDescriptionCompletedEventHandler setSubjectAreaDescriptionCompleted;
        
        /// <remarks/>
        public event getSubjectAreaDescriptionCompletedEventHandler getSubjectAreaDescriptionCompleted;
        
        /// <remarks/>
        public event setSubjectAreaCompletedEventHandler setSubjectAreaCompleted;
        
        /// <remarks/>
        public event addExpressionToSubjectAreaCompletedEventHandler addExpressionToSubjectAreaCompleted;
        
        /// <remarks/>
        public event removeExpressionFromSubjectAreaCompletedEventHandler removeExpressionFromSubjectAreaCompleted;
        
        /// <remarks/>
        public event deleteSubjectAreaCompletedEventHandler deleteSubjectAreaCompleted;
        
        /// <remarks/>
        public event listSpacesCompletedEventHandler listSpacesCompleted;
        
        /// <remarks/>
        public event deleteLastDataFromSpaceCompletedEventHandler deleteLastDataFromSpaceCompleted;
        
        /// <remarks/>
        public event deleteAllDataFromSpaceCompletedEventHandler deleteAllDataFromSpaceCompleted;
        
        /// <remarks/>
        public event executeScheduledReportCompletedEventHandler executeScheduledReportCompleted;
        
        /// <remarks/>
        public event exportReportToPNGCompletedEventHandler exportReportToPNGCompleted;
        
        /// <remarks/>
        public event exportReportToPDFCompletedEventHandler exportReportToPDFCompleted;
        
        /// <remarks/>
        public event exportReportToPPTCompletedEventHandler exportReportToPPTCompleted;
        
        /// <remarks/>
        public event exportReportToXLSCompletedEventHandler exportReportToXLSCompleted;
        
        /// <remarks/>
        public event exportReportToCSVCompletedEventHandler exportReportToCSVCompleted;
        
        /// <remarks/>
        public event exportReportToRTFCompletedEventHandler exportReportToRTFCompleted;
        
        /// <remarks/>
        public event getExportDataCompletedEventHandler getExportDataCompleted;
        
        /// <remarks/>
        public event setSpaceSSOPasswordCompletedEventHandler setSpaceSSOPasswordCompleted;
        
        /// <remarks/>
        public event extractSalesforceDataCompletedEventHandler extractSalesforceDataCompleted;
        
        /// <remarks/>
        public event extractConnectorDataCompletedEventHandler extractConnectorDataCompleted;
        
        /// <remarks/>
        public event extractCloudConnectorDataCompletedEventHandler extractCloudConnectorDataCompleted;
        
        /// <remarks/>
        public event getSpaceJNLPFileCompletedEventHandler getSpaceJNLPFileCompleted;
        
        /// <remarks/>
        public event getSpaceStatisticsCompletedEventHandler getSpaceStatisticsCompleted;
        
        /// <remarks/>
        public event setUpGenericJDBCRealTimeConnectionForSpaceCompletedEventHandler setUpGenericJDBCRealTimeConnectionForSpaceCompleted;
        
        /// <remarks/>
        public event setUpRealTimeConnectionForSpaceCompletedEventHandler setUpRealTimeConnectionForSpaceCompleted;
        
        /// <remarks/>
        public event modifyRealTimeConnectionInformationCompletedEventHandler modifyRealTimeConnectionInformationCompleted;
        
        /// <remarks/>
        public event importCubeMetaDataIntoSpaceCompletedEventHandler importCubeMetaDataIntoSpaceCompleted;
        
        /// <remarks/>
        public event setUserPasswordCompletedEventHandler setUserPasswordCompleted;
        
        /// <remarks/>
        public event clearDashboardCacheCompletedEventHandler clearDashboardCacheCompleted;
        
        /// <remarks/>
        public event renameDashboardCompletedEventHandler renameDashboardCompleted;
        
        /// <remarks/>
        public event renameDashboardPageCompletedEventHandler renameDashboardPageCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/enableSourceInSpace", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void enableSourceInSpace(string token, string spaceID, string dataSourceName, bool enabled) {
            this.Invoke("enableSourceInSpace", new object[] {
                        token,
                        spaceID,
                        dataSourceName,
                        enabled});
        }
        
        /// <remarks/>
        public void enableSourceInSpaceAsync(string token, string spaceID, string dataSourceName, bool enabled) {
            this.enableSourceInSpaceAsync(token, spaceID, dataSourceName, enabled, null);
        }
        
        /// <remarks/>
        public void enableSourceInSpaceAsync(string token, string spaceID, string dataSourceName, bool enabled, object userState) {
            if ((this.enableSourceInSpaceOperationCompleted == null)) {
                this.enableSourceInSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenableSourceInSpaceOperationCompleted);
            }
            this.InvokeAsync("enableSourceInSpace", new object[] {
                        token,
                        spaceID,
                        dataSourceName,
                        enabled}, this.enableSourceInSpaceOperationCompleted, userState);
        }
        
        private void OnenableSourceInSpaceOperationCompleted(object arg) {
            if ((this.enableSourceInSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enableSourceInSpaceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/listLanguages", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Language[] listLanguages(string token) {
            object[] results = this.Invoke("listLanguages", new object[] {
                        token});
            return ((Language[])(results[0]));
        }
        
        /// <remarks/>
        public void listLanguagesAsync(string token) {
            this.listLanguagesAsync(token, null);
        }
        
        /// <remarks/>
        public void listLanguagesAsync(string token, object userState) {
            if ((this.listLanguagesOperationCompleted == null)) {
                this.listLanguagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistLanguagesOperationCompleted);
            }
            this.InvokeAsync("listLanguages", new object[] {
                        token}, this.listLanguagesOperationCompleted, userState);
        }
        
        private void OnlistLanguagesOperationCompleted(object arg) {
            if ((this.listLanguagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listLanguagesCompleted(this, new listLanguagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/getLanguageForUser", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getLanguageForUser(string token, string username) {
            object[] results = this.Invoke("getLanguageForUser", new object[] {
                        token,
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getLanguageForUserAsync(string token, string username) {
            this.getLanguageForUserAsync(token, username, null);
        }
        
        /// <remarks/>
        public void getLanguageForUserAsync(string token, string username, object userState) {
            if ((this.getLanguageForUserOperationCompleted == null)) {
                this.getLanguageForUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLanguageForUserOperationCompleted);
            }
            this.InvokeAsync("getLanguageForUser", new object[] {
                        token,
                        username}, this.getLanguageForUserOperationCompleted, userState);
        }
        
        private void OngetLanguageForUserOperationCompleted(object arg) {
            if ((this.getLanguageForUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLanguageForUserCompleted(this, new getLanguageForUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/setLanguageForUser", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setLanguageForUser(string token, string username, string localeId) {
            this.Invoke("setLanguageForUser", new object[] {
                        token,
                        username,
                        localeId});
        }
        
        /// <remarks/>
        public void setLanguageForUserAsync(string token, string username, string localeId) {
            this.setLanguageForUserAsync(token, username, localeId, null);
        }
        
        /// <remarks/>
        public void setLanguageForUserAsync(string token, string username, string localeId, object userState) {
            if ((this.setLanguageForUserOperationCompleted == null)) {
                this.setLanguageForUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetLanguageForUserOperationCompleted);
            }
            this.InvokeAsync("setLanguageForUser", new object[] {
                        token,
                        username,
                        localeId}, this.setLanguageForUserOperationCompleted, userState);
        }
        
        private void OnsetLanguageForUserOperationCompleted(object arg) {
            if ((this.setLanguageForUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setLanguageForUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/setSpaceName", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setSpaceName(string token, string spaceID, string spaceName) {
            this.Invoke("setSpaceName", new object[] {
                        token,
                        spaceID,
                        spaceName});
        }
        
        /// <remarks/>
        public void setSpaceNameAsync(string token, string spaceID, string spaceName) {
            this.setSpaceNameAsync(token, spaceID, spaceName, null);
        }
        
        /// <remarks/>
        public void setSpaceNameAsync(string token, string spaceID, string spaceName, object userState) {
            if ((this.setSpaceNameOperationCompleted == null)) {
                this.setSpaceNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetSpaceNameOperationCompleted);
            }
            this.InvokeAsync("setSpaceName", new object[] {
                        token,
                        spaceID,
                        spaceName}, this.setSpaceNameOperationCompleted, userState);
        }
        
        private void OnsetSpaceNameOperationCompleted(object arg) {
            if ((this.setSpaceNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setSpaceNameCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/setSpaceComments", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setSpaceComments(string token, string spaceID, string spaceComments) {
            this.Invoke("setSpaceComments", new object[] {
                        token,
                        spaceID,
                        spaceComments});
        }
        
        /// <remarks/>
        public void setSpaceCommentsAsync(string token, string spaceID, string spaceComments) {
            this.setSpaceCommentsAsync(token, spaceID, spaceComments, null);
        }
        
        /// <remarks/>
        public void setSpaceCommentsAsync(string token, string spaceID, string spaceComments, object userState) {
            if ((this.setSpaceCommentsOperationCompleted == null)) {
                this.setSpaceCommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetSpaceCommentsOperationCompleted);
            }
            this.InvokeAsync("setSpaceComments", new object[] {
                        token,
                        spaceID,
                        spaceComments}, this.setSpaceCommentsOperationCompleted, userState);
        }
        
        private void OnsetSpaceCommentsOperationCompleted(object arg) {
            if ((this.setSpaceCommentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setSpaceCommentsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/setEmailFromForSpace", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setEmailFromForSpace(string token, string spaceID, string email) {
            this.Invoke("setEmailFromForSpace", new object[] {
                        token,
                        spaceID,
                        email});
        }
        
        /// <remarks/>
        public void setEmailFromForSpaceAsync(string token, string spaceID, string email) {
            this.setEmailFromForSpaceAsync(token, spaceID, email, null);
        }
        
        /// <remarks/>
        public void setEmailFromForSpaceAsync(string token, string spaceID, string email, object userState) {
            if ((this.setEmailFromForSpaceOperationCompleted == null)) {
                this.setEmailFromForSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetEmailFromForSpaceOperationCompleted);
            }
            this.InvokeAsync("setEmailFromForSpace", new object[] {
                        token,
                        spaceID,
                        email}, this.setEmailFromForSpaceOperationCompleted, userState);
        }
        
        private void OnsetEmailFromForSpaceOperationCompleted(object arg) {
            if ((this.setEmailFromForSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setEmailFromForSpaceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/setEmailSubjectForSpace", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setEmailSubjectForSpace(string token, string spaceID, string subject) {
            this.Invoke("setEmailSubjectForSpace", new object[] {
                        token,
                        spaceID,
                        subject});
        }
        
        /// <remarks/>
        public void setEmailSubjectForSpaceAsync(string token, string spaceID, string subject) {
            this.setEmailSubjectForSpaceAsync(token, spaceID, subject, null);
        }
        
        /// <remarks/>
        public void setEmailSubjectForSpaceAsync(string token, string spaceID, string subject, object userState) {
            if ((this.setEmailSubjectForSpaceOperationCompleted == null)) {
                this.setEmailSubjectForSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetEmailSubjectForSpaceOperationCompleted);
            }
            this.InvokeAsync("setEmailSubjectForSpace", new object[] {
                        token,
                        spaceID,
                        subject}, this.setEmailSubjectForSpaceOperationCompleted, userState);
        }
        
        private void OnsetEmailSubjectForSpaceOperationCompleted(object arg) {
            if ((this.setEmailSubjectForSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setEmailSubjectForSpaceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/setBackgroundColorForSpace", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setBackgroundColorForSpace(string token, string spaceID, string bgcolor) {
            this.Invoke("setBackgroundColorForSpace", new object[] {
                        token,
                        spaceID,
                        bgcolor});
        }
        
        /// <remarks/>
        public void setBackgroundColorForSpaceAsync(string token, string spaceID, string bgcolor) {
            this.setBackgroundColorForSpaceAsync(token, spaceID, bgcolor, null);
        }
        
        /// <remarks/>
        public void setBackgroundColorForSpaceAsync(string token, string spaceID, string bgcolor, object userState) {
            if ((this.setBackgroundColorForSpaceOperationCompleted == null)) {
                this.setBackgroundColorForSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetBackgroundColorForSpaceOperationCompleted);
            }
            this.InvokeAsync("setBackgroundColorForSpace", new object[] {
                        token,
                        spaceID,
                        bgcolor}, this.setBackgroundColorForSpaceOperationCompleted, userState);
        }
        
        private void OnsetBackgroundColorForSpaceOperationCompleted(object arg) {
            if ((this.setBackgroundColorForSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setBackgroundColorForSpaceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/setForegroundColorForSpace", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setForegroundColorForSpace(string token, string spaceID, string fgcolor) {
            this.Invoke("setForegroundColorForSpace", new object[] {
                        token,
                        spaceID,
                        fgcolor});
        }
        
        /// <remarks/>
        public void setForegroundColorForSpaceAsync(string token, string spaceID, string fgcolor) {
            this.setForegroundColorForSpaceAsync(token, spaceID, fgcolor, null);
        }
        
        /// <remarks/>
        public void setForegroundColorForSpaceAsync(string token, string spaceID, string fgcolor, object userState) {
            if ((this.setForegroundColorForSpaceOperationCompleted == null)) {
                this.setForegroundColorForSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetForegroundColorForSpaceOperationCompleted);
            }
            this.InvokeAsync("setForegroundColorForSpace", new object[] {
                        token,
                        spaceID,
                        fgcolor}, this.setForegroundColorForSpaceOperationCompleted, userState);
        }
        
        private void OnsetForegroundColorForSpaceOperationCompleted(object arg) {
            if ((this.setForegroundColorForSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setForegroundColorForSpaceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/setLogoForSpace", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setLogoForSpace(string token, string spaceID, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] image) {
            this.Invoke("setLogoForSpace", new object[] {
                        token,
                        spaceID,
                        image});
        }
        
        /// <remarks/>
        public void setLogoForSpaceAsync(string token, string spaceID, byte[] image) {
            this.setLogoForSpaceAsync(token, spaceID, image, null);
        }
        
        /// <remarks/>
        public void setLogoForSpaceAsync(string token, string spaceID, byte[] image, object userState) {
            if ((this.setLogoForSpaceOperationCompleted == null)) {
                this.setLogoForSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetLogoForSpaceOperationCompleted);
            }
            this.InvokeAsync("setLogoForSpace", new object[] {
                        token,
                        spaceID,
                        image}, this.setLogoForSpaceOperationCompleted, userState);
        }
        
        private void OnsetLogoForSpaceOperationCompleted(object arg) {
            if ((this.setLogoForSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setLogoForSpaceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/setDefaultLogoForSpace", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setDefaultLogoForSpace(string token, string spaceID) {
            this.Invoke("setDefaultLogoForSpace", new object[] {
                        token,
                        spaceID});
        }
        
        /// <remarks/>
        public void setDefaultLogoForSpaceAsync(string token, string spaceID) {
            this.setDefaultLogoForSpaceAsync(token, spaceID, null);
        }
        
        /// <remarks/>
        public void setDefaultLogoForSpaceAsync(string token, string spaceID, object userState) {
            if ((this.setDefaultLogoForSpaceOperationCompleted == null)) {
                this.setDefaultLogoForSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetDefaultLogoForSpaceOperationCompleted);
            }
            this.InvokeAsync("setDefaultLogoForSpace", new object[] {
                        token,
                        spaceID}, this.setDefaultLogoForSpaceOperationCompleted, userState);
        }
        
        private void OnsetDefaultLogoForSpaceOperationCompleted(object arg) {
            if ((this.setDefaultLogoForSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setDefaultLogoForSpaceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/getSourcesList", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] getSourcesList(string token, string spaceID) {
            object[] results = this.Invoke("getSourcesList", new object[] {
                        token,
                        spaceID});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getSourcesListAsync(string token, string spaceID) {
            this.getSourcesListAsync(token, spaceID, null);
        }
        
        /// <remarks/>
        public void getSourcesListAsync(string token, string spaceID, object userState) {
            if ((this.getSourcesListOperationCompleted == null)) {
                this.getSourcesListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSourcesListOperationCompleted);
            }
            this.InvokeAsync("getSourcesList", new object[] {
                        token,
                        spaceID}, this.getSourcesListOperationCompleted, userState);
        }
        
        private void OngetSourcesListOperationCompleted(object arg) {
            if ((this.getSourcesListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSourcesListCompleted(this, new getSourcesListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/getSourceDetails", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StagingTableSubClass getSourceDetails(string token, string spaceID, string sourceName) {
            object[] results = this.Invoke("getSourceDetails", new object[] {
                        token,
                        spaceID,
                        sourceName});
            return ((StagingTableSubClass)(results[0]));
        }
        
        /// <remarks/>
        public void getSourceDetailsAsync(string token, string spaceID, string sourceName) {
            this.getSourceDetailsAsync(token, spaceID, sourceName, null);
        }
        
        /// <remarks/>
        public void getSourceDetailsAsync(string token, string spaceID, string sourceName, object userState) {
            if ((this.getSourceDetailsOperationCompleted == null)) {
                this.getSourceDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSourceDetailsOperationCompleted);
            }
            this.InvokeAsync("getSourceDetails", new object[] {
                        token,
                        spaceID,
                        sourceName}, this.getSourceDetailsOperationCompleted, userState);
        }
        
        private void OngetSourceDetailsOperationCompleted(object arg) {
            if ((this.getSourceDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSourceDetailsCompleted(this, new getSourceDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/setSourceDetails", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setSourceDetails(string token, string spaceID, StagingTableSubClass data) {
            this.Invoke("setSourceDetails", new object[] {
                        token,
                        spaceID,
                        data});
        }
        
        /// <remarks/>
        public void setSourceDetailsAsync(string token, string spaceID, StagingTableSubClass data) {
            this.setSourceDetailsAsync(token, spaceID, data, null);
        }
        
        /// <remarks/>
        public void setSourceDetailsAsync(string token, string spaceID, StagingTableSubClass data, object userState) {
            if ((this.setSourceDetailsOperationCompleted == null)) {
                this.setSourceDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetSourceDetailsOperationCompleted);
            }
            this.InvokeAsync("setSourceDetails", new object[] {
                        token,
                        spaceID,
                        data}, this.setSourceDetailsOperationCompleted, userState);
        }
        
        private void OnsetSourceDetailsOperationCompleted(object arg) {
            if ((this.setSourceDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setSourceDetailsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/mapLiveAccessSource", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void mapLiveAccessSource(string token, string spaceID, LiveAccessSourceMetadata sourceMetadata) {
            this.Invoke("mapLiveAccessSource", new object[] {
                        token,
                        spaceID,
                        sourceMetadata});
        }
        
        /// <remarks/>
        public void mapLiveAccessSourceAsync(string token, string spaceID, LiveAccessSourceMetadata sourceMetadata) {
            this.mapLiveAccessSourceAsync(token, spaceID, sourceMetadata, null);
        }
        
        /// <remarks/>
        public void mapLiveAccessSourceAsync(string token, string spaceID, LiveAccessSourceMetadata sourceMetadata, object userState) {
            if ((this.mapLiveAccessSourceOperationCompleted == null)) {
                this.mapLiveAccessSourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmapLiveAccessSourceOperationCompleted);
            }
            this.InvokeAsync("mapLiveAccessSource", new object[] {
                        token,
                        spaceID,
                        sourceMetadata}, this.mapLiveAccessSourceOperationCompleted, userState);
        }
        
        private void OnmapLiveAccessSourceOperationCompleted(object arg) {
            if ((this.mapLiveAccessSourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mapLiveAccessSourceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/getLiveAccessSourceDetails", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LiveAccessSourceSubClass getLiveAccessSourceDetails(string token, string spaceID, string sourceName) {
            object[] results = this.Invoke("getLiveAccessSourceDetails", new object[] {
                        token,
                        spaceID,
                        sourceName});
            return ((LiveAccessSourceSubClass)(results[0]));
        }
        
        /// <remarks/>
        public void getLiveAccessSourceDetailsAsync(string token, string spaceID, string sourceName) {
            this.getLiveAccessSourceDetailsAsync(token, spaceID, sourceName, null);
        }
        
        /// <remarks/>
        public void getLiveAccessSourceDetailsAsync(string token, string spaceID, string sourceName, object userState) {
            if ((this.getLiveAccessSourceDetailsOperationCompleted == null)) {
                this.getLiveAccessSourceDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLiveAccessSourceDetailsOperationCompleted);
            }
            this.InvokeAsync("getLiveAccessSourceDetails", new object[] {
                        token,
                        spaceID,
                        sourceName}, this.getLiveAccessSourceDetailsOperationCompleted, userState);
        }
        
        private void OngetLiveAccessSourceDetailsOperationCompleted(object arg) {
            if ((this.getLiveAccessSourceDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLiveAccessSourceDetailsCompleted(this, new getLiveAccessSourceDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/setLiveAccessSourceDetails", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setLiveAccessSourceDetails(string token, string spaceID, LiveAccessSourceSubClass data) {
            this.Invoke("setLiveAccessSourceDetails", new object[] {
                        token,
                        spaceID,
                        data});
        }
        
        /// <remarks/>
        public void setLiveAccessSourceDetailsAsync(string token, string spaceID, LiveAccessSourceSubClass data) {
            this.setLiveAccessSourceDetailsAsync(token, spaceID, data, null);
        }
        
        /// <remarks/>
        public void setLiveAccessSourceDetailsAsync(string token, string spaceID, LiveAccessSourceSubClass data, object userState) {
            if ((this.setLiveAccessSourceDetailsOperationCompleted == null)) {
                this.setLiveAccessSourceDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetLiveAccessSourceDetailsOperationCompleted);
            }
            this.InvokeAsync("setLiveAccessSourceDetails", new object[] {
                        token,
                        spaceID,
                        data}, this.setLiveAccessSourceDetailsOperationCompleted, userState);
        }
        
        private void OnsetLiveAccessSourceDetailsOperationCompleted(object arg) {
            if ((this.setLiveAccessSourceDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setLiveAccessSourceDetailsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/getLiveAccessColumnProperties", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LiveAccessSourceColumnSubClass getLiveAccessColumnProperties(string token, string spaceID, string sourceName, string columnName) {
            object[] results = this.Invoke("getLiveAccessColumnProperties", new object[] {
                        token,
                        spaceID,
                        sourceName,
                        columnName});
            return ((LiveAccessSourceColumnSubClass)(results[0]));
        }
        
        /// <remarks/>
        public void getLiveAccessColumnPropertiesAsync(string token, string spaceID, string sourceName, string columnName) {
            this.getLiveAccessColumnPropertiesAsync(token, spaceID, sourceName, columnName, null);
        }
        
        /// <remarks/>
        public void getLiveAccessColumnPropertiesAsync(string token, string spaceID, string sourceName, string columnName, object userState) {
            if ((this.getLiveAccessColumnPropertiesOperationCompleted == null)) {
                this.getLiveAccessColumnPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLiveAccessColumnPropertiesOperationCompleted);
            }
            this.InvokeAsync("getLiveAccessColumnProperties", new object[] {
                        token,
                        spaceID,
                        sourceName,
                        columnName}, this.getLiveAccessColumnPropertiesOperationCompleted, userState);
        }
        
        private void OngetLiveAccessColumnPropertiesOperationCompleted(object arg) {
            if ((this.getLiveAccessColumnPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLiveAccessColumnPropertiesCompleted(this, new getLiveAccessColumnPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/setLiveAccessColumnProperties", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setLiveAccessColumnProperties(string token, string spaceID, LiveAccessSourceColumnSubClass columnsData) {
            this.Invoke("setLiveAccessColumnProperties", new object[] {
                        token,
                        spaceID,
                        columnsData});
        }
        
        /// <remarks/>
        public void setLiveAccessColumnPropertiesAsync(string token, string spaceID, LiveAccessSourceColumnSubClass columnsData) {
            this.setLiveAccessColumnPropertiesAsync(token, spaceID, columnsData, null);
        }
        
        /// <remarks/>
        public void setLiveAccessColumnPropertiesAsync(string token, string spaceID, LiveAccessSourceColumnSubClass columnsData, object userState) {
            if ((this.setLiveAccessColumnPropertiesOperationCompleted == null)) {
                this.setLiveAccessColumnPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetLiveAccessColumnPropertiesOperationCompleted);
            }
            this.InvokeAsync("setLiveAccessColumnProperties", new object[] {
                        token,
                        spaceID,
                        columnsData}, this.setLiveAccessColumnPropertiesOperationCompleted, userState);
        }
        
        private void OnsetLiveAccessColumnPropertiesOperationCompleted(object arg) {
            if ((this.setLiveAccessColumnPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setLiveAccessColumnPropertiesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/uploadImageToReportCatalog", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void uploadImageToReportCatalog(string token, string spaceID, string dir, string reportFileName, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] image) {
            this.Invoke("uploadImageToReportCatalog", new object[] {
                        token,
                        spaceID,
                        dir,
                        reportFileName,
                        image});
        }
        
        /// <remarks/>
        public void uploadImageToReportCatalogAsync(string token, string spaceID, string dir, string reportFileName, byte[] image) {
            this.uploadImageToReportCatalogAsync(token, spaceID, dir, reportFileName, image, null);
        }
        
        /// <remarks/>
        public void uploadImageToReportCatalogAsync(string token, string spaceID, string dir, string reportFileName, byte[] image, object userState) {
            if ((this.uploadImageToReportCatalogOperationCompleted == null)) {
                this.uploadImageToReportCatalogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuploadImageToReportCatalogOperationCompleted);
            }
            this.InvokeAsync("uploadImageToReportCatalog", new object[] {
                        token,
                        spaceID,
                        dir,
                        reportFileName,
                        image}, this.uploadImageToReportCatalogOperationCompleted, userState);
        }
        
        private void OnuploadImageToReportCatalogOperationCompleted(object arg) {
            if ((this.uploadImageToReportCatalogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.uploadImageToReportCatalogCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/getSpaceComments", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getSpaceComments(string token, string spaceID) {
            object[] results = this.Invoke("getSpaceComments", new object[] {
                        token,
                        spaceID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getSpaceCommentsAsync(string token, string spaceID) {
            this.getSpaceCommentsAsync(token, spaceID, null);
        }
        
        /// <remarks/>
        public void getSpaceCommentsAsync(string token, string spaceID, object userState) {
            if ((this.getSpaceCommentsOperationCompleted == null)) {
                this.getSpaceCommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSpaceCommentsOperationCompleted);
            }
            this.InvokeAsync("getSpaceComments", new object[] {
                        token,
                        spaceID}, this.getSpaceCommentsOperationCompleted, userState);
        }
        
        private void OngetSpaceCommentsOperationCompleted(object arg) {
            if ((this.getSpaceCommentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSpaceCommentsCompleted(this, new getSpaceCommentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/setSpaceProcessEngineVersion", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setSpaceProcessEngineVersion(string token, string spaceID, string processingVersionName) {
            this.Invoke("setSpaceProcessEngineVersion", new object[] {
                        token,
                        spaceID,
                        processingVersionName});
        }
        
        /// <remarks/>
        public void setSpaceProcessEngineVersionAsync(string token, string spaceID, string processingVersionName) {
            this.setSpaceProcessEngineVersionAsync(token, spaceID, processingVersionName, null);
        }
        
        /// <remarks/>
        public void setSpaceProcessEngineVersionAsync(string token, string spaceID, string processingVersionName, object userState) {
            if ((this.setSpaceProcessEngineVersionOperationCompleted == null)) {
                this.setSpaceProcessEngineVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetSpaceProcessEngineVersionOperationCompleted);
            }
            this.InvokeAsync("setSpaceProcessEngineVersion", new object[] {
                        token,
                        spaceID,
                        processingVersionName}, this.setSpaceProcessEngineVersionOperationCompleted, userState);
        }
        
        private void OnsetSpaceProcessEngineVersionOperationCompleted(object arg) {
            if ((this.setSpaceProcessEngineVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setSpaceProcessEngineVersionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/getSpaceProcessEngineVersion", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getSpaceProcessEngineVersion(string token, string spaceID) {
            object[] results = this.Invoke("getSpaceProcessEngineVersion", new object[] {
                        token,
                        spaceID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getSpaceProcessEngineVersionAsync(string token, string spaceID) {
            this.getSpaceProcessEngineVersionAsync(token, spaceID, null);
        }
        
        /// <remarks/>
        public void getSpaceProcessEngineVersionAsync(string token, string spaceID, object userState) {
            if ((this.getSpaceProcessEngineVersionOperationCompleted == null)) {
                this.getSpaceProcessEngineVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSpaceProcessEngineVersionOperationCompleted);
            }
            this.InvokeAsync("getSpaceProcessEngineVersion", new object[] {
                        token,
                        spaceID}, this.getSpaceProcessEngineVersionOperationCompleted, userState);
        }
        
        private void OngetSpaceProcessEngineVersionOperationCompleted(object arg) {
            if ((this.getSpaceProcessEngineVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSpaceProcessEngineVersionCompleted(this, new getSpaceProcessEngineVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/getODBCMetaData", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MetaDataResult getODBCMetaData(string token, string spaceID) {
            object[] results = this.Invoke("getODBCMetaData", new object[] {
                        token,
                        spaceID});
            return ((MetaDataResult)(results[0]));
        }
        
        /// <remarks/>
        public void getODBCMetaDataAsync(string token, string spaceID) {
            this.getODBCMetaDataAsync(token, spaceID, null);
        }
        
        /// <remarks/>
        public void getODBCMetaDataAsync(string token, string spaceID, object userState) {
            if ((this.getODBCMetaDataOperationCompleted == null)) {
                this.getODBCMetaDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetODBCMetaDataOperationCompleted);
            }
            this.InvokeAsync("getODBCMetaData", new object[] {
                        token,
                        spaceID}, this.getODBCMetaDataOperationCompleted, userState);
        }
        
        private void OngetODBCMetaDataOperationCompleted(object arg) {
            if ((this.getODBCMetaDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getODBCMetaDataCompleted(this, new getODBCMetaDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/getODBCMetaDataSubjectAreas", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MetaDataResult getODBCMetaDataSubjectAreas(string token, string spaceID) {
            object[] results = this.Invoke("getODBCMetaDataSubjectAreas", new object[] {
                        token,
                        spaceID});
            return ((MetaDataResult)(results[0]));
        }
        
        /// <remarks/>
        public void getODBCMetaDataSubjectAreasAsync(string token, string spaceID) {
            this.getODBCMetaDataSubjectAreasAsync(token, spaceID, null);
        }
        
        /// <remarks/>
        public void getODBCMetaDataSubjectAreasAsync(string token, string spaceID, object userState) {
            if ((this.getODBCMetaDataSubjectAreasOperationCompleted == null)) {
                this.getODBCMetaDataSubjectAreasOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetODBCMetaDataSubjectAreasOperationCompleted);
            }
            this.InvokeAsync("getODBCMetaDataSubjectAreas", new object[] {
                        token,
                        spaceID}, this.getODBCMetaDataSubjectAreasOperationCompleted, userState);
        }
        
        private void OngetODBCMetaDataSubjectAreasOperationCompleted(object arg) {
            if ((this.getODBCMetaDataSubjectAreasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getODBCMetaDataSubjectAreasCompleted(this, new getODBCMetaDataSubjectAreasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/createProfile", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Profile createProfile(string token, string name, string description) {
            object[] results = this.Invoke("createProfile", new object[] {
                        token,
                        name,
                        description});
            return ((Profile)(results[0]));
        }
        
        /// <remarks/>
        public void createProfileAsync(string token, string name, string description) {
            this.createProfileAsync(token, name, description, null);
        }
        
        /// <remarks/>
        public void createProfileAsync(string token, string name, string description, object userState) {
            if ((this.createProfileOperationCompleted == null)) {
                this.createProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateProfileOperationCompleted);
            }
            this.InvokeAsync("createProfile", new object[] {
                        token,
                        name,
                        description}, this.createProfileOperationCompleted, userState);
        }
        
        private void OncreateProfileOperationCompleted(object arg) {
            if ((this.createProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createProfileCompleted(this, new createProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/listProfiles", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Profile[] listProfiles(string token) {
            object[] results = this.Invoke("listProfiles", new object[] {
                        token});
            return ((Profile[])(results[0]));
        }
        
        /// <remarks/>
        public void listProfilesAsync(string token) {
            this.listProfilesAsync(token, null);
        }
        
        /// <remarks/>
        public void listProfilesAsync(string token, object userState) {
            if ((this.listProfilesOperationCompleted == null)) {
                this.listProfilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistProfilesOperationCompleted);
            }
            this.InvokeAsync("listProfiles", new object[] {
                        token}, this.listProfilesOperationCompleted, userState);
        }
        
        private void OnlistProfilesOperationCompleted(object arg) {
            if ((this.listProfilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listProfilesCompleted(this, new listProfilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/getProfile", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Profile getProfile(string token, string profileID) {
            object[] results = this.Invoke("getProfile", new object[] {
                        token,
                        profileID});
            return ((Profile)(results[0]));
        }
        
        /// <remarks/>
        public void getProfileAsync(string token, string profileID) {
            this.getProfileAsync(token, profileID, null);
        }
        
        /// <remarks/>
        public void getProfileAsync(string token, string profileID, object userState) {
            if ((this.getProfileOperationCompleted == null)) {
                this.getProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProfileOperationCompleted);
            }
            this.InvokeAsync("getProfile", new object[] {
                        token,
                        profileID}, this.getProfileOperationCompleted, userState);
        }
        
        private void OngetProfileOperationCompleted(object arg) {
            if ((this.getProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProfileCompleted(this, new getProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/getProfileDetails", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Profile getProfileDetails(string token, string profileID) {
            object[] results = this.Invoke("getProfileDetails", new object[] {
                        token,
                        profileID});
            return ((Profile)(results[0]));
        }
        
        /// <remarks/>
        public void getProfileDetailsAsync(string token, string profileID) {
            this.getProfileDetailsAsync(token, profileID, null);
        }
        
        /// <remarks/>
        public void getProfileDetailsAsync(string token, string profileID, object userState) {
            if ((this.getProfileDetailsOperationCompleted == null)) {
                this.getProfileDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProfileDetailsOperationCompleted);
            }
            this.InvokeAsync("getProfileDetails", new object[] {
                        token,
                        profileID}, this.getProfileDetailsOperationCompleted, userState);
        }
        
        private void OngetProfileDetailsOperationCompleted(object arg) {
            if ((this.getProfileDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProfileDetailsCompleted(this, new getProfileDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/updateProfile", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updateProfile(string token, string profileID, string name, string description) {
            this.Invoke("updateProfile", new object[] {
                        token,
                        profileID,
                        name,
                        description});
        }
        
        /// <remarks/>
        public void updateProfileAsync(string token, string profileID, string name, string description) {
            this.updateProfileAsync(token, profileID, name, description, null);
        }
        
        /// <remarks/>
        public void updateProfileAsync(string token, string profileID, string name, string description, object userState) {
            if ((this.updateProfileOperationCompleted == null)) {
                this.updateProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateProfileOperationCompleted);
            }
            this.InvokeAsync("updateProfile", new object[] {
                        token,
                        profileID,
                        name,
                        description}, this.updateProfileOperationCompleted, userState);
        }
        
        private void OnupdateProfileOperationCompleted(object arg) {
            if ((this.updateProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateProfileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/deleteProfile", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteProfile(string token, string profileID) {
            this.Invoke("deleteProfile", new object[] {
                        token,
                        profileID});
        }
        
        /// <remarks/>
        public void deleteProfileAsync(string token, string profileID) {
            this.deleteProfileAsync(token, profileID, null);
        }
        
        /// <remarks/>
        public void deleteProfileAsync(string token, string profileID, object userState) {
            if ((this.deleteProfileOperationCompleted == null)) {
                this.deleteProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteProfileOperationCompleted);
            }
            this.InvokeAsync("deleteProfile", new object[] {
                        token,
                        profileID}, this.deleteProfileOperationCompleted, userState);
        }
        
        private void OndeleteProfileOperationCompleted(object arg) {
            if ((this.deleteProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteProfileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/getProfilePropertyWithLocale", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProfileProperty getProfilePropertyWithLocale(string token, string profileID, string propertyName, string locale) {
            object[] results = this.Invoke("getProfilePropertyWithLocale", new object[] {
                        token,
                        profileID,
                        propertyName,
                        locale});
            return ((ProfileProperty)(results[0]));
        }
        
        /// <remarks/>
        public void getProfilePropertyWithLocaleAsync(string token, string profileID, string propertyName, string locale) {
            this.getProfilePropertyWithLocaleAsync(token, profileID, propertyName, locale, null);
        }
        
        /// <remarks/>
        public void getProfilePropertyWithLocaleAsync(string token, string profileID, string propertyName, string locale, object userState) {
            if ((this.getProfilePropertyWithLocaleOperationCompleted == null)) {
                this.getProfilePropertyWithLocaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProfilePropertyWithLocaleOperationCompleted);
            }
            this.InvokeAsync("getProfilePropertyWithLocale", new object[] {
                        token,
                        profileID,
                        propertyName,
                        locale}, this.getProfilePropertyWithLocaleOperationCompleted, userState);
        }
        
        private void OngetProfilePropertyWithLocaleOperationCompleted(object arg) {
            if ((this.getProfilePropertyWithLocaleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProfilePropertyWithLocaleCompleted(this, new getProfilePropertyWithLocaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/getProfileProperty", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProfileProperty[] getProfileProperty(string token, string profileID, string propertyName) {
            object[] results = this.Invoke("getProfileProperty", new object[] {
                        token,
                        profileID,
                        propertyName});
            return ((ProfileProperty[])(results[0]));
        }
        
        /// <remarks/>
        public void getProfilePropertyAsync(string token, string profileID, string propertyName) {
            this.getProfilePropertyAsync(token, profileID, propertyName, null);
        }
        
        /// <remarks/>
        public void getProfilePropertyAsync(string token, string profileID, string propertyName, object userState) {
            if ((this.getProfilePropertyOperationCompleted == null)) {
                this.getProfilePropertyOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProfilePropertyOperationCompleted);
            }
            this.InvokeAsync("getProfileProperty", new object[] {
                        token,
                        profileID,
                        propertyName}, this.getProfilePropertyOperationCompleted, userState);
        }
        
        private void OngetProfilePropertyOperationCompleted(object arg) {
            if ((this.getProfilePropertyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProfilePropertyCompleted(this, new getProfilePropertyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/setProfileProperty", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setProfileProperty(string token, string profileID, ProfileProperty property) {
            this.Invoke("setProfileProperty", new object[] {
                        token,
                        profileID,
                        property});
        }
        
        /// <remarks/>
        public void setProfilePropertyAsync(string token, string profileID, ProfileProperty property) {
            this.setProfilePropertyAsync(token, profileID, property, null);
        }
        
        /// <remarks/>
        public void setProfilePropertyAsync(string token, string profileID, ProfileProperty property, object userState) {
            if ((this.setProfilePropertyOperationCompleted == null)) {
                this.setProfilePropertyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetProfilePropertyOperationCompleted);
            }
            this.InvokeAsync("setProfileProperty", new object[] {
                        token,
                        profileID,
                        property}, this.setProfilePropertyOperationCompleted, userState);
        }
        
        private void OnsetProfilePropertyOperationCompleted(object arg) {
            if ((this.setProfilePropertyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setProfilePropertyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/deleteLocaleValueInProfileProperty", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteLocaleValueInProfileProperty(string token, string profileID, string propertyName, string locale) {
            this.Invoke("deleteLocaleValueInProfileProperty", new object[] {
                        token,
                        profileID,
                        propertyName,
                        locale});
        }
        
        /// <remarks/>
        public void deleteLocaleValueInProfilePropertyAsync(string token, string profileID, string propertyName, string locale) {
            this.deleteLocaleValueInProfilePropertyAsync(token, profileID, propertyName, locale, null);
        }
        
        /// <remarks/>
        public void deleteLocaleValueInProfilePropertyAsync(string token, string profileID, string propertyName, string locale, object userState) {
            if ((this.deleteLocaleValueInProfilePropertyOperationCompleted == null)) {
                this.deleteLocaleValueInProfilePropertyOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteLocaleValueInProfilePropertyOperationCompleted);
            }
            this.InvokeAsync("deleteLocaleValueInProfileProperty", new object[] {
                        token,
                        profileID,
                        propertyName,
                        locale}, this.deleteLocaleValueInProfilePropertyOperationCompleted, userState);
        }
        
        private void OndeleteLocaleValueInProfilePropertyOperationCompleted(object arg) {
            if ((this.deleteLocaleValueInProfilePropertyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteLocaleValueInProfilePropertyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/linkProfileToAccount", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void linkProfileToAccount(string token, string profileID) {
            this.Invoke("linkProfileToAccount", new object[] {
                        token,
                        profileID});
        }
        
        /// <remarks/>
        public void linkProfileToAccountAsync(string token, string profileID) {
            this.linkProfileToAccountAsync(token, profileID, null);
        }
        
        /// <remarks/>
        public void linkProfileToAccountAsync(string token, string profileID, object userState) {
            if ((this.linkProfileToAccountOperationCompleted == null)) {
                this.linkProfileToAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlinkProfileToAccountOperationCompleted);
            }
            this.InvokeAsync("linkProfileToAccount", new object[] {
                        token,
                        profileID}, this.linkProfileToAccountOperationCompleted, userState);
        }
        
        private void OnlinkProfileToAccountOperationCompleted(object arg) {
            if ((this.linkProfileToAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.linkProfileToAccountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/linkProfileToUsers", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void linkProfileToUsers(string token, UserProfileMapping[] userProfileList) {
            this.Invoke("linkProfileToUsers", new object[] {
                        token,
                        userProfileList});
        }
        
        /// <remarks/>
        public void linkProfileToUsersAsync(string token, UserProfileMapping[] userProfileList) {
            this.linkProfileToUsersAsync(token, userProfileList, null);
        }
        
        /// <remarks/>
        public void linkProfileToUsersAsync(string token, UserProfileMapping[] userProfileList, object userState) {
            if ((this.linkProfileToUsersOperationCompleted == null)) {
                this.linkProfileToUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlinkProfileToUsersOperationCompleted);
            }
            this.InvokeAsync("linkProfileToUsers", new object[] {
                        token,
                        userProfileList}, this.linkProfileToUsersOperationCompleted, userState);
        }
        
        private void OnlinkProfileToUsersOperationCompleted(object arg) {
            if ((this.linkProfileToUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.linkProfileToUsersCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/unlinkProfileFromUsers", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void unlinkProfileFromUsers(string token, string[] userList) {
            this.Invoke("unlinkProfileFromUsers", new object[] {
                        token,
                        userList});
        }
        
        /// <remarks/>
        public void unlinkProfileFromUsersAsync(string token, string[] userList) {
            this.unlinkProfileFromUsersAsync(token, userList, null);
        }
        
        /// <remarks/>
        public void unlinkProfileFromUsersAsync(string token, string[] userList, object userState) {
            if ((this.unlinkProfileFromUsersOperationCompleted == null)) {
                this.unlinkProfileFromUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunlinkProfileFromUsersOperationCompleted);
            }
            this.InvokeAsync("unlinkProfileFromUsers", new object[] {
                        token,
                        userList}, this.unlinkProfileFromUsersOperationCompleted, userState);
        }
        
        private void OnunlinkProfileFromUsersOperationCompleted(object arg) {
            if ((this.unlinkProfileFromUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unlinkProfileFromUsersCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/unlinkProfileFromAccount", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void unlinkProfileFromAccount(string token) {
            this.Invoke("unlinkProfileFromAccount", new object[] {
                        token});
        }
        
        /// <remarks/>
        public void unlinkProfileFromAccountAsync(string token) {
            this.unlinkProfileFromAccountAsync(token, null);
        }
        
        /// <remarks/>
        public void unlinkProfileFromAccountAsync(string token, object userState) {
            if ((this.unlinkProfileFromAccountOperationCompleted == null)) {
                this.unlinkProfileFromAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunlinkProfileFromAccountOperationCompleted);
            }
            this.InvokeAsync("unlinkProfileFromAccount", new object[] {
                        token}, this.unlinkProfileFromAccountOperationCompleted, userState);
        }
        
        private void OnunlinkProfileFromAccountOperationCompleted(object arg) {
            if ((this.unlinkProfileFromAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unlinkProfileFromAccountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/getUserProfile", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Profile getUserProfile(string token) {
            object[] results = this.Invoke("getUserProfile", new object[] {
                        token});
            return ((Profile)(results[0]));
        }
        
        /// <remarks/>
        public void getUserProfileAsync(string token) {
            this.getUserProfileAsync(token, null);
        }
        
        /// <remarks/>
        public void getUserProfileAsync(string token, object userState) {
            if ((this.getUserProfileOperationCompleted == null)) {
                this.getUserProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserProfileOperationCompleted);
            }
            this.InvokeAsync("getUserProfile", new object[] {
                        token}, this.getUserProfileOperationCompleted, userState);
        }
        
        private void OngetUserProfileOperationCompleted(object arg) {
            if ((this.getUserProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserProfileCompleted(this, new getUserProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/getUserProfileDetails", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Profile getUserProfileDetails(string token) {
            object[] results = this.Invoke("getUserProfileDetails", new object[] {
                        token});
            return ((Profile)(results[0]));
        }
        
        /// <remarks/>
        public void getUserProfileDetailsAsync(string token) {
            this.getUserProfileDetailsAsync(token, null);
        }
        
        /// <remarks/>
        public void getUserProfileDetailsAsync(string token, object userState) {
            if ((this.getUserProfileDetailsOperationCompleted == null)) {
                this.getUserProfileDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserProfileDetailsOperationCompleted);
            }
            this.InvokeAsync("getUserProfileDetails", new object[] {
                        token}, this.getUserProfileDetailsOperationCompleted, userState);
        }
        
        private void OngetUserProfileDetailsOperationCompleted(object arg) {
            if ((this.getUserProfileDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserProfileDetailsCompleted(this, new getUserProfileDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/getDefaultProfile", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Profile getDefaultProfile(string token) {
            object[] results = this.Invoke("getDefaultProfile", new object[] {
                        token});
            return ((Profile)(results[0]));
        }
        
        /// <remarks/>
        public void getDefaultProfileAsync(string token) {
            this.getDefaultProfileAsync(token, null);
        }
        
        /// <remarks/>
        public void getDefaultProfileAsync(string token, object userState) {
            if ((this.getDefaultProfileOperationCompleted == null)) {
                this.getDefaultProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDefaultProfileOperationCompleted);
            }
            this.InvokeAsync("getDefaultProfile", new object[] {
                        token}, this.getDefaultProfileOperationCompleted, userState);
        }
        
        private void OngetDefaultProfileOperationCompleted(object arg) {
            if ((this.getDefaultProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDefaultProfileCompleted(this, new getDefaultProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/getDefaultProfileDetails", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Profile getDefaultProfileDetails(string token) {
            object[] results = this.Invoke("getDefaultProfileDetails", new object[] {
                        token});
            return ((Profile)(results[0]));
        }
        
        /// <remarks/>
        public void getDefaultProfileDetailsAsync(string token) {
            this.getDefaultProfileDetailsAsync(token, null);
        }
        
        /// <remarks/>
        public void getDefaultProfileDetailsAsync(string token, object userState) {
            if ((this.getDefaultProfileDetailsOperationCompleted == null)) {
                this.getDefaultProfileDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDefaultProfileDetailsOperationCompleted);
            }
            this.InvokeAsync("getDefaultProfileDetails", new object[] {
                        token}, this.getDefaultProfileDetailsOperationCompleted, userState);
        }
        
        private void OngetDefaultProfileDetailsOperationCompleted(object arg) {
            if ((this.getDefaultProfileDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDefaultProfileDetailsCompleted(this, new getDefaultProfileDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/getProfileForUser", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Profile getProfileForUser(string token, string username) {
            object[] results = this.Invoke("getProfileForUser", new object[] {
                        token,
                        username});
            return ((Profile)(results[0]));
        }
        
        /// <remarks/>
        public void getProfileForUserAsync(string token, string username) {
            this.getProfileForUserAsync(token, username, null);
        }
        
        /// <remarks/>
        public void getProfileForUserAsync(string token, string username, object userState) {
            if ((this.getProfileForUserOperationCompleted == null)) {
                this.getProfileForUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProfileForUserOperationCompleted);
            }
            this.InvokeAsync("getProfileForUser", new object[] {
                        token,
                        username}, this.getProfileForUserOperationCompleted, userState);
        }
        
        private void OngetProfileForUserOperationCompleted(object arg) {
            if ((this.getProfileForUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProfileForUserCompleted(this, new getProfileForUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/getUsersForProfile", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] getUsersForProfile(string token, string profileId) {
            object[] results = this.Invoke("getUsersForProfile", new object[] {
                        token,
                        profileId});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getUsersForProfileAsync(string token, string profileId) {
            this.getUsersForProfileAsync(token, profileId, null);
        }
        
        /// <remarks/>
        public void getUsersForProfileAsync(string token, string profileId, object userState) {
            if ((this.getUsersForProfileOperationCompleted == null)) {
                this.getUsersForProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUsersForProfileOperationCompleted);
            }
            this.InvokeAsync("getUsersForProfile", new object[] {
                        token,
                        profileId}, this.getUsersForProfileOperationCompleted, userState);
        }
        
        private void OngetUsersForProfileOperationCompleted(object arg) {
            if ((this.getUsersForProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUsersForProfileCompleted(this, new getUsersForProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/getDashboardView", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] getDashboardView(string token, string userName) {
            object[] results = this.Invoke("getDashboardView", new object[] {
                        token,
                        userName});
            return ((System.Xml.XmlElement[])(results[0]));
        }
        
        /// <remarks/>
        public void getDashboardViewAsync(string token, string userName) {
            this.getDashboardViewAsync(token, userName, null);
        }
        
        /// <remarks/>
        public void getDashboardViewAsync(string token, string userName, object userState) {
            if ((this.getDashboardViewOperationCompleted == null)) {
                this.getDashboardViewOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDashboardViewOperationCompleted);
            }
            this.InvokeAsync("getDashboardView", new object[] {
                        token,
                        userName}, this.getDashboardViewOperationCompleted, userState);
        }
        
        private void OngetDashboardViewOperationCompleted(object arg) {
            if ((this.getDashboardViewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDashboardViewCompleted(this, new getDashboardViewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/setDashboardView", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setDashboardView(string token, string userName, string dashboardView) {
            this.Invoke("setDashboardView", new object[] {
                        token,
                        userName,
                        dashboardView});
        }
        
        /// <remarks/>
        public void setDashboardViewAsync(string token, string userName, string dashboardView) {
            this.setDashboardViewAsync(token, userName, dashboardView, null);
        }
        
        /// <remarks/>
        public void setDashboardViewAsync(string token, string userName, string dashboardView, object userState) {
            if ((this.setDashboardViewOperationCompleted == null)) {
                this.setDashboardViewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetDashboardViewOperationCompleted);
            }
            this.InvokeAsync("setDashboardView", new object[] {
                        token,
                        userName,
                        dashboardView}, this.setDashboardViewOperationCompleted, userState);
        }
        
        private void OnsetDashboardViewOperationCompleted(object arg) {
            if ((this.setDashboardViewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setDashboardViewCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/rebuildIndices", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string rebuildIndices(string token, string spaceID) {
            object[] results = this.Invoke("rebuildIndices", new object[] {
                        token,
                        spaceID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void rebuildIndicesAsync(string token, string spaceID) {
            this.rebuildIndicesAsync(token, spaceID, null);
        }
        
        /// <remarks/>
        public void rebuildIndicesAsync(string token, string spaceID, object userState) {
            if ((this.rebuildIndicesOperationCompleted == null)) {
                this.rebuildIndicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrebuildIndicesOperationCompleted);
            }
            this.InvokeAsync("rebuildIndices", new object[] {
                        token,
                        spaceID}, this.rebuildIndicesOperationCompleted, userState);
        }
        
        private void OnrebuildIndicesOperationCompleted(object arg) {
            if ((this.rebuildIndicesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.rebuildIndicesCompleted(this, new rebuildIndicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/loadStagingtableFromS3Bucket", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string loadStagingtableFromS3Bucket(string token, string spaceID, RedshiftStagingDetails stagingDetails) {
            object[] results = this.Invoke("loadStagingtableFromS3Bucket", new object[] {
                        token,
                        spaceID,
                        stagingDetails});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void loadStagingtableFromS3BucketAsync(string token, string spaceID, RedshiftStagingDetails stagingDetails) {
            this.loadStagingtableFromS3BucketAsync(token, spaceID, stagingDetails, null);
        }
        
        /// <remarks/>
        public void loadStagingtableFromS3BucketAsync(string token, string spaceID, RedshiftStagingDetails stagingDetails, object userState) {
            if ((this.loadStagingtableFromS3BucketOperationCompleted == null)) {
                this.loadStagingtableFromS3BucketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloadStagingtableFromS3BucketOperationCompleted);
            }
            this.InvokeAsync("loadStagingtableFromS3Bucket", new object[] {
                        token,
                        spaceID,
                        stagingDetails}, this.loadStagingtableFromS3BucketOperationCompleted, userState);
        }
        
        private void OnloadStagingtableFromS3BucketOperationCompleted(object arg) {
            if ((this.loadStagingtableFromS3BucketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loadStagingtableFromS3BucketCompleted(this, new loadStagingtableFromS3BucketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/addSfdcAccountMapping", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addSfdcAccountMapping(string token, string sfdcOrgID) {
            this.Invoke("addSfdcAccountMapping", new object[] {
                        token,
                        sfdcOrgID});
        }
        
        /// <remarks/>
        public void addSfdcAccountMappingAsync(string token, string sfdcOrgID) {
            this.addSfdcAccountMappingAsync(token, sfdcOrgID, null);
        }
        
        /// <remarks/>
        public void addSfdcAccountMappingAsync(string token, string sfdcOrgID, object userState) {
            if ((this.addSfdcAccountMappingOperationCompleted == null)) {
                this.addSfdcAccountMappingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddSfdcAccountMappingOperationCompleted);
            }
            this.InvokeAsync("addSfdcAccountMapping", new object[] {
                        token,
                        sfdcOrgID}, this.addSfdcAccountMappingOperationCompleted, userState);
        }
        
        private void OnaddSfdcAccountMappingOperationCompleted(object arg) {
            if ((this.addSfdcAccountMappingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addSfdcAccountMappingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/removeSfdcAccountMapping", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void removeSfdcAccountMapping(string token, string sfdcOrgID) {
            this.Invoke("removeSfdcAccountMapping", new object[] {
                        token,
                        sfdcOrgID});
        }
        
        /// <remarks/>
        public void removeSfdcAccountMappingAsync(string token, string sfdcOrgID) {
            this.removeSfdcAccountMappingAsync(token, sfdcOrgID, null);
        }
        
        /// <remarks/>
        public void removeSfdcAccountMappingAsync(string token, string sfdcOrgID, object userState) {
            if ((this.removeSfdcAccountMappingOperationCompleted == null)) {
                this.removeSfdcAccountMappingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveSfdcAccountMappingOperationCompleted);
            }
            this.InvokeAsync("removeSfdcAccountMapping", new object[] {
                        token,
                        sfdcOrgID}, this.removeSfdcAccountMappingOperationCompleted, userState);
        }
        
        private void OnremoveSfdcAccountMappingOperationCompleted(object arg) {
            if ((this.removeSfdcAccountMappingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeSfdcAccountMappingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/getSfdcAccountMapping", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] getSfdcAccountMapping(string token) {
            object[] results = this.Invoke("getSfdcAccountMapping", new object[] {
                        token});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getSfdcAccountMappingAsync(string token) {
            this.getSfdcAccountMappingAsync(token, null);
        }
        
        /// <remarks/>
        public void getSfdcAccountMappingAsync(string token, object userState) {
            if ((this.getSfdcAccountMappingOperationCompleted == null)) {
                this.getSfdcAccountMappingOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSfdcAccountMappingOperationCompleted);
            }
            this.InvokeAsync("getSfdcAccountMapping", new object[] {
                        token}, this.getSfdcAccountMappingOperationCompleted, userState);
        }
        
        private void OngetSfdcAccountMappingOperationCompleted(object arg) {
            if ((this.getSfdcAccountMappingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSfdcAccountMappingCompleted(this, new getSfdcAccountMappingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/setDenyAddSpace", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setDenyAddSpace(string token, string userName, string disable) {
            this.Invoke("setDenyAddSpace", new object[] {
                        token,
                        userName,
                        disable});
        }
        
        /// <remarks/>
        public void setDenyAddSpaceAsync(string token, string userName, string disable) {
            this.setDenyAddSpaceAsync(token, userName, disable, null);
        }
        
        /// <remarks/>
        public void setDenyAddSpaceAsync(string token, string userName, string disable, object userState) {
            if ((this.setDenyAddSpaceOperationCompleted == null)) {
                this.setDenyAddSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetDenyAddSpaceOperationCompleted);
            }
            this.InvokeAsync("setDenyAddSpace", new object[] {
                        token,
                        userName,
                        disable}, this.setDenyAddSpaceOperationCompleted, userState);
        }
        
        private void OnsetDenyAddSpaceOperationCompleted(object arg) {
            if ((this.setDenyAddSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setDenyAddSpaceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/addEmailDomains", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addEmailDomains(string token, string[] domainList) {
            this.Invoke("addEmailDomains", new object[] {
                        token,
                        domainList});
        }
        
        /// <remarks/>
        public void addEmailDomainsAsync(string token, string[] domainList) {
            this.addEmailDomainsAsync(token, domainList, null);
        }
        
        /// <remarks/>
        public void addEmailDomainsAsync(string token, string[] domainList, object userState) {
            if ((this.addEmailDomainsOperationCompleted == null)) {
                this.addEmailDomainsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddEmailDomainsOperationCompleted);
            }
            this.InvokeAsync("addEmailDomains", new object[] {
                        token,
                        domainList}, this.addEmailDomainsOperationCompleted, userState);
        }
        
        private void OnaddEmailDomainsOperationCompleted(object arg) {
            if ((this.addEmailDomainsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addEmailDomainsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/listEmailDomains", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmailDomain[] listEmailDomains(string token) {
            object[] results = this.Invoke("listEmailDomains", new object[] {
                        token});
            return ((EmailDomain[])(results[0]));
        }
        
        /// <remarks/>
        public void listEmailDomainsAsync(string token) {
            this.listEmailDomainsAsync(token, null);
        }
        
        /// <remarks/>
        public void listEmailDomainsAsync(string token, object userState) {
            if ((this.listEmailDomainsOperationCompleted == null)) {
                this.listEmailDomainsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistEmailDomainsOperationCompleted);
            }
            this.InvokeAsync("listEmailDomains", new object[] {
                        token}, this.listEmailDomainsOperationCompleted, userState);
        }
        
        private void OnlistEmailDomainsOperationCompleted(object arg) {
            if ((this.listEmailDomainsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listEmailDomainsCompleted(this, new listEmailDomainsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/removeEmailDomains", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void removeEmailDomains(string token) {
            this.Invoke("removeEmailDomains", new object[] {
                        token});
        }
        
        /// <remarks/>
        public void removeEmailDomainsAsync(string token) {
            this.removeEmailDomainsAsync(token, null);
        }
        
        /// <remarks/>
        public void removeEmailDomainsAsync(string token, object userState) {
            if ((this.removeEmailDomainsOperationCompleted == null)) {
                this.removeEmailDomainsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveEmailDomainsOperationCompleted);
            }
            this.InvokeAsync("removeEmailDomains", new object[] {
                        token}, this.removeEmailDomainsOperationCompleted, userState);
        }
        
        private void OnremoveEmailDomainsOperationCompleted(object arg) {
            if ((this.removeEmailDomainsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeEmailDomainsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/createHierarchy", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool createHierarchy(string token, string spaceID, HierarchyMetadata hmd) {
            object[] results = this.Invoke("createHierarchy", new object[] {
                        token,
                        spaceID,
                        hmd});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void createHierarchyAsync(string token, string spaceID, HierarchyMetadata hmd) {
            this.createHierarchyAsync(token, spaceID, hmd, null);
        }
        
        /// <remarks/>
        public void createHierarchyAsync(string token, string spaceID, HierarchyMetadata hmd, object userState) {
            if ((this.createHierarchyOperationCompleted == null)) {
                this.createHierarchyOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateHierarchyOperationCompleted);
            }
            this.InvokeAsync("createHierarchy", new object[] {
                        token,
                        spaceID,
                        hmd}, this.createHierarchyOperationCompleted, userState);
        }
        
        private void OncreateHierarchyOperationCompleted(object arg) {
            if ((this.createHierarchyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createHierarchyCompleted(this, new createHierarchyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/deleteHierarchy", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteHierarchy(string token, string spaceID, string hierarchyName) {
            object[] results = this.Invoke("deleteHierarchy", new object[] {
                        token,
                        spaceID,
                        hierarchyName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteHierarchyAsync(string token, string spaceID, string hierarchyName) {
            this.deleteHierarchyAsync(token, spaceID, hierarchyName, null);
        }
        
        /// <remarks/>
        public void deleteHierarchyAsync(string token, string spaceID, string hierarchyName, object userState) {
            if ((this.deleteHierarchyOperationCompleted == null)) {
                this.deleteHierarchyOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteHierarchyOperationCompleted);
            }
            this.InvokeAsync("deleteHierarchy", new object[] {
                        token,
                        spaceID,
                        hierarchyName}, this.deleteHierarchyOperationCompleted, userState);
        }
        
        private void OndeleteHierarchyOperationCompleted(object arg) {
            if ((this.deleteHierarchyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteHierarchyCompleted(this, new deleteHierarchyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/getHierarchy", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HierarchyMetadata getHierarchy(string token, string spaceID, string hierarchyName) {
            object[] results = this.Invoke("getHierarchy", new object[] {
                        token,
                        spaceID,
                        hierarchyName});
            return ((HierarchyMetadata)(results[0]));
        }
        
        /// <remarks/>
        public void getHierarchyAsync(string token, string spaceID, string hierarchyName) {
            this.getHierarchyAsync(token, spaceID, hierarchyName, null);
        }
        
        /// <remarks/>
        public void getHierarchyAsync(string token, string spaceID, string hierarchyName, object userState) {
            if ((this.getHierarchyOperationCompleted == null)) {
                this.getHierarchyOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetHierarchyOperationCompleted);
            }
            this.InvokeAsync("getHierarchy", new object[] {
                        token,
                        spaceID,
                        hierarchyName}, this.getHierarchyOperationCompleted, userState);
        }
        
        private void OngetHierarchyOperationCompleted(object arg) {
            if ((this.getHierarchyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getHierarchyCompleted(this, new getHierarchyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/updateHierarchy", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool updateHierarchy(string token, string spaceID, string hierarchyName, HierarchyMetadata hmd) {
            object[] results = this.Invoke("updateHierarchy", new object[] {
                        token,
                        spaceID,
                        hierarchyName,
                        hmd});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateHierarchyAsync(string token, string spaceID, string hierarchyName, HierarchyMetadata hmd) {
            this.updateHierarchyAsync(token, spaceID, hierarchyName, hmd, null);
        }
        
        /// <remarks/>
        public void updateHierarchyAsync(string token, string spaceID, string hierarchyName, HierarchyMetadata hmd, object userState) {
            if ((this.updateHierarchyOperationCompleted == null)) {
                this.updateHierarchyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateHierarchyOperationCompleted);
            }
            this.InvokeAsync("updateHierarchy", new object[] {
                        token,
                        spaceID,
                        hierarchyName,
                        hmd}, this.updateHierarchyOperationCompleted, userState);
        }
        
        private void OnupdateHierarchyOperationCompleted(object arg) {
            if ((this.updateHierarchyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateHierarchyCompleted(this, new updateHierarchyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/Logout", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Logout(string token) {
            this.Invoke("Logout", new object[] {
                        token});
        }
        
        /// <remarks/>
        public void LogoutAsync(string token) {
            this.LogoutAsync(token, null);
        }
        
        /// <remarks/>
        public void LogoutAsync(string token, object userState) {
            if ((this.LogoutOperationCompleted == null)) {
                this.LogoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogoutOperationCompleted);
            }
            this.InvokeAsync("Logout", new object[] {
                        token}, this.LogoutOperationCompleted, userState);
        }
        
        private void OnLogoutOperationCompleted(object arg) {
            if ((this.LogoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogoutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/Login", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Login(string username, string password) {
            object[] results = this.Invoke("Login", new object[] {
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string username, string password) {
            this.LoginAsync(username, password, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string username, string password, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        username,
                        password}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/LoginViaSaml", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoginViaSaml(string samlResponse) {
            object[] results = this.Invoke("LoginViaSaml", new object[] {
                        samlResponse});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoginViaSamlAsync(string samlResponse) {
            this.LoginViaSamlAsync(samlResponse, null);
        }
        
        /// <remarks/>
        public void LoginViaSamlAsync(string samlResponse, object userState) {
            if ((this.LoginViaSamlOperationCompleted == null)) {
                this.LoginViaSamlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginViaSamlOperationCompleted);
            }
            this.InvokeAsync("LoginViaSaml", new object[] {
                        samlResponse}, this.LoginViaSamlOperationCompleted, userState);
        }
        
        private void OnLoginViaSamlOperationCompleted(object arg) {
            if ((this.LoginViaSamlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginViaSamlCompleted(this, new LoginViaSamlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/clearCacheInSpace", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool clearCacheInSpace(string token, string spaceID) {
            object[] results = this.Invoke("clearCacheInSpace", new object[] {
                        token,
                        spaceID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void clearCacheInSpaceAsync(string token, string spaceID) {
            this.clearCacheInSpaceAsync(token, spaceID, null);
        }
        
        /// <remarks/>
        public void clearCacheInSpaceAsync(string token, string spaceID, object userState) {
            if ((this.clearCacheInSpaceOperationCompleted == null)) {
                this.clearCacheInSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnclearCacheInSpaceOperationCompleted);
            }
            this.InvokeAsync("clearCacheInSpace", new object[] {
                        token,
                        spaceID}, this.clearCacheInSpaceOperationCompleted, userState);
        }
        
        private void OnclearCacheInSpaceOperationCompleted(object arg) {
            if ((this.clearCacheInSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.clearCacheInSpaceCompleted(this, new clearCacheInSpaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/swapSpaceContents", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string swapSpaceContents(string token, string sp1ID, string sp2ID) {
            object[] results = this.Invoke("swapSpaceContents", new object[] {
                        token,
                        sp1ID,
                        sp2ID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void swapSpaceContentsAsync(string token, string sp1ID, string sp2ID) {
            this.swapSpaceContentsAsync(token, sp1ID, sp2ID, null);
        }
        
        /// <remarks/>
        public void swapSpaceContentsAsync(string token, string sp1ID, string sp2ID, object userState) {
            if ((this.swapSpaceContentsOperationCompleted == null)) {
                this.swapSpaceContentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnswapSpaceContentsOperationCompleted);
            }
            this.InvokeAsync("swapSpaceContents", new object[] {
                        token,
                        sp1ID,
                        sp2ID}, this.swapSpaceContentsOperationCompleted, userState);
        }
        
        private void OnswapSpaceContentsOperationCompleted(object arg) {
            if ((this.swapSpaceContentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.swapSpaceContentsCompleted(this, new swapSpaceContentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/swapSpaceForPackages", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string swapSpaceForPackages(string token, string sp1Name, string sp2Name, bool syncImportedPackages) {
            object[] results = this.Invoke("swapSpaceForPackages", new object[] {
                        token,
                        sp1Name,
                        sp2Name,
                        syncImportedPackages});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void swapSpaceForPackagesAsync(string token, string sp1Name, string sp2Name, bool syncImportedPackages) {
            this.swapSpaceForPackagesAsync(token, sp1Name, sp2Name, syncImportedPackages, null);
        }
        
        /// <remarks/>
        public void swapSpaceForPackagesAsync(string token, string sp1Name, string sp2Name, bool syncImportedPackages, object userState) {
            if ((this.swapSpaceForPackagesOperationCompleted == null)) {
                this.swapSpaceForPackagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnswapSpaceForPackagesOperationCompleted);
            }
            this.InvokeAsync("swapSpaceForPackages", new object[] {
                        token,
                        sp1Name,
                        sp2Name,
                        syncImportedPackages}, this.swapSpaceForPackagesOperationCompleted, userState);
        }
        
        private void OnswapSpaceForPackagesOperationCompleted(object arg) {
            if ((this.swapSpaceForPackagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.swapSpaceForPackagesCompleted(this, new swapSpaceForPackagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/copySpaceContents", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string copySpaceContents(string token, string spFromID, string spToID) {
            object[] results = this.Invoke("copySpaceContents", new object[] {
                        token,
                        spFromID,
                        spToID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void copySpaceContentsAsync(string token, string spFromID, string spToID) {
            this.copySpaceContentsAsync(token, spFromID, spToID, null);
        }
        
        /// <remarks/>
        public void copySpaceContentsAsync(string token, string spFromID, string spToID, object userState) {
            if ((this.copySpaceContentsOperationCompleted == null)) {
                this.copySpaceContentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OncopySpaceContentsOperationCompleted);
            }
            this.InvokeAsync("copySpaceContents", new object[] {
                        token,
                        spFromID,
                        spToID}, this.copySpaceContentsOperationCompleted, userState);
        }
        
        private void OncopySpaceContentsOperationCompleted(object arg) {
            if ((this.copySpaceContentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.copySpaceContentsCompleted(this, new copySpaceContentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/copySpace", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string copySpace(string token, string spFromID, string spToID, string mode, string options) {
            object[] results = this.Invoke("copySpace", new object[] {
                        token,
                        spFromID,
                        spToID,
                        mode,
                        options});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void copySpaceAsync(string token, string spFromID, string spToID, string mode, string options) {
            this.copySpaceAsync(token, spFromID, spToID, mode, options, null);
        }
        
        /// <remarks/>
        public void copySpaceAsync(string token, string spFromID, string spToID, string mode, string options, object userState) {
            if ((this.copySpaceOperationCompleted == null)) {
                this.copySpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OncopySpaceOperationCompleted);
            }
            this.InvokeAsync("copySpace", new object[] {
                        token,
                        spFromID,
                        spToID,
                        mode,
                        options}, this.copySpaceOperationCompleted, userState);
        }
        
        private void OncopySpaceOperationCompleted(object arg) {
            if ((this.copySpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.copySpaceCompleted(this, new copySpaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/copyCatalogDirectory", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string copyCatalogDirectory(string token, string spFromID, string spToID, string directoryName) {
            object[] results = this.Invoke("copyCatalogDirectory", new object[] {
                        token,
                        spFromID,
                        spToID,
                        directoryName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void copyCatalogDirectoryAsync(string token, string spFromID, string spToID, string directoryName) {
            this.copyCatalogDirectoryAsync(token, spFromID, spToID, directoryName, null);
        }
        
        /// <remarks/>
        public void copyCatalogDirectoryAsync(string token, string spFromID, string spToID, string directoryName, object userState) {
            if ((this.copyCatalogDirectoryOperationCompleted == null)) {
                this.copyCatalogDirectoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OncopyCatalogDirectoryOperationCompleted);
            }
            this.InvokeAsync("copyCatalogDirectory", new object[] {
                        token,
                        spFromID,
                        spToID,
                        directoryName}, this.copyCatalogDirectoryOperationCompleted, userState);
        }
        
        private void OncopyCatalogDirectoryOperationCompleted(object arg) {
            if ((this.copyCatalogDirectoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.copyCatalogDirectoryCompleted(this, new copyCatalogDirectoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/resetPassword", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void resetPassword(string token, string username) {
            this.Invoke("resetPassword", new object[] {
                        token,
                        username});
        }
        
        /// <remarks/>
        public void resetPasswordAsync(string token, string username) {
            this.resetPasswordAsync(token, username, null);
        }
        
        /// <remarks/>
        public void resetPasswordAsync(string token, string username, object userState) {
            if ((this.resetPasswordOperationCompleted == null)) {
                this.resetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnresetPasswordOperationCompleted);
            }
            this.InvokeAsync("resetPassword", new object[] {
                        token,
                        username}, this.resetPasswordOperationCompleted, userState);
        }
        
        private void OnresetPasswordOperationCompleted(object arg) {
            if ((this.resetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.resetPasswordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/addUserToSpace", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addUserToSpace(string token, string userName, string spaceID, bool hasAdmin) {
            this.Invoke("addUserToSpace", new object[] {
                        token,
                        userName,
                        spaceID,
                        hasAdmin});
        }
        
        /// <remarks/>
        public void addUserToSpaceAsync(string token, string userName, string spaceID, bool hasAdmin) {
            this.addUserToSpaceAsync(token, userName, spaceID, hasAdmin, null);
        }
        
        /// <remarks/>
        public void addUserToSpaceAsync(string token, string userName, string spaceID, bool hasAdmin, object userState) {
            if ((this.addUserToSpaceOperationCompleted == null)) {
                this.addUserToSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddUserToSpaceOperationCompleted);
            }
            this.InvokeAsync("addUserToSpace", new object[] {
                        token,
                        userName,
                        spaceID,
                        hasAdmin}, this.addUserToSpaceOperationCompleted, userState);
        }
        
        private void OnaddUserToSpaceOperationCompleted(object arg) {
            if ((this.addUserToSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addUserToSpaceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/listUsersInSpace", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] listUsersInSpace(string token, string spaceID) {
            object[] results = this.Invoke("listUsersInSpace", new object[] {
                        token,
                        spaceID});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void listUsersInSpaceAsync(string token, string spaceID) {
            this.listUsersInSpaceAsync(token, spaceID, null);
        }
        
        /// <remarks/>
        public void listUsersInSpaceAsync(string token, string spaceID, object userState) {
            if ((this.listUsersInSpaceOperationCompleted == null)) {
                this.listUsersInSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistUsersInSpaceOperationCompleted);
            }
            this.InvokeAsync("listUsersInSpace", new object[] {
                        token,
                        spaceID}, this.listUsersInSpaceOperationCompleted, userState);
        }
        
        private void OnlistUsersInSpaceOperationCompleted(object arg) {
            if ((this.listUsersInSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listUsersInSpaceCompleted(this, new listUsersInSpaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/removeUserFromSpace", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void removeUserFromSpace(string token, string userName, string spaceID) {
            this.Invoke("removeUserFromSpace", new object[] {
                        token,
                        userName,
                        spaceID});
        }
        
        /// <remarks/>
        public void removeUserFromSpaceAsync(string token, string userName, string spaceID) {
            this.removeUserFromSpaceAsync(token, userName, spaceID, null);
        }
        
        /// <remarks/>
        public void removeUserFromSpaceAsync(string token, string userName, string spaceID, object userState) {
            if ((this.removeUserFromSpaceOperationCompleted == null)) {
                this.removeUserFromSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveUserFromSpaceOperationCompleted);
            }
            this.InvokeAsync("removeUserFromSpace", new object[] {
                        token,
                        userName,
                        spaceID}, this.removeUserFromSpaceOperationCompleted, userState);
        }
        
        private void OnremoveUserFromSpaceOperationCompleted(object arg) {
            if ((this.removeUserFromSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeUserFromSpaceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/addGroupToSpace", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addGroupToSpace(string token, string groupName, string spaceID) {
            this.Invoke("addGroupToSpace", new object[] {
                        token,
                        groupName,
                        spaceID});
        }
        
        /// <remarks/>
        public void addGroupToSpaceAsync(string token, string groupName, string spaceID) {
            this.addGroupToSpaceAsync(token, groupName, spaceID, null);
        }
        
        /// <remarks/>
        public void addGroupToSpaceAsync(string token, string groupName, string spaceID, object userState) {
            if ((this.addGroupToSpaceOperationCompleted == null)) {
                this.addGroupToSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddGroupToSpaceOperationCompleted);
            }
            this.InvokeAsync("addGroupToSpace", new object[] {
                        token,
                        groupName,
                        spaceID}, this.addGroupToSpaceOperationCompleted, userState);
        }
        
        private void OnaddGroupToSpaceOperationCompleted(object arg) {
            if ((this.addGroupToSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addGroupToSpaceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/removeGroupFromSpace", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void removeGroupFromSpace(string token, string groupName, string spaceID) {
            this.Invoke("removeGroupFromSpace", new object[] {
                        token,
                        groupName,
                        spaceID});
        }
        
        /// <remarks/>
        public void removeGroupFromSpaceAsync(string token, string groupName, string spaceID) {
            this.removeGroupFromSpaceAsync(token, groupName, spaceID, null);
        }
        
        /// <remarks/>
        public void removeGroupFromSpaceAsync(string token, string groupName, string spaceID, object userState) {
            if ((this.removeGroupFromSpaceOperationCompleted == null)) {
                this.removeGroupFromSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveGroupFromSpaceOperationCompleted);
            }
            this.InvokeAsync("removeGroupFromSpace", new object[] {
                        token,
                        groupName,
                        spaceID}, this.removeGroupFromSpaceOperationCompleted, userState);
        }
        
        private void OnremoveGroupFromSpaceOperationCompleted(object arg) {
            if ((this.removeGroupFromSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeGroupFromSpaceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/listGroupsInSpace", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] listGroupsInSpace(string token, string spaceID) {
            object[] results = this.Invoke("listGroupsInSpace", new object[] {
                        token,
                        spaceID});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void listGroupsInSpaceAsync(string token, string spaceID) {
            this.listGroupsInSpaceAsync(token, spaceID, null);
        }
        
        /// <remarks/>
        public void listGroupsInSpaceAsync(string token, string spaceID, object userState) {
            if ((this.listGroupsInSpaceOperationCompleted == null)) {
                this.listGroupsInSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistGroupsInSpaceOperationCompleted);
            }
            this.InvokeAsync("listGroupsInSpace", new object[] {
                        token,
                        spaceID}, this.listGroupsInSpaceOperationCompleted, userState);
        }
        
        private void OnlistGroupsInSpaceOperationCompleted(object arg) {
            if ((this.listGroupsInSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listGroupsInSpaceCompleted(this, new listGroupsInSpaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/getAvailableACLs", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] getAvailableACLs(string token) {
            object[] results = this.Invoke("getAvailableACLs", new object[] {
                        token});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getAvailableACLsAsync(string token) {
            this.getAvailableACLsAsync(token, null);
        }
        
        /// <remarks/>
        public void getAvailableACLsAsync(string token, object userState) {
            if ((this.getAvailableACLsOperationCompleted == null)) {
                this.getAvailableACLsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAvailableACLsOperationCompleted);
            }
            this.InvokeAsync("getAvailableACLs", new object[] {
                        token}, this.getAvailableACLsOperationCompleted, userState);
        }
        
        private void OngetAvailableACLsOperationCompleted(object arg) {
            if ((this.getAvailableACLsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAvailableACLsCompleted(this, new getAvailableACLsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/listGroupAclsInSpace", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] listGroupAclsInSpace(string token, string groupName, string spaceID) {
            object[] results = this.Invoke("listGroupAclsInSpace", new object[] {
                        token,
                        groupName,
                        spaceID});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void listGroupAclsInSpaceAsync(string token, string groupName, string spaceID) {
            this.listGroupAclsInSpaceAsync(token, groupName, spaceID, null);
        }
        
        /// <remarks/>
        public void listGroupAclsInSpaceAsync(string token, string groupName, string spaceID, object userState) {
            if ((this.listGroupAclsInSpaceOperationCompleted == null)) {
                this.listGroupAclsInSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistGroupAclsInSpaceOperationCompleted);
            }
            this.InvokeAsync("listGroupAclsInSpace", new object[] {
                        token,
                        groupName,
                        spaceID}, this.listGroupAclsInSpaceOperationCompleted, userState);
        }
        
        private void OnlistGroupAclsInSpaceOperationCompleted(object arg) {
            if ((this.listGroupAclsInSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listGroupAclsInSpaceCompleted(this, new listGroupAclsInSpaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/addAclToGroupInSpace", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addAclToGroupInSpace(string token, string groupName, string aclTag, string spaceID) {
            this.Invoke("addAclToGroupInSpace", new object[] {
                        token,
                        groupName,
                        aclTag,
                        spaceID});
        }
        
        /// <remarks/>
        public void addAclToGroupInSpaceAsync(string token, string groupName, string aclTag, string spaceID) {
            this.addAclToGroupInSpaceAsync(token, groupName, aclTag, spaceID, null);
        }
        
        /// <remarks/>
        public void addAclToGroupInSpaceAsync(string token, string groupName, string aclTag, string spaceID, object userState) {
            if ((this.addAclToGroupInSpaceOperationCompleted == null)) {
                this.addAclToGroupInSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddAclToGroupInSpaceOperationCompleted);
            }
            this.InvokeAsync("addAclToGroupInSpace", new object[] {
                        token,
                        groupName,
                        aclTag,
                        spaceID}, this.addAclToGroupInSpaceOperationCompleted, userState);
        }
        
        private void OnaddAclToGroupInSpaceOperationCompleted(object arg) {
            if ((this.addAclToGroupInSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addAclToGroupInSpaceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/removeAclFromGroupInSpace", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void removeAclFromGroupInSpace(string token, string groupName, string aclTag, string spaceID) {
            this.Invoke("removeAclFromGroupInSpace", new object[] {
                        token,
                        groupName,
                        aclTag,
                        spaceID});
        }
        
        /// <remarks/>
        public void removeAclFromGroupInSpaceAsync(string token, string groupName, string aclTag, string spaceID) {
            this.removeAclFromGroupInSpaceAsync(token, groupName, aclTag, spaceID, null);
        }
        
        /// <remarks/>
        public void removeAclFromGroupInSpaceAsync(string token, string groupName, string aclTag, string spaceID, object userState) {
            if ((this.removeAclFromGroupInSpaceOperationCompleted == null)) {
                this.removeAclFromGroupInSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveAclFromGroupInSpaceOperationCompleted);
            }
            this.InvokeAsync("removeAclFromGroupInSpace", new object[] {
                        token,
                        groupName,
                        aclTag,
                        spaceID}, this.removeAclFromGroupInSpaceOperationCompleted, userState);
        }
        
        private void OnremoveAclFromGroupInSpaceOperationCompleted(object arg) {
            if ((this.removeAclFromGroupInSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeAclFromGroupInSpaceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/addUserToGroupInSpace", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addUserToGroupInSpace(string token, string userName, string groupName, string spaceID) {
            this.Invoke("addUserToGroupInSpace", new object[] {
                        token,
                        userName,
                        groupName,
                        spaceID});
        }
        
        /// <remarks/>
        public void addUserToGroupInSpaceAsync(string token, string userName, string groupName, string spaceID) {
            this.addUserToGroupInSpaceAsync(token, userName, groupName, spaceID, null);
        }
        
        /// <remarks/>
        public void addUserToGroupInSpaceAsync(string token, string userName, string groupName, string spaceID, object userState) {
            if ((this.addUserToGroupInSpaceOperationCompleted == null)) {
                this.addUserToGroupInSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddUserToGroupInSpaceOperationCompleted);
            }
            this.InvokeAsync("addUserToGroupInSpace", new object[] {
                        token,
                        userName,
                        groupName,
                        spaceID}, this.addUserToGroupInSpaceOperationCompleted, userState);
        }
        
        private void OnaddUserToGroupInSpaceOperationCompleted(object arg) {
            if ((this.addUserToGroupInSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addUserToGroupInSpaceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/removeUserFromGroupInSpace", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void removeUserFromGroupInSpace(string token, string userName, string groupName, string spaceID) {
            this.Invoke("removeUserFromGroupInSpace", new object[] {
                        token,
                        userName,
                        groupName,
                        spaceID});
        }
        
        /// <remarks/>
        public void removeUserFromGroupInSpaceAsync(string token, string userName, string groupName, string spaceID) {
            this.removeUserFromGroupInSpaceAsync(token, userName, groupName, spaceID, null);
        }
        
        /// <remarks/>
        public void removeUserFromGroupInSpaceAsync(string token, string userName, string groupName, string spaceID, object userState) {
            if ((this.removeUserFromGroupInSpaceOperationCompleted == null)) {
                this.removeUserFromGroupInSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveUserFromGroupInSpaceOperationCompleted);
            }
            this.InvokeAsync("removeUserFromGroupInSpace", new object[] {
                        token,
                        userName,
                        groupName,
                        spaceID}, this.removeUserFromGroupInSpaceOperationCompleted, userState);
        }
        
        private void OnremoveUserFromGroupInSpaceOperationCompleted(object arg) {
            if ((this.removeUserFromGroupInSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeUserFromGroupInSpaceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/listUsersInGroupInSpace", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] listUsersInGroupInSpace(string token, string groupName, string spaceID) {
            object[] results = this.Invoke("listUsersInGroupInSpace", new object[] {
                        token,
                        groupName,
                        spaceID});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void listUsersInGroupInSpaceAsync(string token, string groupName, string spaceID) {
            this.listUsersInGroupInSpaceAsync(token, groupName, spaceID, null);
        }
        
        /// <remarks/>
        public void listUsersInGroupInSpaceAsync(string token, string groupName, string spaceID, object userState) {
            if ((this.listUsersInGroupInSpaceOperationCompleted == null)) {
                this.listUsersInGroupInSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistUsersInGroupInSpaceOperationCompleted);
            }
            this.InvokeAsync("listUsersInGroupInSpace", new object[] {
                        token,
                        groupName,
                        spaceID}, this.listUsersInGroupInSpaceOperationCompleted, userState);
        }
        
        private void OnlistUsersInGroupInSpaceOperationCompleted(object arg) {
            if ((this.listUsersInGroupInSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listUsersInGroupInSpaceCompleted(this, new listUsersInGroupInSpaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/listUserGroupMembership", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] listUserGroupMembership(string token, string spaceID, string userName, bool includeInternalGroups) {
            object[] results = this.Invoke("listUserGroupMembership", new object[] {
                        token,
                        spaceID,
                        userName,
                        includeInternalGroups});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void listUserGroupMembershipAsync(string token, string spaceID, string userName, bool includeInternalGroups) {
            this.listUserGroupMembershipAsync(token, spaceID, userName, includeInternalGroups, null);
        }
        
        /// <remarks/>
        public void listUserGroupMembershipAsync(string token, string spaceID, string userName, bool includeInternalGroups, object userState) {
            if ((this.listUserGroupMembershipOperationCompleted == null)) {
                this.listUserGroupMembershipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistUserGroupMembershipOperationCompleted);
            }
            this.InvokeAsync("listUserGroupMembership", new object[] {
                        token,
                        spaceID,
                        userName,
                        includeInternalGroups}, this.listUserGroupMembershipOperationCompleted, userState);
        }
        
        private void OnlistUserGroupMembershipOperationCompleted(object arg) {
            if ((this.listUserGroupMembershipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listUserGroupMembershipCompleted(this, new listUserGroupMembershipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/listProxyUsers", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] listProxyUsers(string token, string userName) {
            object[] results = this.Invoke("listProxyUsers", new object[] {
                        token,
                        userName});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void listProxyUsersAsync(string token, string userName) {
            this.listProxyUsersAsync(token, userName, null);
        }
        
        /// <remarks/>
        public void listProxyUsersAsync(string token, string userName, object userState) {
            if ((this.listProxyUsersOperationCompleted == null)) {
                this.listProxyUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistProxyUsersOperationCompleted);
            }
            this.InvokeAsync("listProxyUsers", new object[] {
                        token,
                        userName}, this.listProxyUsersOperationCompleted, userState);
        }
        
        private void OnlistProxyUsersOperationCompleted(object arg) {
            if ((this.listProxyUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listProxyUsersCompleted(this, new listProxyUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/listOpenIDs", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] listOpenIDs(string token, string userName) {
            object[] results = this.Invoke("listOpenIDs", new object[] {
                        token,
                        userName});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void listOpenIDsAsync(string token, string userName) {
            this.listOpenIDsAsync(token, userName, null);
        }
        
        /// <remarks/>
        public void listOpenIDsAsync(string token, string userName, object userState) {
            if ((this.listOpenIDsOperationCompleted == null)) {
                this.listOpenIDsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistOpenIDsOperationCompleted);
            }
            this.InvokeAsync("listOpenIDs", new object[] {
                        token,
                        userName}, this.listOpenIDsOperationCompleted, userState);
        }
        
        private void OnlistOpenIDsOperationCompleted(object arg) {
            if ((this.listOpenIDsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listOpenIDsCompleted(this, new listOpenIDsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/addOpenID", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addOpenID(string token, string userName, string openID) {
            this.Invoke("addOpenID", new object[] {
                        token,
                        userName,
                        openID});
        }
        
        /// <remarks/>
        public void addOpenIDAsync(string token, string userName, string openID) {
            this.addOpenIDAsync(token, userName, openID, null);
        }
        
        /// <remarks/>
        public void addOpenIDAsync(string token, string userName, string openID, object userState) {
            if ((this.addOpenIDOperationCompleted == null)) {
                this.addOpenIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddOpenIDOperationCompleted);
            }
            this.InvokeAsync("addOpenID", new object[] {
                        token,
                        userName,
                        openID}, this.addOpenIDOperationCompleted, userState);
        }
        
        private void OnaddOpenIDOperationCompleted(object arg) {
            if ((this.addOpenIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addOpenIDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/removeOpenID", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void removeOpenID(string token, string userName, string openID) {
            this.Invoke("removeOpenID", new object[] {
                        token,
                        userName,
                        openID});
        }
        
        /// <remarks/>
        public void removeOpenIDAsync(string token, string userName, string openID) {
            this.removeOpenIDAsync(token, userName, openID, null);
        }
        
        /// <remarks/>
        public void removeOpenIDAsync(string token, string userName, string openID, object userState) {
            if ((this.removeOpenIDOperationCompleted == null)) {
                this.removeOpenIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveOpenIDOperationCompleted);
            }
            this.InvokeAsync("removeOpenID", new object[] {
                        token,
                        userName,
                        openID}, this.removeOpenIDOperationCompleted, userState);
        }
        
        private void OnremoveOpenIDOperationCompleted(object arg) {
            if ((this.removeOpenIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeOpenIDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/setUserDefaultSpace", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setUserDefaultSpace(string token, string userName, string spaceID, bool dashboards) {
            this.Invoke("setUserDefaultSpace", new object[] {
                        token,
                        userName,
                        spaceID,
                        dashboards});
        }
        
        /// <remarks/>
        public void setUserDefaultSpaceAsync(string token, string userName, string spaceID, bool dashboards) {
            this.setUserDefaultSpaceAsync(token, userName, spaceID, dashboards, null);
        }
        
        /// <remarks/>
        public void setUserDefaultSpaceAsync(string token, string userName, string spaceID, bool dashboards, object userState) {
            if ((this.setUserDefaultSpaceOperationCompleted == null)) {
                this.setUserDefaultSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetUserDefaultSpaceOperationCompleted);
            }
            this.InvokeAsync("setUserDefaultSpace", new object[] {
                        token,
                        userName,
                        spaceID,
                        dashboards}, this.setUserDefaultSpaceOperationCompleted, userState);
        }
        
        private void OnsetUserDefaultSpaceOperationCompleted(object arg) {
            if ((this.setUserDefaultSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setUserDefaultSpaceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/listReleases", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] listReleases(string token) {
            object[] results = this.Invoke("listReleases", new object[] {
                        token});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void listReleasesAsync(string token) {
            this.listReleasesAsync(token, null);
        }
        
        /// <remarks/>
        public void listReleasesAsync(string token, object userState) {
            if ((this.listReleasesOperationCompleted == null)) {
                this.listReleasesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistReleasesOperationCompleted);
            }
            this.InvokeAsync("listReleases", new object[] {
                        token}, this.listReleasesOperationCompleted, userState);
        }
        
        private void OnlistReleasesOperationCompleted(object arg) {
            if ((this.listReleasesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listReleasesCompleted(this, new listReleasesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/getUserRelease", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getUserRelease(string token, string userName) {
            object[] results = this.Invoke("getUserRelease", new object[] {
                        token,
                        userName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getUserReleaseAsync(string token, string userName) {
            this.getUserReleaseAsync(token, userName, null);
        }
        
        /// <remarks/>
        public void getUserReleaseAsync(string token, string userName, object userState) {
            if ((this.getUserReleaseOperationCompleted == null)) {
                this.getUserReleaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserReleaseOperationCompleted);
            }
            this.InvokeAsync("getUserRelease", new object[] {
                        token,
                        userName}, this.getUserReleaseOperationCompleted, userState);
        }
        
        private void OngetUserReleaseOperationCompleted(object arg) {
            if ((this.getUserReleaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserReleaseCompleted(this, new getUserReleaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/setUserRelease", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setUserRelease(string token, string userName, string release) {
            this.Invoke("setUserRelease", new object[] {
                        token,
                        userName,
                        release});
        }
        
        /// <remarks/>
        public void setUserReleaseAsync(string token, string userName, string release) {
            this.setUserReleaseAsync(token, userName, release, null);
        }
        
        /// <remarks/>
        public void setUserReleaseAsync(string token, string userName, string release, object userState) {
            if ((this.setUserReleaseOperationCompleted == null)) {
                this.setUserReleaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetUserReleaseOperationCompleted);
            }
            this.InvokeAsync("setUserRelease", new object[] {
                        token,
                        userName,
                        release}, this.setUserReleaseOperationCompleted, userState);
        }
        
        private void OnsetUserReleaseOperationCompleted(object arg) {
            if ((this.setUserReleaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setUserReleaseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/enableUser", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void enableUser(string token, string userName, bool enable) {
            this.Invoke("enableUser", new object[] {
                        token,
                        userName,
                        enable});
        }
        
        /// <remarks/>
        public void enableUserAsync(string token, string userName, bool enable) {
            this.enableUserAsync(token, userName, enable, null);
        }
        
        /// <remarks/>
        public void enableUserAsync(string token, string userName, bool enable, object userState) {
            if ((this.enableUserOperationCompleted == null)) {
                this.enableUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenableUserOperationCompleted);
            }
            this.InvokeAsync("enableUser", new object[] {
                        token,
                        userName,
                        enable}, this.enableUserOperationCompleted, userState);
        }
        
        private void OnenableUserOperationCompleted(object arg) {
            if ((this.enableUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enableUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/unlockUser", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void unlockUser(string token, string userName) {
            this.Invoke("unlockUser", new object[] {
                        token,
                        userName});
        }
        
        /// <remarks/>
        public void unlockUserAsync(string token, string userName) {
            this.unlockUserAsync(token, userName, null);
        }
        
        /// <remarks/>
        public void unlockUserAsync(string token, string userName, object userState) {
            if ((this.unlockUserOperationCompleted == null)) {
                this.unlockUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunlockUserOperationCompleted);
            }
            this.InvokeAsync("unlockUser", new object[] {
                        token,
                        userName}, this.unlockUserOperationCompleted, userState);
        }
        
        private void OnunlockUserOperationCompleted(object arg) {
            if ((this.unlockUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unlockUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/deleteUser", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteUser(string token, string userName) {
            this.Invoke("deleteUser", new object[] {
                        token,
                        userName});
        }
        
        /// <remarks/>
        public void deleteUserAsync(string token, string userName) {
            this.deleteUserAsync(token, userName, null);
        }
        
        /// <remarks/>
        public void deleteUserAsync(string token, string userName, object userState) {
            if ((this.deleteUserOperationCompleted == null)) {
                this.deleteUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteUserOperationCompleted);
            }
            this.InvokeAsync("deleteUser", new object[] {
                        token,
                        userName}, this.deleteUserOperationCompleted, userState);
        }
        
        private void OndeleteUserOperationCompleted(object arg) {
            if ((this.deleteUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/enableAccount", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void enableAccount(string token, string accountID, bool enable) {
            this.Invoke("enableAccount", new object[] {
                        token,
                        accountID,
                        enable});
        }
        
        /// <remarks/>
        public void enableAccountAsync(string token, string accountID, bool enable) {
            this.enableAccountAsync(token, accountID, enable, null);
        }
        
        /// <remarks/>
        public void enableAccountAsync(string token, string accountID, bool enable, object userState) {
            if ((this.enableAccountOperationCompleted == null)) {
                this.enableAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenableAccountOperationCompleted);
            }
            this.InvokeAsync("enableAccount", new object[] {
                        token,
                        accountID,
                        enable}, this.enableAccountOperationCompleted, userState);
        }
        
        private void OnenableAccountOperationCompleted(object arg) {
            if ((this.enableAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enableAccountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/addProxyUser", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addProxyUser(string token, string userName, string proxyUserName, System.DateTime expiration) {
            this.Invoke("addProxyUser", new object[] {
                        token,
                        userName,
                        proxyUserName,
                        expiration});
        }
        
        /// <remarks/>
        public void addProxyUserAsync(string token, string userName, string proxyUserName, System.DateTime expiration) {
            this.addProxyUserAsync(token, userName, proxyUserName, expiration, null);
        }
        
        /// <remarks/>
        public void addProxyUserAsync(string token, string userName, string proxyUserName, System.DateTime expiration, object userState) {
            if ((this.addProxyUserOperationCompleted == null)) {
                this.addProxyUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddProxyUserOperationCompleted);
            }
            this.InvokeAsync("addProxyUser", new object[] {
                        token,
                        userName,
                        proxyUserName,
                        expiration}, this.addProxyUserOperationCompleted, userState);
        }
        
        private void OnaddProxyUserOperationCompleted(object arg) {
            if ((this.addProxyUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addProxyUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/removeProxyUser", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void removeProxyUser(string token, string userName, string proxyUserName) {
            this.Invoke("removeProxyUser", new object[] {
                        token,
                        userName,
                        proxyUserName});
        }
        
        /// <remarks/>
        public void removeProxyUserAsync(string token, string userName, string proxyUserName) {
            this.removeProxyUserAsync(token, userName, proxyUserName, null);
        }
        
        /// <remarks/>
        public void removeProxyUserAsync(string token, string userName, string proxyUserName, object userState) {
            if ((this.removeProxyUserOperationCompleted == null)) {
                this.removeProxyUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveProxyUserOperationCompleted);
            }
            this.InvokeAsync("removeProxyUser", new object[] {
                        token,
                        userName,
                        proxyUserName}, this.removeProxyUserOperationCompleted, userState);
        }
        
        private void OnremoveProxyUserOperationCompleted(object arg) {
            if ((this.removeProxyUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeProxyUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/listCreatedUsers", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] listCreatedUsers(string token) {
            object[] results = this.Invoke("listCreatedUsers", new object[] {
                        token});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void listCreatedUsersAsync(string token) {
            this.listCreatedUsersAsync(token, null);
        }
        
        /// <remarks/>
        public void listCreatedUsersAsync(string token, object userState) {
            if ((this.listCreatedUsersOperationCompleted == null)) {
                this.listCreatedUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistCreatedUsersOperationCompleted);
            }
            this.InvokeAsync("listCreatedUsers", new object[] {
                        token}, this.listCreatedUsersOperationCompleted, userState);
        }
        
        private void OnlistCreatedUsersOperationCompleted(object arg) {
            if ((this.listCreatedUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listCreatedUsersCompleted(this, new listCreatedUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/listManagedUsers", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] listManagedUsers(string token) {
            object[] results = this.Invoke("listManagedUsers", new object[] {
                        token});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void listManagedUsersAsync(string token) {
            this.listManagedUsersAsync(token, null);
        }
        
        /// <remarks/>
        public void listManagedUsersAsync(string token, object userState) {
            if ((this.listManagedUsersOperationCompleted == null)) {
                this.listManagedUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistManagedUsersOperationCompleted);
            }
            this.InvokeAsync("listManagedUsers", new object[] {
                        token}, this.listManagedUsersOperationCompleted, userState);
        }
        
        private void OnlistManagedUsersOperationCompleted(object arg) {
            if ((this.listManagedUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listManagedUsersCompleted(this, new listManagedUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/listAllowedIps", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] listAllowedIps(string token, string userName) {
            object[] results = this.Invoke("listAllowedIps", new object[] {
                        token,
                        userName});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void listAllowedIpsAsync(string token, string userName) {
            this.listAllowedIpsAsync(token, userName, null);
        }
        
        /// <remarks/>
        public void listAllowedIpsAsync(string token, string userName, object userState) {
            if ((this.listAllowedIpsOperationCompleted == null)) {
                this.listAllowedIpsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistAllowedIpsOperationCompleted);
            }
            this.InvokeAsync("listAllowedIps", new object[] {
                        token,
                        userName}, this.listAllowedIpsOperationCompleted, userState);
        }
        
        private void OnlistAllowedIpsOperationCompleted(object arg) {
            if ((this.listAllowedIpsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listAllowedIpsCompleted(this, new listAllowedIpsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/addAllowedIp", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addAllowedIp(string token, string userName, string ip) {
            this.Invoke("addAllowedIp", new object[] {
                        token,
                        userName,
                        ip});
        }
        
        /// <remarks/>
        public void addAllowedIpAsync(string token, string userName, string ip) {
            this.addAllowedIpAsync(token, userName, ip, null);
        }
        
        /// <remarks/>
        public void addAllowedIpAsync(string token, string userName, string ip, object userState) {
            if ((this.addAllowedIpOperationCompleted == null)) {
                this.addAllowedIpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddAllowedIpOperationCompleted);
            }
            this.InvokeAsync("addAllowedIp", new object[] {
                        token,
                        userName,
                        ip}, this.addAllowedIpOperationCompleted, userState);
        }
        
        private void OnaddAllowedIpOperationCompleted(object arg) {
            if ((this.addAllowedIpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addAllowedIpCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/removeAllowedIp", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void removeAllowedIp(string token, string userName, string ip) {
            this.Invoke("removeAllowedIp", new object[] {
                        token,
                        userName,
                        ip});
        }
        
        /// <remarks/>
        public void removeAllowedIpAsync(string token, string userName, string ip) {
            this.removeAllowedIpAsync(token, userName, ip, null);
        }
        
        /// <remarks/>
        public void removeAllowedIpAsync(string token, string userName, string ip, object userState) {
            if ((this.removeAllowedIpOperationCompleted == null)) {
                this.removeAllowedIpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveAllowedIpOperationCompleted);
            }
            this.InvokeAsync("removeAllowedIp", new object[] {
                        token,
                        userName,
                        ip}, this.removeAllowedIpOperationCompleted, userState);
        }
        
        private void OnremoveAllowedIpOperationCompleted(object arg) {
            if ((this.removeAllowedIpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeAllowedIpCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/listAllowedIPAddrsForAccount", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] listAllowedIPAddrsForAccount(string token) {
            object[] results = this.Invoke("listAllowedIPAddrsForAccount", new object[] {
                        token});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void listAllowedIPAddrsForAccountAsync(string token) {
            this.listAllowedIPAddrsForAccountAsync(token, null);
        }
        
        /// <remarks/>
        public void listAllowedIPAddrsForAccountAsync(string token, object userState) {
            if ((this.listAllowedIPAddrsForAccountOperationCompleted == null)) {
                this.listAllowedIPAddrsForAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistAllowedIPAddrsForAccountOperationCompleted);
            }
            this.InvokeAsync("listAllowedIPAddrsForAccount", new object[] {
                        token}, this.listAllowedIPAddrsForAccountOperationCompleted, userState);
        }
        
        private void OnlistAllowedIPAddrsForAccountOperationCompleted(object arg) {
            if ((this.listAllowedIPAddrsForAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listAllowedIPAddrsForAccountCompleted(this, new listAllowedIPAddrsForAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/addAllowedIPAddrForAccount", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addAllowedIPAddrForAccount(string token, string ip) {
            this.Invoke("addAllowedIPAddrForAccount", new object[] {
                        token,
                        ip});
        }
        
        /// <remarks/>
        public void addAllowedIPAddrForAccountAsync(string token, string ip) {
            this.addAllowedIPAddrForAccountAsync(token, ip, null);
        }
        
        /// <remarks/>
        public void addAllowedIPAddrForAccountAsync(string token, string ip, object userState) {
            if ((this.addAllowedIPAddrForAccountOperationCompleted == null)) {
                this.addAllowedIPAddrForAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddAllowedIPAddrForAccountOperationCompleted);
            }
            this.InvokeAsync("addAllowedIPAddrForAccount", new object[] {
                        token,
                        ip}, this.addAllowedIPAddrForAccountOperationCompleted, userState);
        }
        
        private void OnaddAllowedIPAddrForAccountOperationCompleted(object arg) {
            if ((this.addAllowedIPAddrForAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addAllowedIPAddrForAccountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/removeAllowedIPAddrForAccount", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void removeAllowedIPAddrForAccount(string token, string ip) {
            this.Invoke("removeAllowedIPAddrForAccount", new object[] {
                        token,
                        ip});
        }
        
        /// <remarks/>
        public void removeAllowedIPAddrForAccountAsync(string token, string ip) {
            this.removeAllowedIPAddrForAccountAsync(token, ip, null);
        }
        
        /// <remarks/>
        public void removeAllowedIPAddrForAccountAsync(string token, string ip, object userState) {
            if ((this.removeAllowedIPAddrForAccountOperationCompleted == null)) {
                this.removeAllowedIPAddrForAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveAllowedIPAddrForAccountOperationCompleted);
            }
            this.InvokeAsync("removeAllowedIPAddrForAccount", new object[] {
                        token,
                        ip}, this.removeAllowedIPAddrForAccountOperationCompleted, userState);
        }
        
        private void OnremoveAllowedIPAddrForAccountOperationCompleted(object arg) {
            if ((this.removeAllowedIPAddrForAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeAllowedIPAddrForAccountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/setVariableInSpace", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setVariableInSpace(string token, string varName, string query, string spaceID) {
            this.Invoke("setVariableInSpace", new object[] {
                        token,
                        varName,
                        query,
                        spaceID});
        }
        
        /// <remarks/>
        public void setVariableInSpaceAsync(string token, string varName, string query, string spaceID) {
            this.setVariableInSpaceAsync(token, varName, query, spaceID, null);
        }
        
        /// <remarks/>
        public void setVariableInSpaceAsync(string token, string varName, string query, string spaceID, object userState) {
            if ((this.setVariableInSpaceOperationCompleted == null)) {
                this.setVariableInSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetVariableInSpaceOperationCompleted);
            }
            this.InvokeAsync("setVariableInSpace", new object[] {
                        token,
                        varName,
                        query,
                        spaceID}, this.setVariableInSpaceOperationCompleted, userState);
        }
        
        private void OnsetVariableInSpaceOperationCompleted(object arg) {
            if ((this.setVariableInSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setVariableInSpaceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/addUser", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addUser(string token, string userName, string additionalParams) {
            this.Invoke("addUser", new object[] {
                        token,
                        userName,
                        additionalParams});
        }
        
        /// <remarks/>
        public void addUserAsync(string token, string userName, string additionalParams) {
            this.addUserAsync(token, userName, additionalParams, null);
        }
        
        /// <remarks/>
        public void addUserAsync(string token, string userName, string additionalParams, object userState) {
            if ((this.addUserOperationCompleted == null)) {
                this.addUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddUserOperationCompleted);
            }
            this.InvokeAsync("addUser", new object[] {
                        token,
                        userName,
                        additionalParams}, this.addUserOperationCompleted, userState);
        }
        
        private void OnaddUserOperationCompleted(object arg) {
            if ((this.addUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/addProductToUser", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addProductToUser(string token, string userName, int productId) {
            this.Invoke("addProductToUser", new object[] {
                        token,
                        userName,
                        productId});
        }
        
        /// <remarks/>
        public void addProductToUserAsync(string token, string userName, int productId) {
            this.addProductToUserAsync(token, userName, productId, null);
        }
        
        /// <remarks/>
        public void addProductToUserAsync(string token, string userName, int productId, object userState) {
            if ((this.addProductToUserOperationCompleted == null)) {
                this.addProductToUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddProductToUserOperationCompleted);
            }
            this.InvokeAsync("addProductToUser", new object[] {
                        token,
                        userName,
                        productId}, this.addProductToUserOperationCompleted, userState);
        }
        
        private void OnaddProductToUserOperationCompleted(object arg) {
            if ((this.addProductToUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addProductToUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/removeProductFromUser", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void removeProductFromUser(string token, string userName, int productId) {
            this.Invoke("removeProductFromUser", new object[] {
                        token,
                        userName,
                        productId});
        }
        
        /// <remarks/>
        public void removeProductFromUserAsync(string token, string userName, int productId) {
            this.removeProductFromUserAsync(token, userName, productId, null);
        }
        
        /// <remarks/>
        public void removeProductFromUserAsync(string token, string userName, int productId, object userState) {
            if ((this.removeProductFromUserOperationCompleted == null)) {
                this.removeProductFromUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveProductFromUserOperationCompleted);
            }
            this.InvokeAsync("removeProductFromUser", new object[] {
                        token,
                        userName,
                        productId}, this.removeProductFromUserOperationCompleted, userState);
        }
        
        private void OnremoveProductFromUserOperationCompleted(object arg) {
            if ((this.removeProductFromUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeProductFromUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/executeQueryInSpace", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CommandQueryResult executeQueryInSpace(string token, string query, string spaceID) {
            object[] results = this.Invoke("executeQueryInSpace", new object[] {
                        token,
                        query,
                        spaceID});
            return ((CommandQueryResult)(results[0]));
        }
        
        /// <remarks/>
        public void executeQueryInSpaceAsync(string token, string query, string spaceID) {
            this.executeQueryInSpaceAsync(token, query, spaceID, null);
        }
        
        /// <remarks/>
        public void executeQueryInSpaceAsync(string token, string query, string spaceID, object userState) {
            if ((this.executeQueryInSpaceOperationCompleted == null)) {
                this.executeQueryInSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexecuteQueryInSpaceOperationCompleted);
            }
            this.InvokeAsync("executeQueryInSpace", new object[] {
                        token,
                        query,
                        spaceID}, this.executeQueryInSpaceOperationCompleted, userState);
        }
        
        private void OnexecuteQueryInSpaceOperationCompleted(object arg) {
            if ((this.executeQueryInSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.executeQueryInSpaceCompleted(this, new executeQueryInSpaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/executeQueryInSpaceWithOptions", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CommandQueryResult executeQueryInSpaceWithOptions(string token, string query, string spaceID, QueryOptionOfStringString[] queryOptions) {
            object[] results = this.Invoke("executeQueryInSpaceWithOptions", new object[] {
                        token,
                        query,
                        spaceID,
                        queryOptions});
            return ((CommandQueryResult)(results[0]));
        }
        
        /// <remarks/>
        public void executeQueryInSpaceWithOptionsAsync(string token, string query, string spaceID, QueryOptionOfStringString[] queryOptions) {
            this.executeQueryInSpaceWithOptionsAsync(token, query, spaceID, queryOptions, null);
        }
        
        /// <remarks/>
        public void executeQueryInSpaceWithOptionsAsync(string token, string query, string spaceID, QueryOptionOfStringString[] queryOptions, object userState) {
            if ((this.executeQueryInSpaceWithOptionsOperationCompleted == null)) {
                this.executeQueryInSpaceWithOptionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexecuteQueryInSpaceWithOptionsOperationCompleted);
            }
            this.InvokeAsync("executeQueryInSpaceWithOptions", new object[] {
                        token,
                        query,
                        spaceID,
                        queryOptions}, this.executeQueryInSpaceWithOptionsOperationCompleted, userState);
        }
        
        private void OnexecuteQueryInSpaceWithOptionsOperationCompleted(object arg) {
            if ((this.executeQueryInSpaceWithOptionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.executeQueryInSpaceWithOptionsCompleted(this, new executeQueryInSpaceWithOptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/getReportData", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CommandQueryResult getReportData(string token, string spaceID, string reportName, Filter[] reportFilters) {
            object[] results = this.Invoke("getReportData", new object[] {
                        token,
                        spaceID,
                        reportName,
                        reportFilters});
            return ((CommandQueryResult)(results[0]));
        }
        
        /// <remarks/>
        public void getReportDataAsync(string token, string spaceID, string reportName, Filter[] reportFilters) {
            this.getReportDataAsync(token, spaceID, reportName, reportFilters, null);
        }
        
        /// <remarks/>
        public void getReportDataAsync(string token, string spaceID, string reportName, Filter[] reportFilters, object userState) {
            if ((this.getReportDataOperationCompleted == null)) {
                this.getReportDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetReportDataOperationCompleted);
            }
            this.InvokeAsync("getReportData", new object[] {
                        token,
                        spaceID,
                        reportName,
                        reportFilters}, this.getReportDataOperationCompleted, userState);
        }
        
        private void OngetReportDataOperationCompleted(object arg) {
            if ((this.getReportDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getReportDataCompleted(this, new getReportDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/queryMore", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CommandQueryResult queryMore(string token, string queryToken) {
            object[] results = this.Invoke("queryMore", new object[] {
                        token,
                        queryToken});
            return ((CommandQueryResult)(results[0]));
        }
        
        /// <remarks/>
        public void queryMoreAsync(string token, string queryToken) {
            this.queryMoreAsync(token, queryToken, null);
        }
        
        /// <remarks/>
        public void queryMoreAsync(string token, string queryToken, object userState) {
            if ((this.queryMoreOperationCompleted == null)) {
                this.queryMoreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnqueryMoreOperationCompleted);
            }
            this.InvokeAsync("queryMore", new object[] {
                        token,
                        queryToken}, this.queryMoreOperationCompleted, userState);
        }
        
        private void OnqueryMoreOperationCompleted(object arg) {
            if ((this.queryMoreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.queryMoreCompleted(this, new queryMoreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/createDashboardCollection", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void createDashboardCollection(string token, string spaceID, string collectionType, string collectionName) {
            this.Invoke("createDashboardCollection", new object[] {
                        token,
                        spaceID,
                        collectionType,
                        collectionName});
        }
        
        /// <remarks/>
        public void createDashboardCollectionAsync(string token, string spaceID, string collectionType, string collectionName) {
            this.createDashboardCollectionAsync(token, spaceID, collectionType, collectionName, null);
        }
        
        /// <remarks/>
        public void createDashboardCollectionAsync(string token, string spaceID, string collectionType, string collectionName, object userState) {
            if ((this.createDashboardCollectionOperationCompleted == null)) {
                this.createDashboardCollectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateDashboardCollectionOperationCompleted);
            }
            this.InvokeAsync("createDashboardCollection", new object[] {
                        token,
                        spaceID,
                        collectionType,
                        collectionName}, this.createDashboardCollectionOperationCompleted, userState);
        }
        
        private void OncreateDashboardCollectionOperationCompleted(object arg) {
            if ((this.createDashboardCollectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createDashboardCollectionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/createExpression", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void createExpression(string token, string spaceID, SavedExpression expression) {
            this.Invoke("createExpression", new object[] {
                        token,
                        spaceID,
                        expression});
        }
        
        /// <remarks/>
        public void createExpressionAsync(string token, string spaceID, SavedExpression expression) {
            this.createExpressionAsync(token, spaceID, expression, null);
        }
        
        /// <remarks/>
        public void createExpressionAsync(string token, string spaceID, SavedExpression expression, object userState) {
            if ((this.createExpressionOperationCompleted == null)) {
                this.createExpressionOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateExpressionOperationCompleted);
            }
            this.InvokeAsync("createExpression", new object[] {
                        token,
                        spaceID,
                        expression}, this.createExpressionOperationCompleted, userState);
        }
        
        private void OncreateExpressionOperationCompleted(object arg) {
            if ((this.createExpressionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createExpressionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/updateExpression", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updateExpression(string token, string spaceID, SavedExpression expression) {
            this.Invoke("updateExpression", new object[] {
                        token,
                        spaceID,
                        expression});
        }
        
        /// <remarks/>
        public void updateExpressionAsync(string token, string spaceID, SavedExpression expression) {
            this.updateExpressionAsync(token, spaceID, expression, null);
        }
        
        /// <remarks/>
        public void updateExpressionAsync(string token, string spaceID, SavedExpression expression, object userState) {
            if ((this.updateExpressionOperationCompleted == null)) {
                this.updateExpressionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateExpressionOperationCompleted);
            }
            this.InvokeAsync("updateExpression", new object[] {
                        token,
                        spaceID,
                        expression}, this.updateExpressionOperationCompleted, userState);
        }
        
        private void OnupdateExpressionOperationCompleted(object arg) {
            if ((this.updateExpressionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateExpressionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/deleteExpression", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteExpression(string token, string spaceID, string expressionName) {
            this.Invoke("deleteExpression", new object[] {
                        token,
                        spaceID,
                        expressionName});
        }
        
        /// <remarks/>
        public void deleteExpressionAsync(string token, string spaceID, string expressionName) {
            this.deleteExpressionAsync(token, spaceID, expressionName, null);
        }
        
        /// <remarks/>
        public void deleteExpressionAsync(string token, string spaceID, string expressionName, object userState) {
            if ((this.deleteExpressionOperationCompleted == null)) {
                this.deleteExpressionOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteExpressionOperationCompleted);
            }
            this.InvokeAsync("deleteExpression", new object[] {
                        token,
                        spaceID,
                        expressionName}, this.deleteExpressionOperationCompleted, userState);
        }
        
        private void OndeleteExpressionOperationCompleted(object arg) {
            if ((this.deleteExpressionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteExpressionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/getExpression", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SavedExpression getExpression(string token, string spaceID, string expressionName) {
            object[] results = this.Invoke("getExpression", new object[] {
                        token,
                        spaceID,
                        expressionName});
            return ((SavedExpression)(results[0]));
        }
        
        /// <remarks/>
        public void getExpressionAsync(string token, string spaceID, string expressionName) {
            this.getExpressionAsync(token, spaceID, expressionName, null);
        }
        
        /// <remarks/>
        public void getExpressionAsync(string token, string spaceID, string expressionName, object userState) {
            if ((this.getExpressionOperationCompleted == null)) {
                this.getExpressionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetExpressionOperationCompleted);
            }
            this.InvokeAsync("getExpression", new object[] {
                        token,
                        spaceID,
                        expressionName}, this.getExpressionOperationCompleted, userState);
        }
        
        private void OngetExpressionOperationCompleted(object arg) {
            if ((this.getExpressionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getExpressionCompleted(this, new getExpressionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/saveQueryReport", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void saveQueryReport(string token, string spaceID, string reportPath, string reportName, string query) {
            this.Invoke("saveQueryReport", new object[] {
                        token,
                        spaceID,
                        reportPath,
                        reportName,
                        query});
        }
        
        /// <remarks/>
        public void saveQueryReportAsync(string token, string spaceID, string reportPath, string reportName, string query) {
            this.saveQueryReportAsync(token, spaceID, reportPath, reportName, query, null);
        }
        
        /// <remarks/>
        public void saveQueryReportAsync(string token, string spaceID, string reportPath, string reportName, string query, object userState) {
            if ((this.saveQueryReportOperationCompleted == null)) {
                this.saveQueryReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveQueryReportOperationCompleted);
            }
            this.InvokeAsync("saveQueryReport", new object[] {
                        token,
                        spaceID,
                        reportPath,
                        reportName,
                        query}, this.saveQueryReportOperationCompleted, userState);
        }
        
        private void OnsaveQueryReportOperationCompleted(object arg) {
            if ((this.saveQueryReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveQueryReportCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/replaceExpressionInReport", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void replaceExpressionInReport(string token, string spaceID, string reportPath, string reportName, string existingGlobalExpressionName, string newGlobalExpressionName) {
            this.Invoke("replaceExpressionInReport", new object[] {
                        token,
                        spaceID,
                        reportPath,
                        reportName,
                        existingGlobalExpressionName,
                        newGlobalExpressionName});
        }
        
        /// <remarks/>
        public void replaceExpressionInReportAsync(string token, string spaceID, string reportPath, string reportName, string existingGlobalExpressionName, string newGlobalExpressionName) {
            this.replaceExpressionInReportAsync(token, spaceID, reportPath, reportName, existingGlobalExpressionName, newGlobalExpressionName, null);
        }
        
        /// <remarks/>
        public void replaceExpressionInReportAsync(string token, string spaceID, string reportPath, string reportName, string existingGlobalExpressionName, string newGlobalExpressionName, object userState) {
            if ((this.replaceExpressionInReportOperationCompleted == null)) {
                this.replaceExpressionInReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreplaceExpressionInReportOperationCompleted);
            }
            this.InvokeAsync("replaceExpressionInReport", new object[] {
                        token,
                        spaceID,
                        reportPath,
                        reportName,
                        existingGlobalExpressionName,
                        newGlobalExpressionName}, this.replaceExpressionInReportOperationCompleted, userState);
        }
        
        private void OnreplaceExpressionInReportOperationCompleted(object arg) {
            if ((this.replaceExpressionInReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.replaceExpressionInReportCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/beginDataUpload", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string beginDataUpload(string token, string spaceID, string sourceName) {
            object[] results = this.Invoke("beginDataUpload", new object[] {
                        token,
                        spaceID,
                        sourceName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void beginDataUploadAsync(string token, string spaceID, string sourceName) {
            this.beginDataUploadAsync(token, spaceID, sourceName, null);
        }
        
        /// <remarks/>
        public void beginDataUploadAsync(string token, string spaceID, string sourceName, object userState) {
            if ((this.beginDataUploadOperationCompleted == null)) {
                this.beginDataUploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbeginDataUploadOperationCompleted);
            }
            this.InvokeAsync("beginDataUpload", new object[] {
                        token,
                        spaceID,
                        sourceName}, this.beginDataUploadOperationCompleted, userState);
        }
        
        private void OnbeginDataUploadOperationCompleted(object arg) {
            if ((this.beginDataUploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.beginDataUploadCompleted(this, new beginDataUploadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/setDataUploadOptions", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setDataUploadOptions(string token, string dataUploadToken, string[] options) {
            this.Invoke("setDataUploadOptions", new object[] {
                        token,
                        dataUploadToken,
                        options});
        }
        
        /// <remarks/>
        public void setDataUploadOptionsAsync(string token, string dataUploadToken, string[] options) {
            this.setDataUploadOptionsAsync(token, dataUploadToken, options, null);
        }
        
        /// <remarks/>
        public void setDataUploadOptionsAsync(string token, string dataUploadToken, string[] options, object userState) {
            if ((this.setDataUploadOptionsOperationCompleted == null)) {
                this.setDataUploadOptionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetDataUploadOptionsOperationCompleted);
            }
            this.InvokeAsync("setDataUploadOptions", new object[] {
                        token,
                        dataUploadToken,
                        options}, this.setDataUploadOptionsOperationCompleted, userState);
        }
        
        private void OnsetDataUploadOptionsOperationCompleted(object arg) {
            if ((this.setDataUploadOptionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setDataUploadOptionsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/uploadData", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void uploadData(string token, string dataUploadToken, int numBytes, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data) {
            this.Invoke("uploadData", new object[] {
                        token,
                        dataUploadToken,
                        numBytes,
                        data});
        }
        
        /// <remarks/>
        public void uploadDataAsync(string token, string dataUploadToken, int numBytes, byte[] data) {
            this.uploadDataAsync(token, dataUploadToken, numBytes, data, null);
        }
        
        /// <remarks/>
        public void uploadDataAsync(string token, string dataUploadToken, int numBytes, byte[] data, object userState) {
            if ((this.uploadDataOperationCompleted == null)) {
                this.uploadDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuploadDataOperationCompleted);
            }
            this.InvokeAsync("uploadData", new object[] {
                        token,
                        dataUploadToken,
                        numBytes,
                        data}, this.uploadDataOperationCompleted, userState);
        }
        
        private void OnuploadDataOperationCompleted(object arg) {
            if ((this.uploadDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.uploadDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/finishDataUpload", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void finishDataUpload(string token, string dataUploadToken) {
            this.Invoke("finishDataUpload", new object[] {
                        token,
                        dataUploadToken});
        }
        
        /// <remarks/>
        public void finishDataUploadAsync(string token, string dataUploadToken) {
            this.finishDataUploadAsync(token, dataUploadToken, null);
        }
        
        /// <remarks/>
        public void finishDataUploadAsync(string token, string dataUploadToken, object userState) {
            if ((this.finishDataUploadOperationCompleted == null)) {
                this.finishDataUploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfinishDataUploadOperationCompleted);
            }
            this.InvokeAsync("finishDataUpload", new object[] {
                        token,
                        dataUploadToken}, this.finishDataUploadOperationCompleted, userState);
        }
        
        private void OnfinishDataUploadOperationCompleted(object arg) {
            if ((this.finishDataUploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.finishDataUploadCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/isDataUploadComplete", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool isDataUploadComplete(string token, string dataUploadToken) {
            object[] results = this.Invoke("isDataUploadComplete", new object[] {
                        token,
                        dataUploadToken});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isDataUploadCompleteAsync(string token, string dataUploadToken) {
            this.isDataUploadCompleteAsync(token, dataUploadToken, null);
        }
        
        /// <remarks/>
        public void isDataUploadCompleteAsync(string token, string dataUploadToken, object userState) {
            if ((this.isDataUploadCompleteOperationCompleted == null)) {
                this.isDataUploadCompleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisDataUploadCompleteOperationCompleted);
            }
            this.InvokeAsync("isDataUploadComplete", new object[] {
                        token,
                        dataUploadToken}, this.isDataUploadCompleteOperationCompleted, userState);
        }
        
        private void OnisDataUploadCompleteOperationCompleted(object arg) {
            if ((this.isDataUploadCompleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isDataUploadCompleteCompleted(this, new isDataUploadCompleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/getDataUploadStatus", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] getDataUploadStatus(string token, string dataUploadToken) {
            object[] results = this.Invoke("getDataUploadStatus", new object[] {
                        token,
                        dataUploadToken});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getDataUploadStatusAsync(string token, string dataUploadToken) {
            this.getDataUploadStatusAsync(token, dataUploadToken, null);
        }
        
        /// <remarks/>
        public void getDataUploadStatusAsync(string token, string dataUploadToken, object userState) {
            if ((this.getDataUploadStatusOperationCompleted == null)) {
                this.getDataUploadStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDataUploadStatusOperationCompleted);
            }
            this.InvokeAsync("getDataUploadStatus", new object[] {
                        token,
                        dataUploadToken}, this.getDataUploadStatusOperationCompleted, userState);
        }
        
        private void OngetDataUploadStatusOperationCompleted(object arg) {
            if ((this.getDataUploadStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDataUploadStatusCompleted(this, new getDataUploadStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/isJobComplete", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool isJobComplete(string token, string jobToken) {
            object[] results = this.Invoke("isJobComplete", new object[] {
                        token,
                        jobToken});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isJobCompleteAsync(string token, string jobToken) {
            this.isJobCompleteAsync(token, jobToken, null);
        }
        
        /// <remarks/>
        public void isJobCompleteAsync(string token, string jobToken, object userState) {
            if ((this.isJobCompleteOperationCompleted == null)) {
                this.isJobCompleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisJobCompleteOperationCompleted);
            }
            this.InvokeAsync("isJobComplete", new object[] {
                        token,
                        jobToken}, this.isJobCompleteOperationCompleted, userState);
        }
        
        private void OnisJobCompleteOperationCompleted(object arg) {
            if ((this.isJobCompleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isJobCompleteCompleted(this, new isJobCompleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/getJobStatus", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatusResult getJobStatus(string token, string jobToken) {
            object[] results = this.Invoke("getJobStatus", new object[] {
                        token,
                        jobToken});
            return ((StatusResult)(results[0]));
        }
        
        /// <remarks/>
        public void getJobStatusAsync(string token, string jobToken) {
            this.getJobStatusAsync(token, jobToken, null);
        }
        
        /// <remarks/>
        public void getJobStatusAsync(string token, string jobToken, object userState) {
            if ((this.getJobStatusOperationCompleted == null)) {
                this.getJobStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetJobStatusOperationCompleted);
            }
            this.InvokeAsync("getJobStatus", new object[] {
                        token,
                        jobToken}, this.getJobStatusOperationCompleted, userState);
        }
        
        private void OngetJobStatusOperationCompleted(object arg) {
            if ((this.getJobStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getJobStatusCompleted(this, new getJobStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/publishData", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string publishData(string token, string spaceID, string[] subgroups, System.DateTime date) {
            object[] results = this.Invoke("publishData", new object[] {
                        token,
                        spaceID,
                        subgroups,
                        date});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void publishDataAsync(string token, string spaceID, string[] subgroups, System.DateTime date) {
            this.publishDataAsync(token, spaceID, subgroups, date, null);
        }
        
        /// <remarks/>
        public void publishDataAsync(string token, string spaceID, string[] subgroups, System.DateTime date, object userState) {
            if ((this.publishDataOperationCompleted == null)) {
                this.publishDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpublishDataOperationCompleted);
            }
            this.InvokeAsync("publishData", new object[] {
                        token,
                        spaceID,
                        subgroups,
                        date}, this.publishDataOperationCompleted, userState);
        }
        
        private void OnpublishDataOperationCompleted(object arg) {
            if ((this.publishDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.publishDataCompleted(this, new publishDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/isPublishingComplete", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool isPublishingComplete(string token, string publishingToken) {
            object[] results = this.Invoke("isPublishingComplete", new object[] {
                        token,
                        publishingToken});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isPublishingCompleteAsync(string token, string publishingToken) {
            this.isPublishingCompleteAsync(token, publishingToken, null);
        }
        
        /// <remarks/>
        public void isPublishingCompleteAsync(string token, string publishingToken, object userState) {
            if ((this.isPublishingCompleteOperationCompleted == null)) {
                this.isPublishingCompleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisPublishingCompleteOperationCompleted);
            }
            this.InvokeAsync("isPublishingComplete", new object[] {
                        token,
                        publishingToken}, this.isPublishingCompleteOperationCompleted, userState);
        }
        
        private void OnisPublishingCompleteOperationCompleted(object arg) {
            if ((this.isPublishingCompleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isPublishingCompleteCompleted(this, new isPublishingCompleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/getPublishingStatus", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] getPublishingStatus(string token, string publishingToken) {
            object[] results = this.Invoke("getPublishingStatus", new object[] {
                        token,
                        publishingToken});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getPublishingStatusAsync(string token, string publishingToken) {
            this.getPublishingStatusAsync(token, publishingToken, null);
        }
        
        /// <remarks/>
        public void getPublishingStatusAsync(string token, string publishingToken, object userState) {
            if ((this.getPublishingStatusOperationCompleted == null)) {
                this.getPublishingStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPublishingStatusOperationCompleted);
            }
            this.InvokeAsync("getPublishingStatus", new object[] {
                        token,
                        publishingToken}, this.getPublishingStatusOperationCompleted, userState);
        }
        
        private void OngetPublishingStatusOperationCompleted(object arg) {
            if ((this.getPublishingStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPublishingStatusCompleted(this, new getPublishingStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/getVariablesForSpace", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)]
        public string[][] getVariablesForSpace(string token, string spaceID) {
            object[] results = this.Invoke("getVariablesForSpace", new object[] {
                        token,
                        spaceID});
            return ((string[][])(results[0]));
        }
        
        /// <remarks/>
        public void getVariablesForSpaceAsync(string token, string spaceID) {
            this.getVariablesForSpaceAsync(token, spaceID, null);
        }
        
        /// <remarks/>
        public void getVariablesForSpaceAsync(string token, string spaceID, object userState) {
            if ((this.getVariablesForSpaceOperationCompleted == null)) {
                this.getVariablesForSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetVariablesForSpaceOperationCompleted);
            }
            this.InvokeAsync("getVariablesForSpace", new object[] {
                        token,
                        spaceID}, this.getVariablesForSpaceOperationCompleted, userState);
        }
        
        private void OngetVariablesForSpaceOperationCompleted(object arg) {
            if ((this.getVariablesForSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getVariablesForSpaceCompleted(this, new getVariablesForSpaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/getDirectoryContents", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FileNode getDirectoryContents(string token, string spaceID, string dir) {
            object[] results = this.Invoke("getDirectoryContents", new object[] {
                        token,
                        spaceID,
                        dir});
            return ((FileNode)(results[0]));
        }
        
        /// <remarks/>
        public void getDirectoryContentsAsync(string token, string spaceID, string dir) {
            this.getDirectoryContentsAsync(token, spaceID, dir, null);
        }
        
        /// <remarks/>
        public void getDirectoryContentsAsync(string token, string spaceID, string dir, object userState) {
            if ((this.getDirectoryContentsOperationCompleted == null)) {
                this.getDirectoryContentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDirectoryContentsOperationCompleted);
            }
            this.InvokeAsync("getDirectoryContents", new object[] {
                        token,
                        spaceID,
                        dir}, this.getDirectoryContentsOperationCompleted, userState);
        }
        
        private void OngetDirectoryContentsOperationCompleted(object arg) {
            if ((this.getDirectoryContentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDirectoryContentsCompleted(this, new getDirectoryContentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/getDirectoryPermissions", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GroupPermission[] getDirectoryPermissions(string token, string spaceID, string dir) {
            object[] results = this.Invoke("getDirectoryPermissions", new object[] {
                        token,
                        spaceID,
                        dir});
            return ((GroupPermission[])(results[0]));
        }
        
        /// <remarks/>
        public void getDirectoryPermissionsAsync(string token, string spaceID, string dir) {
            this.getDirectoryPermissionsAsync(token, spaceID, dir, null);
        }
        
        /// <remarks/>
        public void getDirectoryPermissionsAsync(string token, string spaceID, string dir, object userState) {
            if ((this.getDirectoryPermissionsOperationCompleted == null)) {
                this.getDirectoryPermissionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDirectoryPermissionsOperationCompleted);
            }
            this.InvokeAsync("getDirectoryPermissions", new object[] {
                        token,
                        spaceID,
                        dir}, this.getDirectoryPermissionsOperationCompleted, userState);
        }
        
        private void OngetDirectoryPermissionsOperationCompleted(object arg) {
            if ((this.getDirectoryPermissionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDirectoryPermissionsCompleted(this, new getDirectoryPermissionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/setDirectoryPermission", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setDirectoryPermission(string token, string spaceID, string dir, string groupName, string permissionName, bool permission) {
            this.Invoke("setDirectoryPermission", new object[] {
                        token,
                        spaceID,
                        dir,
                        groupName,
                        permissionName,
                        permission});
        }
        
        /// <remarks/>
        public void setDirectoryPermissionAsync(string token, string spaceID, string dir, string groupName, string permissionName, bool permission) {
            this.setDirectoryPermissionAsync(token, spaceID, dir, groupName, permissionName, permission, null);
        }
        
        /// <remarks/>
        public void setDirectoryPermissionAsync(string token, string spaceID, string dir, string groupName, string permissionName, bool permission, object userState) {
            if ((this.setDirectoryPermissionOperationCompleted == null)) {
                this.setDirectoryPermissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetDirectoryPermissionOperationCompleted);
            }
            this.InvokeAsync("setDirectoryPermission", new object[] {
                        token,
                        spaceID,
                        dir,
                        groupName,
                        permissionName,
                        permission}, this.setDirectoryPermissionOperationCompleted, userState);
        }
        
        private void OnsetDirectoryPermissionOperationCompleted(object arg) {
            if ((this.setDirectoryPermissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setDirectoryPermissionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/setDirectoryPermissions", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setDirectoryPermissions(string token, string spaceID, string[] dirs, [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfGroupPermission")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] GroupPermission[][] perms) {
            this.Invoke("setDirectoryPermissions", new object[] {
                        token,
                        spaceID,
                        dirs,
                        perms});
        }
        
        /// <remarks/>
        public void setDirectoryPermissionsAsync(string token, string spaceID, string[] dirs, GroupPermission[][] perms) {
            this.setDirectoryPermissionsAsync(token, spaceID, dirs, perms, null);
        }
        
        /// <remarks/>
        public void setDirectoryPermissionsAsync(string token, string spaceID, string[] dirs, GroupPermission[][] perms, object userState) {
            if ((this.setDirectoryPermissionsOperationCompleted == null)) {
                this.setDirectoryPermissionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetDirectoryPermissionsOperationCompleted);
            }
            this.InvokeAsync("setDirectoryPermissions", new object[] {
                        token,
                        spaceID,
                        dirs,
                        perms}, this.setDirectoryPermissionsOperationCompleted, userState);
        }
        
        private void OnsetDirectoryPermissionsOperationCompleted(object arg) {
            if ((this.setDirectoryPermissionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setDirectoryPermissionsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/setCatalogPermissions", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setCatalogPermissions(string token, string spaceID, [System.Xml.Serialization.XmlElementAttribute("CatalogPermission")] SetCatalogPermission[] CatalogPermission) {
            this.Invoke("setCatalogPermissions", new object[] {
                        token,
                        spaceID,
                        CatalogPermission});
        }
        
        /// <remarks/>
        public void setCatalogPermissionsAsync(string token, string spaceID, SetCatalogPermission[] CatalogPermission) {
            this.setCatalogPermissionsAsync(token, spaceID, CatalogPermission, null);
        }
        
        /// <remarks/>
        public void setCatalogPermissionsAsync(string token, string spaceID, SetCatalogPermission[] CatalogPermission, object userState) {
            if ((this.setCatalogPermissionsOperationCompleted == null)) {
                this.setCatalogPermissionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetCatalogPermissionsOperationCompleted);
            }
            this.InvokeAsync("setCatalogPermissions", new object[] {
                        token,
                        spaceID,
                        CatalogPermission}, this.setCatalogPermissionsOperationCompleted, userState);
        }
        
        private void OnsetCatalogPermissionsOperationCompleted(object arg) {
            if ((this.setCatalogPermissionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setCatalogPermissionsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/copyFileOrDirectory", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string copyFileOrDirectory(string token, string fromSpaceID, string fileOrDir, string toSpaceID, string toDir) {
            object[] results = this.Invoke("copyFileOrDirectory", new object[] {
                        token,
                        fromSpaceID,
                        fileOrDir,
                        toSpaceID,
                        toDir});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void copyFileOrDirectoryAsync(string token, string fromSpaceID, string fileOrDir, string toSpaceID, string toDir) {
            this.copyFileOrDirectoryAsync(token, fromSpaceID, fileOrDir, toSpaceID, toDir, null);
        }
        
        /// <remarks/>
        public void copyFileOrDirectoryAsync(string token, string fromSpaceID, string fileOrDir, string toSpaceID, string toDir, object userState) {
            if ((this.copyFileOrDirectoryOperationCompleted == null)) {
                this.copyFileOrDirectoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OncopyFileOrDirectoryOperationCompleted);
            }
            this.InvokeAsync("copyFileOrDirectory", new object[] {
                        token,
                        fromSpaceID,
                        fileOrDir,
                        toSpaceID,
                        toDir}, this.copyFileOrDirectoryOperationCompleted, userState);
        }
        
        private void OncopyFileOrDirectoryOperationCompleted(object arg) {
            if ((this.copyFileOrDirectoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.copyFileOrDirectoryCompleted(this, new copyFileOrDirectoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/copyFile", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void copyFile(string token, string fromSpaceID, string fromFileOrDir, string toSpaceID, string toFileOrDir, bool overwrite) {
            this.Invoke("copyFile", new object[] {
                        token,
                        fromSpaceID,
                        fromFileOrDir,
                        toSpaceID,
                        toFileOrDir,
                        overwrite});
        }
        
        /// <remarks/>
        public void copyFileAsync(string token, string fromSpaceID, string fromFileOrDir, string toSpaceID, string toFileOrDir, bool overwrite) {
            this.copyFileAsync(token, fromSpaceID, fromFileOrDir, toSpaceID, toFileOrDir, overwrite, null);
        }
        
        /// <remarks/>
        public void copyFileAsync(string token, string fromSpaceID, string fromFileOrDir, string toSpaceID, string toFileOrDir, bool overwrite, object userState) {
            if ((this.copyFileOperationCompleted == null)) {
                this.copyFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OncopyFileOperationCompleted);
            }
            this.InvokeAsync("copyFile", new object[] {
                        token,
                        fromSpaceID,
                        fromFileOrDir,
                        toSpaceID,
                        toFileOrDir,
                        overwrite}, this.copyFileOperationCompleted, userState);
        }
        
        private void OncopyFileOperationCompleted(object arg) {
            if ((this.copyFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.copyFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/deleteFileOrDirectory", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteFileOrDirectory(string token, string spaceID, string fileOrDir) {
            this.Invoke("deleteFileOrDirectory", new object[] {
                        token,
                        spaceID,
                        fileOrDir});
        }
        
        /// <remarks/>
        public void deleteFileOrDirectoryAsync(string token, string spaceID, string fileOrDir) {
            this.deleteFileOrDirectoryAsync(token, spaceID, fileOrDir, null);
        }
        
        /// <remarks/>
        public void deleteFileOrDirectoryAsync(string token, string spaceID, string fileOrDir, object userState) {
            if ((this.deleteFileOrDirectoryOperationCompleted == null)) {
                this.deleteFileOrDirectoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteFileOrDirectoryOperationCompleted);
            }
            this.InvokeAsync("deleteFileOrDirectory", new object[] {
                        token,
                        spaceID,
                        fileOrDir}, this.deleteFileOrDirectoryOperationCompleted, userState);
        }
        
        private void OndeleteFileOrDirectoryOperationCompleted(object arg) {
            if ((this.deleteFileOrDirectoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteFileOrDirectoryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/renameFileOrDirectory", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void renameFileOrDirectory(string token, string spaceID, string fileOrDir, string newName) {
            this.Invoke("renameFileOrDirectory", new object[] {
                        token,
                        spaceID,
                        fileOrDir,
                        newName});
        }
        
        /// <remarks/>
        public void renameFileOrDirectoryAsync(string token, string spaceID, string fileOrDir, string newName) {
            this.renameFileOrDirectoryAsync(token, spaceID, fileOrDir, newName, null);
        }
        
        /// <remarks/>
        public void renameFileOrDirectoryAsync(string token, string spaceID, string fileOrDir, string newName, object userState) {
            if ((this.renameFileOrDirectoryOperationCompleted == null)) {
                this.renameFileOrDirectoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrenameFileOrDirectoryOperationCompleted);
            }
            this.InvokeAsync("renameFileOrDirectory", new object[] {
                        token,
                        spaceID,
                        fileOrDir,
                        newName}, this.renameFileOrDirectoryOperationCompleted, userState);
        }
        
        private void OnrenameFileOrDirectoryOperationCompleted(object arg) {
            if ((this.renameFileOrDirectoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.renameFileOrDirectoryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/createNewDirectory", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void createNewDirectory(string token, string spaceID, string parentDir, string newDirectoryName) {
            this.Invoke("createNewDirectory", new object[] {
                        token,
                        spaceID,
                        parentDir,
                        newDirectoryName});
        }
        
        /// <remarks/>
        public void createNewDirectoryAsync(string token, string spaceID, string parentDir, string newDirectoryName) {
            this.createNewDirectoryAsync(token, spaceID, parentDir, newDirectoryName, null);
        }
        
        /// <remarks/>
        public void createNewDirectoryAsync(string token, string spaceID, string parentDir, string newDirectoryName, object userState) {
            if ((this.createNewDirectoryOperationCompleted == null)) {
                this.createNewDirectoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateNewDirectoryOperationCompleted);
            }
            this.InvokeAsync("createNewDirectory", new object[] {
                        token,
                        spaceID,
                        parentDir,
                        newDirectoryName}, this.createNewDirectoryOperationCompleted, userState);
        }
        
        private void OncreateNewDirectoryOperationCompleted(object arg) {
            if ((this.createNewDirectoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createNewDirectoryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/checkAndCreateDirectory", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool checkAndCreateDirectory(string token, string spaceID, string parentDir, string newDirectoryName) {
            object[] results = this.Invoke("checkAndCreateDirectory", new object[] {
                        token,
                        spaceID,
                        parentDir,
                        newDirectoryName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void checkAndCreateDirectoryAsync(string token, string spaceID, string parentDir, string newDirectoryName) {
            this.checkAndCreateDirectoryAsync(token, spaceID, parentDir, newDirectoryName, null);
        }
        
        /// <remarks/>
        public void checkAndCreateDirectoryAsync(string token, string spaceID, string parentDir, string newDirectoryName, object userState) {
            if ((this.checkAndCreateDirectoryOperationCompleted == null)) {
                this.checkAndCreateDirectoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckAndCreateDirectoryOperationCompleted);
            }
            this.InvokeAsync("checkAndCreateDirectory", new object[] {
                        token,
                        spaceID,
                        parentDir,
                        newDirectoryName}, this.checkAndCreateDirectoryOperationCompleted, userState);
        }
        
        private void OncheckAndCreateDirectoryOperationCompleted(object arg) {
            if ((this.checkAndCreateDirectoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkAndCreateDirectoryCompleted(this, new checkAndCreateDirectoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/getLoadStatus", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getLoadStatus(string token, string spaceID) {
            object[] results = this.Invoke("getLoadStatus", new object[] {
                        token,
                        spaceID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getLoadStatusAsync(string token, string spaceID) {
            this.getLoadStatusAsync(token, spaceID, null);
        }
        
        /// <remarks/>
        public void getLoadStatusAsync(string token, string spaceID, object userState) {
            if ((this.getLoadStatusOperationCompleted == null)) {
                this.getLoadStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLoadStatusOperationCompleted);
            }
            this.InvokeAsync("getLoadStatus", new object[] {
                        token,
                        spaceID}, this.getLoadStatusOperationCompleted, userState);
        }
        
        private void OngetLoadStatusOperationCompleted(object arg) {
            if ((this.getLoadStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLoadStatusCompleted(this, new getLoadStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/createNewSpace", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string createNewSpace(string token, string spaceName, string comments, bool automatic) {
            object[] results = this.Invoke("createNewSpace", new object[] {
                        token,
                        spaceName,
                        comments,
                        automatic});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createNewSpaceAsync(string token, string spaceName, string comments, bool automatic) {
            this.createNewSpaceAsync(token, spaceName, comments, automatic, null);
        }
        
        /// <remarks/>
        public void createNewSpaceAsync(string token, string spaceName, string comments, bool automatic, object userState) {
            if ((this.createNewSpaceOperationCompleted == null)) {
                this.createNewSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateNewSpaceOperationCompleted);
            }
            this.InvokeAsync("createNewSpace", new object[] {
                        token,
                        spaceName,
                        comments,
                        automatic}, this.createNewSpaceOperationCompleted, userState);
        }
        
        private void OncreateNewSpaceOperationCompleted(object arg) {
            if ((this.createNewSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createNewSpaceCompleted(this, new createNewSpaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/createNewSpaceUsingSchema", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string createNewSpaceUsingSchema(string token, string spaceName, string schemaName, string comments, bool automatic) {
            object[] results = this.Invoke("createNewSpaceUsingSchema", new object[] {
                        token,
                        spaceName,
                        schemaName,
                        comments,
                        automatic});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createNewSpaceUsingSchemaAsync(string token, string spaceName, string schemaName, string comments, bool automatic) {
            this.createNewSpaceUsingSchemaAsync(token, spaceName, schemaName, comments, automatic, null);
        }
        
        /// <remarks/>
        public void createNewSpaceUsingSchemaAsync(string token, string spaceName, string schemaName, string comments, bool automatic, object userState) {
            if ((this.createNewSpaceUsingSchemaOperationCompleted == null)) {
                this.createNewSpaceUsingSchemaOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateNewSpaceUsingSchemaOperationCompleted);
            }
            this.InvokeAsync("createNewSpaceUsingSchema", new object[] {
                        token,
                        spaceName,
                        schemaName,
                        comments,
                        automatic}, this.createNewSpaceUsingSchemaOperationCompleted, userState);
        }
        
        private void OncreateNewSpaceUsingSchemaOperationCompleted(object arg) {
            if ((this.createNewSpaceUsingSchemaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createNewSpaceUsingSchemaCompleted(this, new createNewSpaceUsingSchemaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/deleteSpace", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string deleteSpace(string token, string spaceId) {
            object[] results = this.Invoke("deleteSpace", new object[] {
                        token,
                        spaceId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteSpaceAsync(string token, string spaceId) {
            this.deleteSpaceAsync(token, spaceId, null);
        }
        
        /// <remarks/>
        public void deleteSpaceAsync(string token, string spaceId, object userState) {
            if ((this.deleteSpaceOperationCompleted == null)) {
                this.deleteSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteSpaceOperationCompleted);
            }
            this.InvokeAsync("deleteSpace", new object[] {
                        token,
                        spaceId}, this.deleteSpaceOperationCompleted, userState);
        }
        
        private void OndeleteSpaceOperationCompleted(object arg) {
            if ((this.deleteSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteSpaceCompleted(this, new deleteSpaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/copyCustomSubjectArea", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void copyCustomSubjectArea(string token, string fromSpaceId, string customSubjectAreaName, string toSpaceId) {
            this.Invoke("copyCustomSubjectArea", new object[] {
                        token,
                        fromSpaceId,
                        customSubjectAreaName,
                        toSpaceId});
        }
        
        /// <remarks/>
        public void copyCustomSubjectAreaAsync(string token, string fromSpaceId, string customSubjectAreaName, string toSpaceId) {
            this.copyCustomSubjectAreaAsync(token, fromSpaceId, customSubjectAreaName, toSpaceId, null);
        }
        
        /// <remarks/>
        public void copyCustomSubjectAreaAsync(string token, string fromSpaceId, string customSubjectAreaName, string toSpaceId, object userState) {
            if ((this.copyCustomSubjectAreaOperationCompleted == null)) {
                this.copyCustomSubjectAreaOperationCompleted = new System.Threading.SendOrPostCallback(this.OncopyCustomSubjectAreaOperationCompleted);
            }
            this.InvokeAsync("copyCustomSubjectArea", new object[] {
                        token,
                        fromSpaceId,
                        customSubjectAreaName,
                        toSpaceId}, this.copyCustomSubjectAreaOperationCompleted, userState);
        }
        
        private void OncopyCustomSubjectAreaOperationCompleted(object arg) {
            if ((this.copyCustomSubjectAreaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.copyCustomSubjectAreaCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/listCustomSubjectAreas", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] listCustomSubjectAreas(string token, string spaceID) {
            object[] results = this.Invoke("listCustomSubjectAreas", new object[] {
                        token,
                        spaceID});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void listCustomSubjectAreasAsync(string token, string spaceID) {
            this.listCustomSubjectAreasAsync(token, spaceID, null);
        }
        
        /// <remarks/>
        public void listCustomSubjectAreasAsync(string token, string spaceID, object userState) {
            if ((this.listCustomSubjectAreasOperationCompleted == null)) {
                this.listCustomSubjectAreasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistCustomSubjectAreasOperationCompleted);
            }
            this.InvokeAsync("listCustomSubjectAreas", new object[] {
                        token,
                        spaceID}, this.listCustomSubjectAreasOperationCompleted, userState);
        }
        
        private void OnlistCustomSubjectAreasOperationCompleted(object arg) {
            if ((this.listCustomSubjectAreasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listCustomSubjectAreasCompleted(this, new listCustomSubjectAreasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/getSubjectAreaContent", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getSubjectAreaContent(string token, string spaceID, string name) {
            object[] results = this.Invoke("getSubjectAreaContent", new object[] {
                        token,
                        spaceID,
                        name});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getSubjectAreaContentAsync(string token, string spaceID, string name) {
            this.getSubjectAreaContentAsync(token, spaceID, name, null);
        }
        
        /// <remarks/>
        public void getSubjectAreaContentAsync(string token, string spaceID, string name, object userState) {
            if ((this.getSubjectAreaContentOperationCompleted == null)) {
                this.getSubjectAreaContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSubjectAreaContentOperationCompleted);
            }
            this.InvokeAsync("getSubjectAreaContent", new object[] {
                        token,
                        spaceID,
                        name}, this.getSubjectAreaContentOperationCompleted, userState);
        }
        
        private void OngetSubjectAreaContentOperationCompleted(object arg) {
            if ((this.getSubjectAreaContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSubjectAreaContentCompleted(this, new getSubjectAreaContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/getExtendedSubjectArea", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getExtendedSubjectArea(string token, string spaceID, string name) {
            object[] results = this.Invoke("getExtendedSubjectArea", new object[] {
                        token,
                        spaceID,
                        name});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getExtendedSubjectAreaAsync(string token, string spaceID, string name) {
            this.getExtendedSubjectAreaAsync(token, spaceID, name, null);
        }
        
        /// <remarks/>
        public void getExtendedSubjectAreaAsync(string token, string spaceID, string name, object userState) {
            if ((this.getExtendedSubjectAreaOperationCompleted == null)) {
                this.getExtendedSubjectAreaOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetExtendedSubjectAreaOperationCompleted);
            }
            this.InvokeAsync("getExtendedSubjectArea", new object[] {
                        token,
                        spaceID,
                        name}, this.getExtendedSubjectAreaOperationCompleted, userState);
        }
        
        private void OngetExtendedSubjectAreaOperationCompleted(object arg) {
            if ((this.getExtendedSubjectAreaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getExtendedSubjectAreaCompleted(this, new getExtendedSubjectAreaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/getUpdatedSubjectArea", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getUpdatedSubjectArea(string token, string spaceID, string name, string query) {
            object[] results = this.Invoke("getUpdatedSubjectArea", new object[] {
                        token,
                        spaceID,
                        name,
                        query});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getUpdatedSubjectAreaAsync(string token, string spaceID, string name, string query) {
            this.getUpdatedSubjectAreaAsync(token, spaceID, name, query, null);
        }
        
        /// <remarks/>
        public void getUpdatedSubjectAreaAsync(string token, string spaceID, string name, string query, object userState) {
            if ((this.getUpdatedSubjectAreaOperationCompleted == null)) {
                this.getUpdatedSubjectAreaOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUpdatedSubjectAreaOperationCompleted);
            }
            this.InvokeAsync("getUpdatedSubjectArea", new object[] {
                        token,
                        spaceID,
                        name,
                        query}, this.getUpdatedSubjectAreaOperationCompleted, userState);
        }
        
        private void OngetUpdatedSubjectAreaOperationCompleted(object arg) {
            if ((this.getUpdatedSubjectAreaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUpdatedSubjectAreaCompleted(this, new getUpdatedSubjectAreaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/createSubjectArea", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void createSubjectArea(string token, string spaceID, string name, string description, string[] groups) {
            this.Invoke("createSubjectArea", new object[] {
                        token,
                        spaceID,
                        name,
                        description,
                        groups});
        }
        
        /// <remarks/>
        public void createSubjectAreaAsync(string token, string spaceID, string name, string description, string[] groups) {
            this.createSubjectAreaAsync(token, spaceID, name, description, groups, null);
        }
        
        /// <remarks/>
        public void createSubjectAreaAsync(string token, string spaceID, string name, string description, string[] groups, object userState) {
            if ((this.createSubjectAreaOperationCompleted == null)) {
                this.createSubjectAreaOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateSubjectAreaOperationCompleted);
            }
            this.InvokeAsync("createSubjectArea", new object[] {
                        token,
                        spaceID,
                        name,
                        description,
                        groups}, this.createSubjectAreaOperationCompleted, userState);
        }
        
        private void OncreateSubjectAreaOperationCompleted(object arg) {
            if ((this.createSubjectAreaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createSubjectAreaCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/renameSubjectArea", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void renameSubjectArea(string token, string spaceID, string name, string newName) {
            this.Invoke("renameSubjectArea", new object[] {
                        token,
                        spaceID,
                        name,
                        newName});
        }
        
        /// <remarks/>
        public void renameSubjectAreaAsync(string token, string spaceID, string name, string newName) {
            this.renameSubjectAreaAsync(token, spaceID, name, newName, null);
        }
        
        /// <remarks/>
        public void renameSubjectAreaAsync(string token, string spaceID, string name, string newName, object userState) {
            if ((this.renameSubjectAreaOperationCompleted == null)) {
                this.renameSubjectAreaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrenameSubjectAreaOperationCompleted);
            }
            this.InvokeAsync("renameSubjectArea", new object[] {
                        token,
                        spaceID,
                        name,
                        newName}, this.renameSubjectAreaOperationCompleted, userState);
        }
        
        private void OnrenameSubjectAreaOperationCompleted(object arg) {
            if ((this.renameSubjectAreaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.renameSubjectAreaCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/setSubjectAreaPermissions", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setSubjectAreaPermissions(string token, string spaceID, string name, string[] groups) {
            this.Invoke("setSubjectAreaPermissions", new object[] {
                        token,
                        spaceID,
                        name,
                        groups});
        }
        
        /// <remarks/>
        public void setSubjectAreaPermissionsAsync(string token, string spaceID, string name, string[] groups) {
            this.setSubjectAreaPermissionsAsync(token, spaceID, name, groups, null);
        }
        
        /// <remarks/>
        public void setSubjectAreaPermissionsAsync(string token, string spaceID, string name, string[] groups, object userState) {
            if ((this.setSubjectAreaPermissionsOperationCompleted == null)) {
                this.setSubjectAreaPermissionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetSubjectAreaPermissionsOperationCompleted);
            }
            this.InvokeAsync("setSubjectAreaPermissions", new object[] {
                        token,
                        spaceID,
                        name,
                        groups}, this.setSubjectAreaPermissionsOperationCompleted, userState);
        }
        
        private void OnsetSubjectAreaPermissionsOperationCompleted(object arg) {
            if ((this.setSubjectAreaPermissionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setSubjectAreaPermissionsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/getSubjectAreaPermissions", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] getSubjectAreaPermissions(string token, string spaceID, string name) {
            object[] results = this.Invoke("getSubjectAreaPermissions", new object[] {
                        token,
                        spaceID,
                        name});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getSubjectAreaPermissionsAsync(string token, string spaceID, string name) {
            this.getSubjectAreaPermissionsAsync(token, spaceID, name, null);
        }
        
        /// <remarks/>
        public void getSubjectAreaPermissionsAsync(string token, string spaceID, string name, object userState) {
            if ((this.getSubjectAreaPermissionsOperationCompleted == null)) {
                this.getSubjectAreaPermissionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSubjectAreaPermissionsOperationCompleted);
            }
            this.InvokeAsync("getSubjectAreaPermissions", new object[] {
                        token,
                        spaceID,
                        name}, this.getSubjectAreaPermissionsOperationCompleted, userState);
        }
        
        private void OngetSubjectAreaPermissionsOperationCompleted(object arg) {
            if ((this.getSubjectAreaPermissionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSubjectAreaPermissionsCompleted(this, new getSubjectAreaPermissionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/setSubjectAreaDescription", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setSubjectAreaDescription(string token, string spaceID, string name, string description) {
            this.Invoke("setSubjectAreaDescription", new object[] {
                        token,
                        spaceID,
                        name,
                        description});
        }
        
        /// <remarks/>
        public void setSubjectAreaDescriptionAsync(string token, string spaceID, string name, string description) {
            this.setSubjectAreaDescriptionAsync(token, spaceID, name, description, null);
        }
        
        /// <remarks/>
        public void setSubjectAreaDescriptionAsync(string token, string spaceID, string name, string description, object userState) {
            if ((this.setSubjectAreaDescriptionOperationCompleted == null)) {
                this.setSubjectAreaDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetSubjectAreaDescriptionOperationCompleted);
            }
            this.InvokeAsync("setSubjectAreaDescription", new object[] {
                        token,
                        spaceID,
                        name,
                        description}, this.setSubjectAreaDescriptionOperationCompleted, userState);
        }
        
        private void OnsetSubjectAreaDescriptionOperationCompleted(object arg) {
            if ((this.setSubjectAreaDescriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setSubjectAreaDescriptionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/getSubjectAreaDescription", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getSubjectAreaDescription(string token, string spaceID, string name) {
            object[] results = this.Invoke("getSubjectAreaDescription", new object[] {
                        token,
                        spaceID,
                        name});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getSubjectAreaDescriptionAsync(string token, string spaceID, string name) {
            this.getSubjectAreaDescriptionAsync(token, spaceID, name, null);
        }
        
        /// <remarks/>
        public void getSubjectAreaDescriptionAsync(string token, string spaceID, string name, object userState) {
            if ((this.getSubjectAreaDescriptionOperationCompleted == null)) {
                this.getSubjectAreaDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSubjectAreaDescriptionOperationCompleted);
            }
            this.InvokeAsync("getSubjectAreaDescription", new object[] {
                        token,
                        spaceID,
                        name}, this.getSubjectAreaDescriptionOperationCompleted, userState);
        }
        
        private void OngetSubjectAreaDescriptionOperationCompleted(object arg) {
            if ((this.getSubjectAreaDescriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSubjectAreaDescriptionCompleted(this, new getSubjectAreaDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/setSubjectArea", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setSubjectArea(string token, string spaceID, string saContent) {
            this.Invoke("setSubjectArea", new object[] {
                        token,
                        spaceID,
                        saContent});
        }
        
        /// <remarks/>
        public void setSubjectAreaAsync(string token, string spaceID, string saContent) {
            this.setSubjectAreaAsync(token, spaceID, saContent, null);
        }
        
        /// <remarks/>
        public void setSubjectAreaAsync(string token, string spaceID, string saContent, object userState) {
            if ((this.setSubjectAreaOperationCompleted == null)) {
                this.setSubjectAreaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetSubjectAreaOperationCompleted);
            }
            this.InvokeAsync("setSubjectArea", new object[] {
                        token,
                        spaceID,
                        saContent}, this.setSubjectAreaOperationCompleted, userState);
        }
        
        private void OnsetSubjectAreaOperationCompleted(object arg) {
            if ((this.setSubjectAreaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setSubjectAreaCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/addExpressionToSubjectArea", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addExpressionToSubjectArea(string token, string spaceID, string expressionName, string csaName, string location) {
            this.Invoke("addExpressionToSubjectArea", new object[] {
                        token,
                        spaceID,
                        expressionName,
                        csaName,
                        location});
        }
        
        /// <remarks/>
        public void addExpressionToSubjectAreaAsync(string token, string spaceID, string expressionName, string csaName, string location) {
            this.addExpressionToSubjectAreaAsync(token, spaceID, expressionName, csaName, location, null);
        }
        
        /// <remarks/>
        public void addExpressionToSubjectAreaAsync(string token, string spaceID, string expressionName, string csaName, string location, object userState) {
            if ((this.addExpressionToSubjectAreaOperationCompleted == null)) {
                this.addExpressionToSubjectAreaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddExpressionToSubjectAreaOperationCompleted);
            }
            this.InvokeAsync("addExpressionToSubjectArea", new object[] {
                        token,
                        spaceID,
                        expressionName,
                        csaName,
                        location}, this.addExpressionToSubjectAreaOperationCompleted, userState);
        }
        
        private void OnaddExpressionToSubjectAreaOperationCompleted(object arg) {
            if ((this.addExpressionToSubjectAreaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addExpressionToSubjectAreaCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/removeExpressionFromSubjectArea", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void removeExpressionFromSubjectArea(string token, string spaceID, string expressionName, string csaName, string location) {
            this.Invoke("removeExpressionFromSubjectArea", new object[] {
                        token,
                        spaceID,
                        expressionName,
                        csaName,
                        location});
        }
        
        /// <remarks/>
        public void removeExpressionFromSubjectAreaAsync(string token, string spaceID, string expressionName, string csaName, string location) {
            this.removeExpressionFromSubjectAreaAsync(token, spaceID, expressionName, csaName, location, null);
        }
        
        /// <remarks/>
        public void removeExpressionFromSubjectAreaAsync(string token, string spaceID, string expressionName, string csaName, string location, object userState) {
            if ((this.removeExpressionFromSubjectAreaOperationCompleted == null)) {
                this.removeExpressionFromSubjectAreaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveExpressionFromSubjectAreaOperationCompleted);
            }
            this.InvokeAsync("removeExpressionFromSubjectArea", new object[] {
                        token,
                        spaceID,
                        expressionName,
                        csaName,
                        location}, this.removeExpressionFromSubjectAreaOperationCompleted, userState);
        }
        
        private void OnremoveExpressionFromSubjectAreaOperationCompleted(object arg) {
            if ((this.removeExpressionFromSubjectAreaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeExpressionFromSubjectAreaCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/deleteSubjectArea", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteSubjectArea(string token, string spaceID, string name) {
            this.Invoke("deleteSubjectArea", new object[] {
                        token,
                        spaceID,
                        name});
        }
        
        /// <remarks/>
        public void deleteSubjectAreaAsync(string token, string spaceID, string name) {
            this.deleteSubjectAreaAsync(token, spaceID, name, null);
        }
        
        /// <remarks/>
        public void deleteSubjectAreaAsync(string token, string spaceID, string name, object userState) {
            if ((this.deleteSubjectAreaOperationCompleted == null)) {
                this.deleteSubjectAreaOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteSubjectAreaOperationCompleted);
            }
            this.InvokeAsync("deleteSubjectArea", new object[] {
                        token,
                        spaceID,
                        name}, this.deleteSubjectAreaOperationCompleted, userState);
        }
        
        private void OndeleteSubjectAreaOperationCompleted(object arg) {
            if ((this.deleteSubjectAreaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteSubjectAreaCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/listSpaces", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserSpace[] listSpaces(string token) {
            object[] results = this.Invoke("listSpaces", new object[] {
                        token});
            return ((UserSpace[])(results[0]));
        }
        
        /// <remarks/>
        public void listSpacesAsync(string token) {
            this.listSpacesAsync(token, null);
        }
        
        /// <remarks/>
        public void listSpacesAsync(string token, object userState) {
            if ((this.listSpacesOperationCompleted == null)) {
                this.listSpacesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistSpacesOperationCompleted);
            }
            this.InvokeAsync("listSpaces", new object[] {
                        token}, this.listSpacesOperationCompleted, userState);
        }
        
        private void OnlistSpacesOperationCompleted(object arg) {
            if ((this.listSpacesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listSpacesCompleted(this, new listSpacesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/deleteLastDataFromSpace", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string deleteLastDataFromSpace(string token, string spaceID) {
            object[] results = this.Invoke("deleteLastDataFromSpace", new object[] {
                        token,
                        spaceID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteLastDataFromSpaceAsync(string token, string spaceID) {
            this.deleteLastDataFromSpaceAsync(token, spaceID, null);
        }
        
        /// <remarks/>
        public void deleteLastDataFromSpaceAsync(string token, string spaceID, object userState) {
            if ((this.deleteLastDataFromSpaceOperationCompleted == null)) {
                this.deleteLastDataFromSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteLastDataFromSpaceOperationCompleted);
            }
            this.InvokeAsync("deleteLastDataFromSpace", new object[] {
                        token,
                        spaceID}, this.deleteLastDataFromSpaceOperationCompleted, userState);
        }
        
        private void OndeleteLastDataFromSpaceOperationCompleted(object arg) {
            if ((this.deleteLastDataFromSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteLastDataFromSpaceCompleted(this, new deleteLastDataFromSpaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/deleteAllDataFromSpace", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string deleteAllDataFromSpace(string token, string spaceID) {
            object[] results = this.Invoke("deleteAllDataFromSpace", new object[] {
                        token,
                        spaceID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteAllDataFromSpaceAsync(string token, string spaceID) {
            this.deleteAllDataFromSpaceAsync(token, spaceID, null);
        }
        
        /// <remarks/>
        public void deleteAllDataFromSpaceAsync(string token, string spaceID, object userState) {
            if ((this.deleteAllDataFromSpaceOperationCompleted == null)) {
                this.deleteAllDataFromSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAllDataFromSpaceOperationCompleted);
            }
            this.InvokeAsync("deleteAllDataFromSpace", new object[] {
                        token,
                        spaceID}, this.deleteAllDataFromSpaceOperationCompleted, userState);
        }
        
        private void OndeleteAllDataFromSpaceOperationCompleted(object arg) {
            if ((this.deleteAllDataFromSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAllDataFromSpaceCompleted(this, new deleteAllDataFromSpaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/executeScheduledReport", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void executeScheduledReport(string token, string spaceId, string reportScheduleName) {
            this.Invoke("executeScheduledReport", new object[] {
                        token,
                        spaceId,
                        reportScheduleName});
        }
        
        /// <remarks/>
        public void executeScheduledReportAsync(string token, string spaceId, string reportScheduleName) {
            this.executeScheduledReportAsync(token, spaceId, reportScheduleName, null);
        }
        
        /// <remarks/>
        public void executeScheduledReportAsync(string token, string spaceId, string reportScheduleName, object userState) {
            if ((this.executeScheduledReportOperationCompleted == null)) {
                this.executeScheduledReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexecuteScheduledReportOperationCompleted);
            }
            this.InvokeAsync("executeScheduledReport", new object[] {
                        token,
                        spaceId,
                        reportScheduleName}, this.executeScheduledReportOperationCompleted, userState);
        }
        
        private void OnexecuteScheduledReportOperationCompleted(object arg) {
            if ((this.executeScheduledReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.executeScheduledReportCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/exportReportToPNG", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string exportReportToPNG(string token, string spaceId, string reportPath, Filter[] reportFilters, int zoomFactor, int page) {
            object[] results = this.Invoke("exportReportToPNG", new object[] {
                        token,
                        spaceId,
                        reportPath,
                        reportFilters,
                        zoomFactor,
                        page});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void exportReportToPNGAsync(string token, string spaceId, string reportPath, Filter[] reportFilters, int zoomFactor, int page) {
            this.exportReportToPNGAsync(token, spaceId, reportPath, reportFilters, zoomFactor, page, null);
        }
        
        /// <remarks/>
        public void exportReportToPNGAsync(string token, string spaceId, string reportPath, Filter[] reportFilters, int zoomFactor, int page, object userState) {
            if ((this.exportReportToPNGOperationCompleted == null)) {
                this.exportReportToPNGOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexportReportToPNGOperationCompleted);
            }
            this.InvokeAsync("exportReportToPNG", new object[] {
                        token,
                        spaceId,
                        reportPath,
                        reportFilters,
                        zoomFactor,
                        page}, this.exportReportToPNGOperationCompleted, userState);
        }
        
        private void OnexportReportToPNGOperationCompleted(object arg) {
            if ((this.exportReportToPNGCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.exportReportToPNGCompleted(this, new exportReportToPNGCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/exportReportToPDF", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string exportReportToPDF(string token, string spaceId, string reportPath, Filter[] reportFilters) {
            object[] results = this.Invoke("exportReportToPDF", new object[] {
                        token,
                        spaceId,
                        reportPath,
                        reportFilters});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void exportReportToPDFAsync(string token, string spaceId, string reportPath, Filter[] reportFilters) {
            this.exportReportToPDFAsync(token, spaceId, reportPath, reportFilters, null);
        }
        
        /// <remarks/>
        public void exportReportToPDFAsync(string token, string spaceId, string reportPath, Filter[] reportFilters, object userState) {
            if ((this.exportReportToPDFOperationCompleted == null)) {
                this.exportReportToPDFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexportReportToPDFOperationCompleted);
            }
            this.InvokeAsync("exportReportToPDF", new object[] {
                        token,
                        spaceId,
                        reportPath,
                        reportFilters}, this.exportReportToPDFOperationCompleted, userState);
        }
        
        private void OnexportReportToPDFOperationCompleted(object arg) {
            if ((this.exportReportToPDFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.exportReportToPDFCompleted(this, new exportReportToPDFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/exportReportToPPT", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string exportReportToPPT(string token, string spaceId, string reportPath, Filter[] reportFilters) {
            object[] results = this.Invoke("exportReportToPPT", new object[] {
                        token,
                        spaceId,
                        reportPath,
                        reportFilters});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void exportReportToPPTAsync(string token, string spaceId, string reportPath, Filter[] reportFilters) {
            this.exportReportToPPTAsync(token, spaceId, reportPath, reportFilters, null);
        }
        
        /// <remarks/>
        public void exportReportToPPTAsync(string token, string spaceId, string reportPath, Filter[] reportFilters, object userState) {
            if ((this.exportReportToPPTOperationCompleted == null)) {
                this.exportReportToPPTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexportReportToPPTOperationCompleted);
            }
            this.InvokeAsync("exportReportToPPT", new object[] {
                        token,
                        spaceId,
                        reportPath,
                        reportFilters}, this.exportReportToPPTOperationCompleted, userState);
        }
        
        private void OnexportReportToPPTOperationCompleted(object arg) {
            if ((this.exportReportToPPTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.exportReportToPPTCompleted(this, new exportReportToPPTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/exportReportToXLS", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string exportReportToXLS(string token, string spaceId, string reportPath, Filter[] reportFilters) {
            object[] results = this.Invoke("exportReportToXLS", new object[] {
                        token,
                        spaceId,
                        reportPath,
                        reportFilters});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void exportReportToXLSAsync(string token, string spaceId, string reportPath, Filter[] reportFilters) {
            this.exportReportToXLSAsync(token, spaceId, reportPath, reportFilters, null);
        }
        
        /// <remarks/>
        public void exportReportToXLSAsync(string token, string spaceId, string reportPath, Filter[] reportFilters, object userState) {
            if ((this.exportReportToXLSOperationCompleted == null)) {
                this.exportReportToXLSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexportReportToXLSOperationCompleted);
            }
            this.InvokeAsync("exportReportToXLS", new object[] {
                        token,
                        spaceId,
                        reportPath,
                        reportFilters}, this.exportReportToXLSOperationCompleted, userState);
        }
        
        private void OnexportReportToXLSOperationCompleted(object arg) {
            if ((this.exportReportToXLSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.exportReportToXLSCompleted(this, new exportReportToXLSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/exportReportToCSV", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string exportReportToCSV(string token, string spaceId, string reportPath, Filter[] reportFilters) {
            object[] results = this.Invoke("exportReportToCSV", new object[] {
                        token,
                        spaceId,
                        reportPath,
                        reportFilters});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void exportReportToCSVAsync(string token, string spaceId, string reportPath, Filter[] reportFilters) {
            this.exportReportToCSVAsync(token, spaceId, reportPath, reportFilters, null);
        }
        
        /// <remarks/>
        public void exportReportToCSVAsync(string token, string spaceId, string reportPath, Filter[] reportFilters, object userState) {
            if ((this.exportReportToCSVOperationCompleted == null)) {
                this.exportReportToCSVOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexportReportToCSVOperationCompleted);
            }
            this.InvokeAsync("exportReportToCSV", new object[] {
                        token,
                        spaceId,
                        reportPath,
                        reportFilters}, this.exportReportToCSVOperationCompleted, userState);
        }
        
        private void OnexportReportToCSVOperationCompleted(object arg) {
            if ((this.exportReportToCSVCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.exportReportToCSVCompleted(this, new exportReportToCSVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/exportReportToRTF", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string exportReportToRTF(string token, string spaceId, string reportPath, Filter[] reportFilters) {
            object[] results = this.Invoke("exportReportToRTF", new object[] {
                        token,
                        spaceId,
                        reportPath,
                        reportFilters});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void exportReportToRTFAsync(string token, string spaceId, string reportPath, Filter[] reportFilters) {
            this.exportReportToRTFAsync(token, spaceId, reportPath, reportFilters, null);
        }
        
        /// <remarks/>
        public void exportReportToRTFAsync(string token, string spaceId, string reportPath, Filter[] reportFilters, object userState) {
            if ((this.exportReportToRTFOperationCompleted == null)) {
                this.exportReportToRTFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexportReportToRTFOperationCompleted);
            }
            this.InvokeAsync("exportReportToRTF", new object[] {
                        token,
                        spaceId,
                        reportPath,
                        reportFilters}, this.exportReportToRTFOperationCompleted, userState);
        }
        
        private void OnexportReportToRTFOperationCompleted(object arg) {
            if ((this.exportReportToRTFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.exportReportToRTFCompleted(this, new exportReportToRTFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/getExportData", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getExportData(string token, string exportToken) {
            object[] results = this.Invoke("getExportData", new object[] {
                        token,
                        exportToken});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getExportDataAsync(string token, string exportToken) {
            this.getExportDataAsync(token, exportToken, null);
        }
        
        /// <remarks/>
        public void getExportDataAsync(string token, string exportToken, object userState) {
            if ((this.getExportDataOperationCompleted == null)) {
                this.getExportDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetExportDataOperationCompleted);
            }
            this.InvokeAsync("getExportData", new object[] {
                        token,
                        exportToken}, this.getExportDataOperationCompleted, userState);
        }
        
        private void OngetExportDataOperationCompleted(object arg) {
            if ((this.getExportDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getExportDataCompleted(this, new getExportDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/setSpaceSSOPassword", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setSpaceSSOPassword(string token, string spaceID, string password) {
            this.Invoke("setSpaceSSOPassword", new object[] {
                        token,
                        spaceID,
                        password});
        }
        
        /// <remarks/>
        public void setSpaceSSOPasswordAsync(string token, string spaceID, string password) {
            this.setSpaceSSOPasswordAsync(token, spaceID, password, null);
        }
        
        /// <remarks/>
        public void setSpaceSSOPasswordAsync(string token, string spaceID, string password, object userState) {
            if ((this.setSpaceSSOPasswordOperationCompleted == null)) {
                this.setSpaceSSOPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetSpaceSSOPasswordOperationCompleted);
            }
            this.InvokeAsync("setSpaceSSOPassword", new object[] {
                        token,
                        spaceID,
                        password}, this.setSpaceSSOPasswordOperationCompleted, userState);
        }
        
        private void OnsetSpaceSSOPasswordOperationCompleted(object arg) {
            if ((this.setSpaceSSOPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setSpaceSSOPasswordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/extractSalesforceData", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string extractSalesforceData(string token, string spaceID) {
            object[] results = this.Invoke("extractSalesforceData", new object[] {
                        token,
                        spaceID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void extractSalesforceDataAsync(string token, string spaceID) {
            this.extractSalesforceDataAsync(token, spaceID, null);
        }
        
        /// <remarks/>
        public void extractSalesforceDataAsync(string token, string spaceID, object userState) {
            if ((this.extractSalesforceDataOperationCompleted == null)) {
                this.extractSalesforceDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractSalesforceDataOperationCompleted);
            }
            this.InvokeAsync("extractSalesforceData", new object[] {
                        token,
                        spaceID}, this.extractSalesforceDataOperationCompleted, userState);
        }
        
        private void OnextractSalesforceDataOperationCompleted(object arg) {
            if ((this.extractSalesforceDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractSalesforceDataCompleted(this, new extractSalesforceDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/extractConnectorData", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string extractConnectorData(string token, string spaceID, string connectorName, string[] extractGroups) {
            object[] results = this.Invoke("extractConnectorData", new object[] {
                        token,
                        spaceID,
                        connectorName,
                        extractGroups});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void extractConnectorDataAsync(string token, string spaceID, string connectorName, string[] extractGroups) {
            this.extractConnectorDataAsync(token, spaceID, connectorName, extractGroups, null);
        }
        
        /// <remarks/>
        public void extractConnectorDataAsync(string token, string spaceID, string connectorName, string[] extractGroups, object userState) {
            if ((this.extractConnectorDataOperationCompleted == null)) {
                this.extractConnectorDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractConnectorDataOperationCompleted);
            }
            this.InvokeAsync("extractConnectorData", new object[] {
                        token,
                        spaceID,
                        connectorName,
                        extractGroups}, this.extractConnectorDataOperationCompleted, userState);
        }
        
        private void OnextractConnectorDataOperationCompleted(object arg) {
            if ((this.extractConnectorDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractConnectorDataCompleted(this, new extractConnectorDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/extractCloudConnectorData", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string extractCloudConnectorData(string token, string spaceID, CloudConnection[] cloudConnections) {
            object[] results = this.Invoke("extractCloudConnectorData", new object[] {
                        token,
                        spaceID,
                        cloudConnections});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void extractCloudConnectorDataAsync(string token, string spaceID, CloudConnection[] cloudConnections) {
            this.extractCloudConnectorDataAsync(token, spaceID, cloudConnections, null);
        }
        
        /// <remarks/>
        public void extractCloudConnectorDataAsync(string token, string spaceID, CloudConnection[] cloudConnections, object userState) {
            if ((this.extractCloudConnectorDataOperationCompleted == null)) {
                this.extractCloudConnectorDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractCloudConnectorDataOperationCompleted);
            }
            this.InvokeAsync("extractCloudConnectorData", new object[] {
                        token,
                        spaceID,
                        cloudConnections}, this.extractCloudConnectorDataOperationCompleted, userState);
        }
        
        private void OnextractCloudConnectorDataOperationCompleted(object arg) {
            if ((this.extractCloudConnectorDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractCloudConnectorDataCompleted(this, new extractCloudConnectorDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/getSpaceJNLPFile", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getSpaceJNLPFile(string token, string spaceID, string configfile) {
            object[] results = this.Invoke("getSpaceJNLPFile", new object[] {
                        token,
                        spaceID,
                        configfile});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getSpaceJNLPFileAsync(string token, string spaceID, string configfile) {
            this.getSpaceJNLPFileAsync(token, spaceID, configfile, null);
        }
        
        /// <remarks/>
        public void getSpaceJNLPFileAsync(string token, string spaceID, string configfile, object userState) {
            if ((this.getSpaceJNLPFileOperationCompleted == null)) {
                this.getSpaceJNLPFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSpaceJNLPFileOperationCompleted);
            }
            this.InvokeAsync("getSpaceJNLPFile", new object[] {
                        token,
                        spaceID,
                        configfile}, this.getSpaceJNLPFileOperationCompleted, userState);
        }
        
        private void OngetSpaceJNLPFileOperationCompleted(object arg) {
            if ((this.getSpaceJNLPFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSpaceJNLPFileCompleted(this, new getSpaceJNLPFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/getSpaceStatistics", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SpaceStatistics getSpaceStatistics(string token, string spaceID) {
            object[] results = this.Invoke("getSpaceStatistics", new object[] {
                        token,
                        spaceID});
            return ((SpaceStatistics)(results[0]));
        }
        
        /// <remarks/>
        public void getSpaceStatisticsAsync(string token, string spaceID) {
            this.getSpaceStatisticsAsync(token, spaceID, null);
        }
        
        /// <remarks/>
        public void getSpaceStatisticsAsync(string token, string spaceID, object userState) {
            if ((this.getSpaceStatisticsOperationCompleted == null)) {
                this.getSpaceStatisticsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSpaceStatisticsOperationCompleted);
            }
            this.InvokeAsync("getSpaceStatistics", new object[] {
                        token,
                        spaceID}, this.getSpaceStatisticsOperationCompleted, userState);
        }
        
        private void OngetSpaceStatisticsOperationCompleted(object arg) {
            if ((this.getSpaceStatisticsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSpaceStatisticsCompleted(this, new getSpaceStatisticsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/setUpGenericJDBCRealTimeConnectionForSpace", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool setUpGenericJDBCRealTimeConnectionForSpace(string token, string spaceID, string configFileName, string connectionName, bool useDirectConnection, string sqlType, string driverName, string connectionString, string filter, string userName, string password, int timeout) {
            object[] results = this.Invoke("setUpGenericJDBCRealTimeConnectionForSpace", new object[] {
                        token,
                        spaceID,
                        configFileName,
                        connectionName,
                        useDirectConnection,
                        sqlType,
                        driverName,
                        connectionString,
                        filter,
                        userName,
                        password,
                        timeout});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void setUpGenericJDBCRealTimeConnectionForSpaceAsync(string token, string spaceID, string configFileName, string connectionName, bool useDirectConnection, string sqlType, string driverName, string connectionString, string filter, string userName, string password, int timeout) {
            this.setUpGenericJDBCRealTimeConnectionForSpaceAsync(token, spaceID, configFileName, connectionName, useDirectConnection, sqlType, driverName, connectionString, filter, userName, password, timeout, null);
        }
        
        /// <remarks/>
        public void setUpGenericJDBCRealTimeConnectionForSpaceAsync(string token, string spaceID, string configFileName, string connectionName, bool useDirectConnection, string sqlType, string driverName, string connectionString, string filter, string userName, string password, int timeout, object userState) {
            if ((this.setUpGenericJDBCRealTimeConnectionForSpaceOperationCompleted == null)) {
                this.setUpGenericJDBCRealTimeConnectionForSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetUpGenericJDBCRealTimeConnectionForSpaceOperationCompleted);
            }
            this.InvokeAsync("setUpGenericJDBCRealTimeConnectionForSpace", new object[] {
                        token,
                        spaceID,
                        configFileName,
                        connectionName,
                        useDirectConnection,
                        sqlType,
                        driverName,
                        connectionString,
                        filter,
                        userName,
                        password,
                        timeout}, this.setUpGenericJDBCRealTimeConnectionForSpaceOperationCompleted, userState);
        }
        
        private void OnsetUpGenericJDBCRealTimeConnectionForSpaceOperationCompleted(object arg) {
            if ((this.setUpGenericJDBCRealTimeConnectionForSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setUpGenericJDBCRealTimeConnectionForSpaceCompleted(this, new setUpGenericJDBCRealTimeConnectionForSpaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/setUpRealTimeConnectionForSpace", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool setUpRealTimeConnectionForSpace(string token, string spaceID, string configFileName, string connectionName, string databaseType, bool useDirectConnection, string host, int port, string databaseName, string userName, string password, int timeout) {
            object[] results = this.Invoke("setUpRealTimeConnectionForSpace", new object[] {
                        token,
                        spaceID,
                        configFileName,
                        connectionName,
                        databaseType,
                        useDirectConnection,
                        host,
                        port,
                        databaseName,
                        userName,
                        password,
                        timeout});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void setUpRealTimeConnectionForSpaceAsync(string token, string spaceID, string configFileName, string connectionName, string databaseType, bool useDirectConnection, string host, int port, string databaseName, string userName, string password, int timeout) {
            this.setUpRealTimeConnectionForSpaceAsync(token, spaceID, configFileName, connectionName, databaseType, useDirectConnection, host, port, databaseName, userName, password, timeout, null);
        }
        
        /// <remarks/>
        public void setUpRealTimeConnectionForSpaceAsync(string token, string spaceID, string configFileName, string connectionName, string databaseType, bool useDirectConnection, string host, int port, string databaseName, string userName, string password, int timeout, object userState) {
            if ((this.setUpRealTimeConnectionForSpaceOperationCompleted == null)) {
                this.setUpRealTimeConnectionForSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetUpRealTimeConnectionForSpaceOperationCompleted);
            }
            this.InvokeAsync("setUpRealTimeConnectionForSpace", new object[] {
                        token,
                        spaceID,
                        configFileName,
                        connectionName,
                        databaseType,
                        useDirectConnection,
                        host,
                        port,
                        databaseName,
                        userName,
                        password,
                        timeout}, this.setUpRealTimeConnectionForSpaceOperationCompleted, userState);
        }
        
        private void OnsetUpRealTimeConnectionForSpaceOperationCompleted(object arg) {
            if ((this.setUpRealTimeConnectionForSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setUpRealTimeConnectionForSpaceCompleted(this, new setUpRealTimeConnectionForSpaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/modifyRealTimeConnectionInformation", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void modifyRealTimeConnectionInformation(string token, string spaceID, string configFileName, string connectionName, string host, int port, string databaseName, string userName, string password, int timeout) {
            this.Invoke("modifyRealTimeConnectionInformation", new object[] {
                        token,
                        spaceID,
                        configFileName,
                        connectionName,
                        host,
                        port,
                        databaseName,
                        userName,
                        password,
                        timeout});
        }
        
        /// <remarks/>
        public void modifyRealTimeConnectionInformationAsync(string token, string spaceID, string configFileName, string connectionName, string host, int port, string databaseName, string userName, string password, int timeout) {
            this.modifyRealTimeConnectionInformationAsync(token, spaceID, configFileName, connectionName, host, port, databaseName, userName, password, timeout, null);
        }
        
        /// <remarks/>
        public void modifyRealTimeConnectionInformationAsync(string token, string spaceID, string configFileName, string connectionName, string host, int port, string databaseName, string userName, string password, int timeout, object userState) {
            if ((this.modifyRealTimeConnectionInformationOperationCompleted == null)) {
                this.modifyRealTimeConnectionInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmodifyRealTimeConnectionInformationOperationCompleted);
            }
            this.InvokeAsync("modifyRealTimeConnectionInformation", new object[] {
                        token,
                        spaceID,
                        configFileName,
                        connectionName,
                        host,
                        port,
                        databaseName,
                        userName,
                        password,
                        timeout}, this.modifyRealTimeConnectionInformationOperationCompleted, userState);
        }
        
        private void OnmodifyRealTimeConnectionInformationOperationCompleted(object arg) {
            if ((this.modifyRealTimeConnectionInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.modifyRealTimeConnectionInformationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/importCubeMetaDataIntoSpace", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool importCubeMetaDataIntoSpace(string token, string spaceID, string connectionName, string databaseType, string cubeName, int importType, bool cacheable) {
            object[] results = this.Invoke("importCubeMetaDataIntoSpace", new object[] {
                        token,
                        spaceID,
                        connectionName,
                        databaseType,
                        cubeName,
                        importType,
                        cacheable});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void importCubeMetaDataIntoSpaceAsync(string token, string spaceID, string connectionName, string databaseType, string cubeName, int importType, bool cacheable) {
            this.importCubeMetaDataIntoSpaceAsync(token, spaceID, connectionName, databaseType, cubeName, importType, cacheable, null);
        }
        
        /// <remarks/>
        public void importCubeMetaDataIntoSpaceAsync(string token, string spaceID, string connectionName, string databaseType, string cubeName, int importType, bool cacheable, object userState) {
            if ((this.importCubeMetaDataIntoSpaceOperationCompleted == null)) {
                this.importCubeMetaDataIntoSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnimportCubeMetaDataIntoSpaceOperationCompleted);
            }
            this.InvokeAsync("importCubeMetaDataIntoSpace", new object[] {
                        token,
                        spaceID,
                        connectionName,
                        databaseType,
                        cubeName,
                        importType,
                        cacheable}, this.importCubeMetaDataIntoSpaceOperationCompleted, userState);
        }
        
        private void OnimportCubeMetaDataIntoSpaceOperationCompleted(object arg) {
            if ((this.importCubeMetaDataIntoSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.importCubeMetaDataIntoSpaceCompleted(this, new importCubeMetaDataIntoSpaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/setUserPassword", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setUserPassword(string token, string userName, string password) {
            this.Invoke("setUserPassword", new object[] {
                        token,
                        userName,
                        password});
        }
        
        /// <remarks/>
        public void setUserPasswordAsync(string token, string userName, string password) {
            this.setUserPasswordAsync(token, userName, password, null);
        }
        
        /// <remarks/>
        public void setUserPasswordAsync(string token, string userName, string password, object userState) {
            if ((this.setUserPasswordOperationCompleted == null)) {
                this.setUserPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetUserPasswordOperationCompleted);
            }
            this.InvokeAsync("setUserPassword", new object[] {
                        token,
                        userName,
                        password}, this.setUserPasswordOperationCompleted, userState);
        }
        
        private void OnsetUserPasswordOperationCompleted(object arg) {
            if ((this.setUserPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setUserPasswordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/clearDashboardCache", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void clearDashboardCache(string token, string spaceID) {
            this.Invoke("clearDashboardCache", new object[] {
                        token,
                        spaceID});
        }
        
        /// <remarks/>
        public void clearDashboardCacheAsync(string token, string spaceID) {
            this.clearDashboardCacheAsync(token, spaceID, null);
        }
        
        /// <remarks/>
        public void clearDashboardCacheAsync(string token, string spaceID, object userState) {
            if ((this.clearDashboardCacheOperationCompleted == null)) {
                this.clearDashboardCacheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnclearDashboardCacheOperationCompleted);
            }
            this.InvokeAsync("clearDashboardCache", new object[] {
                        token,
                        spaceID}, this.clearDashboardCacheOperationCompleted, userState);
        }
        
        private void OnclearDashboardCacheOperationCompleted(object arg) {
            if ((this.clearDashboardCacheCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.clearDashboardCacheCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/renameDashboard", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void renameDashboard(string token, string spaceID, string dashName, string newDashName) {
            this.Invoke("renameDashboard", new object[] {
                        token,
                        spaceID,
                        dashName,
                        newDashName});
        }
        
        /// <remarks/>
        public void renameDashboardAsync(string token, string spaceID, string dashName, string newDashName) {
            this.renameDashboardAsync(token, spaceID, dashName, newDashName, null);
        }
        
        /// <remarks/>
        public void renameDashboardAsync(string token, string spaceID, string dashName, string newDashName, object userState) {
            if ((this.renameDashboardOperationCompleted == null)) {
                this.renameDashboardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrenameDashboardOperationCompleted);
            }
            this.InvokeAsync("renameDashboard", new object[] {
                        token,
                        spaceID,
                        dashName,
                        newDashName}, this.renameDashboardOperationCompleted, userState);
        }
        
        private void OnrenameDashboardOperationCompleted(object arg) {
            if ((this.renameDashboardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.renameDashboardCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.birst.com/renameDashboardPage", RequestNamespace="http://www.birst.com/", ResponseNamespace="http://www.birst.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void renameDashboardPage(string token, string spaceID, string dashName, string pageName, string newPageName) {
            this.Invoke("renameDashboardPage", new object[] {
                        token,
                        spaceID,
                        dashName,
                        pageName,
                        newPageName});
        }
        
        /// <remarks/>
        public void renameDashboardPageAsync(string token, string spaceID, string dashName, string pageName, string newPageName) {
            this.renameDashboardPageAsync(token, spaceID, dashName, pageName, newPageName, null);
        }
        
        /// <remarks/>
        public void renameDashboardPageAsync(string token, string spaceID, string dashName, string pageName, string newPageName, object userState) {
            if ((this.renameDashboardPageOperationCompleted == null)) {
                this.renameDashboardPageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrenameDashboardPageOperationCompleted);
            }
            this.InvokeAsync("renameDashboardPage", new object[] {
                        token,
                        spaceID,
                        dashName,
                        pageName,
                        newPageName}, this.renameDashboardPageOperationCompleted, userState);
        }
        
        private void OnrenameDashboardPageOperationCompleted(object arg) {
            if ((this.renameDashboardPageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.renameDashboardPageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.birst.com/")]
    public partial class Language {
        
        private string codeField;
        
        private string descriptionField;
        
        /// <remarks/>
        public string code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.birst.com/")]
    public partial class SpaceStatistics {
        
        private string spaceSizeField;
        
        private int userCountField;
        
        /// <remarks/>
        public string SpaceSize {
            get {
                return this.spaceSizeField;
            }
            set {
                this.spaceSizeField = value;
            }
        }
        
        /// <remarks/>
        public int UserCount {
            get {
                return this.userCountField;
            }
            set {
                this.userCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.birst.com/")]
    public partial class CloudConnection {
        
        private string connectionNameField;
        
        private string[] extractionGroupsField;
        
        /// <remarks/>
        public string ConnectionName {
            get {
                return this.connectionNameField;
            }
            set {
                this.connectionNameField = value;
            }
        }
        
        /// <remarks/>
        public string[] ExtractionGroups {
            get {
                return this.extractionGroupsField;
            }
            set {
                this.extractionGroupsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.birst.com/")]
    public partial class UserSpace {
        
        private string nameField;
        
        private string ownerField;
        
        private string idField;
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.birst.com/")]
    public partial class SetGroupPermission {
        
        private string groupNameField;
        
        private bool canViewField;
        
        private bool canModifyField;
        
        private bool recursiveField;
        
        /// <remarks/>
        public string groupName {
            get {
                return this.groupNameField;
            }
            set {
                this.groupNameField = value;
            }
        }
        
        /// <remarks/>
        public bool canView {
            get {
                return this.canViewField;
            }
            set {
                this.canViewField = value;
            }
        }
        
        /// <remarks/>
        public bool canModify {
            get {
                return this.canModifyField;
            }
            set {
                this.canModifyField = value;
            }
        }
        
        /// <remarks/>
        public bool recursive {
            get {
                return this.recursiveField;
            }
            set {
                this.recursiveField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.birst.com/")]
    public partial class SetCatalogPermission {
        
        private string directoryField;
        
        private SetGroupPermission[] groupPermissionField;
        
        /// <remarks/>
        public string directory {
            get {
                return this.directoryField;
            }
            set {
                this.directoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("GroupPermission")]
        public SetGroupPermission[] GroupPermission {
            get {
                return this.groupPermissionField;
            }
            set {
                this.groupPermissionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.birst.com/")]
    public partial class GroupPermission {
        
        private string groupNameField;
        
        private bool canViewField;
        
        private bool canModifyField;
        
        /// <remarks/>
        public string groupName {
            get {
                return this.groupNameField;
            }
            set {
                this.groupNameField = value;
            }
        }
        
        /// <remarks/>
        public bool canView {
            get {
                return this.canViewField;
            }
            set {
                this.canViewField = value;
            }
        }
        
        /// <remarks/>
        public bool canModify {
            get {
                return this.canModifyField;
            }
            set {
                this.canModifyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.birst.com/")]
    public partial class FileNode {
        
        private string nameField;
        
        private string labelField;
        
        private bool isDirectoryField;
        
        private bool isWriteableField;
        
        private string lastModifiedField;
        
        private bool isDashboardField;
        
        private string createdByField;
        
        private FileNode[] childrenField;
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
            }
        }
        
        /// <remarks/>
        public bool isDirectory {
            get {
                return this.isDirectoryField;
            }
            set {
                this.isDirectoryField = value;
            }
        }
        
        /// <remarks/>
        public bool isWriteable {
            get {
                return this.isWriteableField;
            }
            set {
                this.isWriteableField = value;
            }
        }
        
        /// <remarks/>
        public string lastModified {
            get {
                return this.lastModifiedField;
            }
            set {
                this.lastModifiedField = value;
            }
        }
        
        /// <remarks/>
        public bool isDashboard {
            get {
                return this.isDashboardField;
            }
            set {
                this.isDashboardField = value;
            }
        }
        
        /// <remarks/>
        public string createdBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
            }
        }
        
        /// <remarks/>
        public FileNode[] children {
            get {
                return this.childrenField;
            }
            set {
                this.childrenField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.birst.com/")]
    public partial class StatusResult {
        
        private string processingGroupField;
        
        private int typeField;
        
        private int loadidField;
        
        private string messageField;
        
        private string statusCodeField;
        
        /// <remarks/>
        public string processingGroup {
            get {
                return this.processingGroupField;
            }
            set {
                this.processingGroupField = value;
            }
        }
        
        /// <remarks/>
        public int type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public int loadid {
            get {
                return this.loadidField;
            }
            set {
                this.loadidField = value;
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public string statusCode {
            get {
                return this.statusCodeField;
            }
            set {
                this.statusCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.birst.com/")]
    public partial class SavedExpression {
        
        private string nameField;
        
        private string columnTypeField;
        
        private string formatField;
        
        private string expressionField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string ColumnType {
            get {
                return this.columnTypeField;
            }
            set {
                this.columnTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Format {
            get {
                return this.formatField;
            }
            set {
                this.formatField = value;
            }
        }
        
        /// <remarks/>
        public string Expression {
            get {
                return this.expressionField;
            }
            set {
                this.expressionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.birst.com/")]
    public partial class Filter {
        
        private string operatorField;
        
        private string multiSelectTypeField;
        
        private string filterTypeField;
        
        private string parameterNameField;
        
        private string[] selectedValuesField;
        
        /// <remarks/>
        public string Operator {
            get {
                return this.operatorField;
            }
            set {
                this.operatorField = value;
            }
        }
        
        /// <remarks/>
        public string multiSelectType {
            get {
                return this.multiSelectTypeField;
            }
            set {
                this.multiSelectTypeField = value;
            }
        }
        
        /// <remarks/>
        public string FilterType {
            get {
                return this.filterTypeField;
            }
            set {
                this.filterTypeField = value;
            }
        }
        
        /// <remarks/>
        public string ParameterName {
            get {
                return this.parameterNameField;
            }
            set {
                this.parameterNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("selectedValue")]
        public string[] selectedValues {
            get {
                return this.selectedValuesField;
            }
            set {
                this.selectedValuesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.birst.com/")]
    public partial class QueryOptionOfStringString {
        
        private string keyField;
        
        private string valueField;
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CommandQueryResult))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.birst.com/")]
    public partial class QueryResult {
        
        private string[][] rowsField;
        
        private string[] columnNamesField;
        
        private string[] displayNamesField;
        
        private System.Nullable<int>[] dataTypesField;
        
        private string errorMessageField;
        
        private int errorCodeField;
        
        public QueryResult() {
            this.errorCodeField = 0;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")]
        [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)]
        public string[][] rows {
            get {
                return this.rowsField;
            }
            set {
                this.rowsField = value;
            }
        }
        
        /// <remarks/>
        public string[] columnNames {
            get {
                return this.columnNamesField;
            }
            set {
                this.columnNamesField = value;
            }
        }
        
        /// <remarks/>
        public string[] displayNames {
            get {
                return this.displayNamesField;
            }
            set {
                this.displayNamesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute()]
        public System.Nullable<int>[] dataTypes {
            get {
                return this.dataTypesField;
            }
            set {
                this.dataTypesField = value;
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.birst.com/")]
    public partial class CommandQueryResult : QueryResult {
        
        private string queryTokenField;
        
        private int numRowsReturnedField;
        
        private bool hasMoreRowsField;
        
        /// <remarks/>
        public string queryToken {
            get {
                return this.queryTokenField;
            }
            set {
                this.queryTokenField = value;
            }
        }
        
        /// <remarks/>
        public int numRowsReturned {
            get {
                return this.numRowsReturnedField;
            }
            set {
                this.numRowsReturnedField = value;
            }
        }
        
        /// <remarks/>
        public bool hasMoreRows {
            get {
                return this.hasMoreRowsField;
            }
            set {
                this.hasMoreRowsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.birst.com/")]
    public partial class LevelMetadata {
        
        private string nameField;
        
        private string cardinalityField;
        
        private string[] columnNamesField;
        
        private LevelMetadata[] childrenField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Cardinality {
            get {
                return this.cardinalityField;
            }
            set {
                this.cardinalityField = value;
            }
        }
        
        /// <remarks/>
        public string[] ColumnNames {
            get {
                return this.columnNamesField;
            }
            set {
                this.columnNamesField = value;
            }
        }
        
        /// <remarks/>
        public LevelMetadata[] Children {
            get {
                return this.childrenField;
            }
            set {
                this.childrenField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.birst.com/")]
    public partial class HierarchyMetadata {
        
        private string nameField;
        
        private LevelMetadata[] childrenField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public LevelMetadata[] Children {
            get {
                return this.childrenField;
            }
            set {
                this.childrenField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.birst.com/")]
    public partial class EmailDomain {
        
        private string idField;
        
        private string accountIdField;
        
        private string domainField;
        
        private System.DateTime createdDateField;
        
        private System.DateTime modifiedDateField;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string accountId {
            get {
                return this.accountIdField;
            }
            set {
                this.accountIdField = value;
            }
        }
        
        /// <remarks/>
        public string domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime createdDate {
            get {
                return this.createdDateField;
            }
            set {
                this.createdDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime modifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.birst.com/")]
    public partial class RedshiftStagingDetails {
        
        private string stagingTableNameField;
        
        private string sourceS3PathField;
        
        private string delimiterField;
        
        private string[] columnNamesField;
        
        private string awsKeyIDField;
        
        private string awsSecretKeyField;
        
        private string awsTempTokenField;
        
        private string encryptionKeyField;
        
        private string dateFormatField;
        
        private string compressionFormatField;
        
        private int ignoreHeadersField;
        
        private bool keepQuotesField;
        
        private bool skipEscapeField;
        
        /// <remarks/>
        public string stagingTableName {
            get {
                return this.stagingTableNameField;
            }
            set {
                this.stagingTableNameField = value;
            }
        }
        
        /// <remarks/>
        public string sourceS3Path {
            get {
                return this.sourceS3PathField;
            }
            set {
                this.sourceS3PathField = value;
            }
        }
        
        /// <remarks/>
        public string delimiter {
            get {
                return this.delimiterField;
            }
            set {
                this.delimiterField = value;
            }
        }
        
        /// <remarks/>
        public string[] columnNames {
            get {
                return this.columnNamesField;
            }
            set {
                this.columnNamesField = value;
            }
        }
        
        /// <remarks/>
        public string awsKeyID {
            get {
                return this.awsKeyIDField;
            }
            set {
                this.awsKeyIDField = value;
            }
        }
        
        /// <remarks/>
        public string awsSecretKey {
            get {
                return this.awsSecretKeyField;
            }
            set {
                this.awsSecretKeyField = value;
            }
        }
        
        /// <remarks/>
        public string awsTempToken {
            get {
                return this.awsTempTokenField;
            }
            set {
                this.awsTempTokenField = value;
            }
        }
        
        /// <remarks/>
        public string encryptionKey {
            get {
                return this.encryptionKeyField;
            }
            set {
                this.encryptionKeyField = value;
            }
        }
        
        /// <remarks/>
        public string dateFormat {
            get {
                return this.dateFormatField;
            }
            set {
                this.dateFormatField = value;
            }
        }
        
        /// <remarks/>
        public string compressionFormat {
            get {
                return this.compressionFormatField;
            }
            set {
                this.compressionFormatField = value;
            }
        }
        
        /// <remarks/>
        public int ignoreHeaders {
            get {
                return this.ignoreHeadersField;
            }
            set {
                this.ignoreHeadersField = value;
            }
        }
        
        /// <remarks/>
        public bool keepQuotes {
            get {
                return this.keepQuotesField;
            }
            set {
                this.keepQuotesField = value;
            }
        }
        
        /// <remarks/>
        public bool skipEscape {
            get {
                return this.skipEscapeField;
            }
            set {
                this.skipEscapeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.birst.com/")]
    public partial class UserProfileMapping {
        
        private string userNameField;
        
        private string profileIdField;
        
        /// <remarks/>
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string profileId {
            get {
                return this.profileIdField;
            }
            set {
                this.profileIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.birst.com/")]
    public partial class ProfileProperty {
        
        private string nameField;
        
        private string valueField;
        
        private string localeField;
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public string locale {
            get {
                return this.localeField;
            }
            set {
                this.localeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.birst.com/")]
    public partial class Profile {
        
        private string idField;
        
        private string nameField;
        
        private string descriptionField;
        
        private string isDefaultField;
        
        private ProfileProperty[] propertiesField;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string isDefault {
            get {
                return this.isDefaultField;
            }
            set {
                this.isDefaultField = value;
            }
        }
        
        /// <remarks/>
        public ProfileProperty[] properties {
            get {
                return this.propertiesField;
            }
            set {
                this.propertiesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.birst.com/")]
    public partial class ODBCRelationshipResult {
        
        private string primaryTableField;
        
        private string foreignTableField;
        
        private string primaryTableColumnField;
        
        private string foreignTableColumnField;
        
        /// <remarks/>
        public string primaryTable {
            get {
                return this.primaryTableField;
            }
            set {
                this.primaryTableField = value;
            }
        }
        
        /// <remarks/>
        public string foreignTable {
            get {
                return this.foreignTableField;
            }
            set {
                this.foreignTableField = value;
            }
        }
        
        /// <remarks/>
        public string primaryTableColumn {
            get {
                return this.primaryTableColumnField;
            }
            set {
                this.primaryTableColumnField = value;
            }
        }
        
        /// <remarks/>
        public string foreignTableColumn {
            get {
                return this.foreignTableColumnField;
            }
            set {
                this.foreignTableColumnField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.birst.com/")]
    public partial class ODBCColumnResult {
        
        private string columnNameField;
        
        private string birstColumnNameField;
        
        private int dataTypeField;
        
        private int widthField;
        
        private string[] aggsSupportedField;
        
        private int keyField;
        
        private bool isFactField;
        
        /// <remarks/>
        public string columnName {
            get {
                return this.columnNameField;
            }
            set {
                this.columnNameField = value;
            }
        }
        
        /// <remarks/>
        public string birstColumnName {
            get {
                return this.birstColumnNameField;
            }
            set {
                this.birstColumnNameField = value;
            }
        }
        
        /// <remarks/>
        public int dataType {
            get {
                return this.dataTypeField;
            }
            set {
                this.dataTypeField = value;
            }
        }
        
        /// <remarks/>
        public int width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        public string[] aggsSupported {
            get {
                return this.aggsSupportedField;
            }
            set {
                this.aggsSupportedField = value;
            }
        }
        
        /// <remarks/>
        public int key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public bool isFact {
            get {
                return this.isFactField;
            }
            set {
                this.isFactField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.birst.com/")]
    public partial class ODBCTableResult {
        
        private string tableNameField;
        
        private bool isFactField;
        
        private ODBCColumnResult[] columnsField;
        
        /// <remarks/>
        public string tableName {
            get {
                return this.tableNameField;
            }
            set {
                this.tableNameField = value;
            }
        }
        
        /// <remarks/>
        public bool isFact {
            get {
                return this.isFactField;
            }
            set {
                this.isFactField = value;
            }
        }
        
        /// <remarks/>
        public ODBCColumnResult[] columns {
            get {
                return this.columnsField;
            }
            set {
                this.columnsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.birst.com/")]
    public partial class MetaDataResult {
        
        private ODBCTableResult[] tablesField;
        
        private ODBCRelationshipResult[] relationshipsField;
        
        private int errorCodeField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public ODBCTableResult[] tables {
            get {
                return this.tablesField;
            }
            set {
                this.tablesField = value;
            }
        }
        
        /// <remarks/>
        public ODBCRelationshipResult[] relationships {
            get {
                return this.relationshipsField;
            }
            set {
                this.relationshipsField = value;
            }
        }
        
        /// <remarks/>
        public int errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.birst.com/")]
    public partial class LiveAccessSourceColumnSubClass {
        
        private string sourceNameField;
        
        private string columnNameField;
        
        private string formulaField;
        
        private string dataTypeField;
        
        private int widthField;
        
        private bool attributeField;
        
        private bool measureField;
        
        private bool analyzeByDateField;
        
        /// <remarks/>
        public string SourceName {
            get {
                return this.sourceNameField;
            }
            set {
                this.sourceNameField = value;
            }
        }
        
        /// <remarks/>
        public string ColumnName {
            get {
                return this.columnNameField;
            }
            set {
                this.columnNameField = value;
            }
        }
        
        /// <remarks/>
        public string Formula {
            get {
                return this.formulaField;
            }
            set {
                this.formulaField = value;
            }
        }
        
        /// <remarks/>
        public string DataType {
            get {
                return this.dataTypeField;
            }
            set {
                this.dataTypeField = value;
            }
        }
        
        /// <remarks/>
        public int Width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        public bool Attribute {
            get {
                return this.attributeField;
            }
            set {
                this.attributeField = value;
            }
        }
        
        /// <remarks/>
        public bool Measure {
            get {
                return this.measureField;
            }
            set {
                this.measureField = value;
            }
        }
        
        /// <remarks/>
        public bool AnalyzeByDate {
            get {
                return this.analyzeByDateField;
            }
            set {
                this.analyzeByDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.birst.com/")]
    public partial class LiveAccessSourceSubClass {
        
        private string nameField;
        
        private bool unCachedField;
        
        private int tTLField;
        
        private int cardinalityField;
        
        private string[] sourceKeysField;
        
        private string[] foreignKeysField;
        
        private string sourceFilterConditionField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public bool UnCached {
            get {
                return this.unCachedField;
            }
            set {
                this.unCachedField = value;
            }
        }
        
        /// <remarks/>
        public int TTL {
            get {
                return this.tTLField;
            }
            set {
                this.tTLField = value;
            }
        }
        
        /// <remarks/>
        public int Cardinality {
            get {
                return this.cardinalityField;
            }
            set {
                this.cardinalityField = value;
            }
        }
        
        /// <remarks/>
        public string[] SourceKeys {
            get {
                return this.sourceKeysField;
            }
            set {
                this.sourceKeysField = value;
            }
        }
        
        /// <remarks/>
        public string[] ForeignKeys {
            get {
                return this.foreignKeysField;
            }
            set {
                this.foreignKeysField = value;
            }
        }
        
        /// <remarks/>
        public string SourceFilterCondition {
            get {
                return this.sourceFilterConditionField;
            }
            set {
                this.sourceFilterConditionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.birst.com/")]
    public partial class LiveAccessSourceMetadata {
        
        private string connectionField;
        
        private string sourceNameField;
        
        private bool isQuerySourceField;
        
        private string physicalTableNameField;
        
        private string queryField;
        
        private string schemaNameField;
        
        /// <remarks/>
        public string Connection {
            get {
                return this.connectionField;
            }
            set {
                this.connectionField = value;
            }
        }
        
        /// <remarks/>
        public string SourceName {
            get {
                return this.sourceNameField;
            }
            set {
                this.sourceNameField = value;
            }
        }
        
        /// <remarks/>
        public bool IsQuerySource {
            get {
                return this.isQuerySourceField;
            }
            set {
                this.isQuerySourceField = value;
            }
        }
        
        /// <remarks/>
        public string PhysicalTableName {
            get {
                return this.physicalTableNameField;
            }
            set {
                this.physicalTableNameField = value;
            }
        }
        
        /// <remarks/>
        public string Query {
            get {
                return this.queryField;
            }
            set {
                this.queryField = value;
            }
        }
        
        /// <remarks/>
        public string SchemaName {
            get {
                return this.schemaNameField;
            }
            set {
                this.schemaNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.birst.com/")]
    public partial class SourceColumnSubClass {
        
        private string nameField;
        
        private string originalNameField;
        
        private bool analyzeMeasureField;
        
        private string dataTypeField;
        
        private string formatField;
        
        private bool enableSecutityFilterField;
        
        private string sourceFileColumnField;
        
        private string[] targetAggregationsField;
        
        private string[] targetTypesField;
        
        private string unknownValueField;
        
        private int widthField;
        
        private string hierarchyNameField;
        
        private string levelNameField;
        
        private string[][] levelsField;
        
        private bool analyzeByDateField;
        
        private bool measureField;
        
        private bool lockTypeField;
        
        public SourceColumnSubClass() {
            this.analyzeMeasureField = false;
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string OriginalName {
            get {
                return this.originalNameField;
            }
            set {
                this.originalNameField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool AnalyzeMeasure {
            get {
                return this.analyzeMeasureField;
            }
            set {
                this.analyzeMeasureField = value;
            }
        }
        
        /// <remarks/>
        public string DataType {
            get {
                return this.dataTypeField;
            }
            set {
                this.dataTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Format {
            get {
                return this.formatField;
            }
            set {
                this.formatField = value;
            }
        }
        
        /// <remarks/>
        public bool EnableSecutityFilter {
            get {
                return this.enableSecutityFilterField;
            }
            set {
                this.enableSecutityFilterField = value;
            }
        }
        
        /// <remarks/>
        public string SourceFileColumn {
            get {
                return this.sourceFileColumnField;
            }
            set {
                this.sourceFileColumnField = value;
            }
        }
        
        /// <remarks/>
        public string[] TargetAggregations {
            get {
                return this.targetAggregationsField;
            }
            set {
                this.targetAggregationsField = value;
            }
        }
        
        /// <remarks/>
        public string[] TargetTypes {
            get {
                return this.targetTypesField;
            }
            set {
                this.targetTypesField = value;
            }
        }
        
        /// <remarks/>
        public string UnknownValue {
            get {
                return this.unknownValueField;
            }
            set {
                this.unknownValueField = value;
            }
        }
        
        /// <remarks/>
        public int Width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        public string HierarchyName {
            get {
                return this.hierarchyNameField;
            }
            set {
                this.hierarchyNameField = value;
            }
        }
        
        /// <remarks/>
        public string LevelName {
            get {
                return this.levelNameField;
            }
            set {
                this.levelNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")]
        [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)]
        public string[][] Levels {
            get {
                return this.levelsField;
            }
            set {
                this.levelsField = value;
            }
        }
        
        /// <remarks/>
        public bool AnalyzeByDate {
            get {
                return this.analyzeByDateField;
            }
            set {
                this.analyzeByDateField = value;
            }
        }
        
        /// <remarks/>
        public bool Measure {
            get {
                return this.measureField;
            }
            set {
                this.measureField = value;
            }
        }
        
        /// <remarks/>
        public bool LockType {
            get {
                return this.lockTypeField;
            }
            set {
                this.lockTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.birst.com/")]
    public partial class ScriptDefinition {
        
        private string inputQueryField;
        
        private string outputField;
        
        private string scriptField;
        
        /// <remarks/>
        public string InputQuery {
            get {
                return this.inputQueryField;
            }
            set {
                this.inputQueryField = value;
            }
        }
        
        /// <remarks/>
        public string Output {
            get {
                return this.outputField;
            }
            set {
                this.outputField = value;
            }
        }
        
        /// <remarks/>
        public string Script {
            get {
                return this.scriptField;
            }
            set {
                this.scriptField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.birst.com/")]
    public partial class StagingTableSubClass {
        
        private string nameField;
        
        private string originalNameField;
        
        private bool disabledField;
        
        private ScriptDefinition scriptField;
        
        private System.Nullable<System.DateTime> lastModifiedDateField;
        
        private string[] subGroupsField;
        
        private SourceColumnSubClass[] columnsField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string OriginalName {
            get {
                return this.originalNameField;
            }
            set {
                this.originalNameField = value;
            }
        }
        
        /// <remarks/>
        public bool Disabled {
            get {
                return this.disabledField;
            }
            set {
                this.disabledField = value;
            }
        }
        
        /// <remarks/>
        public ScriptDefinition Script {
            get {
                return this.scriptField;
            }
            set {
                this.scriptField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LastModifiedDate {
            get {
                return this.lastModifiedDateField;
            }
            set {
                this.lastModifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public string[] SubGroups {
            get {
                return this.subGroupsField;
            }
            set {
                this.subGroupsField = value;
            }
        }
        
        /// <remarks/>
        public SourceColumnSubClass[] Columns {
            get {
                return this.columnsField;
            }
            set {
                this.columnsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void enableSourceInSpaceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void listLanguagesCompletedEventHandler(object sender, listLanguagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listLanguagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listLanguagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Language[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Language[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getLanguageForUserCompletedEventHandler(object sender, getLanguageForUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLanguageForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLanguageForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void setLanguageForUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void setSpaceNameCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void setSpaceCommentsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void setEmailFromForSpaceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void setEmailSubjectForSpaceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void setBackgroundColorForSpaceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void setForegroundColorForSpaceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void setLogoForSpaceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void setDefaultLogoForSpaceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getSourcesListCompletedEventHandler(object sender, getSourcesListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSourcesListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSourcesListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getSourceDetailsCompletedEventHandler(object sender, getSourceDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSourceDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSourceDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StagingTableSubClass Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StagingTableSubClass)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void setSourceDetailsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void mapLiveAccessSourceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getLiveAccessSourceDetailsCompletedEventHandler(object sender, getLiveAccessSourceDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLiveAccessSourceDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLiveAccessSourceDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LiveAccessSourceSubClass Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LiveAccessSourceSubClass)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void setLiveAccessSourceDetailsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getLiveAccessColumnPropertiesCompletedEventHandler(object sender, getLiveAccessColumnPropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLiveAccessColumnPropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLiveAccessColumnPropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LiveAccessSourceColumnSubClass Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LiveAccessSourceColumnSubClass)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void setLiveAccessColumnPropertiesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void uploadImageToReportCatalogCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getSpaceCommentsCompletedEventHandler(object sender, getSpaceCommentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSpaceCommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSpaceCommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void setSpaceProcessEngineVersionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getSpaceProcessEngineVersionCompletedEventHandler(object sender, getSpaceProcessEngineVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSpaceProcessEngineVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSpaceProcessEngineVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getODBCMetaDataCompletedEventHandler(object sender, getODBCMetaDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getODBCMetaDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getODBCMetaDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MetaDataResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MetaDataResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getODBCMetaDataSubjectAreasCompletedEventHandler(object sender, getODBCMetaDataSubjectAreasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getODBCMetaDataSubjectAreasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getODBCMetaDataSubjectAreasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MetaDataResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MetaDataResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void createProfileCompletedEventHandler(object sender, createProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Profile Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Profile)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void listProfilesCompletedEventHandler(object sender, listProfilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listProfilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listProfilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Profile[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Profile[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getProfileCompletedEventHandler(object sender, getProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Profile Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Profile)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getProfileDetailsCompletedEventHandler(object sender, getProfileDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProfileDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProfileDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Profile Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Profile)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void updateProfileCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void deleteProfileCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getProfilePropertyWithLocaleCompletedEventHandler(object sender, getProfilePropertyWithLocaleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProfilePropertyWithLocaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProfilePropertyWithLocaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProfileProperty Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProfileProperty)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getProfilePropertyCompletedEventHandler(object sender, getProfilePropertyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProfilePropertyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProfilePropertyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProfileProperty[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProfileProperty[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void setProfilePropertyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void deleteLocaleValueInProfilePropertyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void linkProfileToAccountCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void linkProfileToUsersCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void unlinkProfileFromUsersCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void unlinkProfileFromAccountCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getUserProfileCompletedEventHandler(object sender, getUserProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Profile Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Profile)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getUserProfileDetailsCompletedEventHandler(object sender, getUserProfileDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserProfileDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserProfileDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Profile Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Profile)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getDefaultProfileCompletedEventHandler(object sender, getDefaultProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDefaultProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDefaultProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Profile Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Profile)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getDefaultProfileDetailsCompletedEventHandler(object sender, getDefaultProfileDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDefaultProfileDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDefaultProfileDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Profile Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Profile)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getProfileForUserCompletedEventHandler(object sender, getProfileForUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProfileForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProfileForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Profile Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Profile)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getUsersForProfileCompletedEventHandler(object sender, getUsersForProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUsersForProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUsersForProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getDashboardViewCompletedEventHandler(object sender, getDashboardViewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDashboardViewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDashboardViewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlElement[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlElement[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void setDashboardViewCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void rebuildIndicesCompletedEventHandler(object sender, rebuildIndicesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class rebuildIndicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal rebuildIndicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void loadStagingtableFromS3BucketCompletedEventHandler(object sender, loadStagingtableFromS3BucketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loadStagingtableFromS3BucketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loadStagingtableFromS3BucketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void addSfdcAccountMappingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void removeSfdcAccountMappingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getSfdcAccountMappingCompletedEventHandler(object sender, getSfdcAccountMappingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSfdcAccountMappingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSfdcAccountMappingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void setDenyAddSpaceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void addEmailDomainsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void listEmailDomainsCompletedEventHandler(object sender, listEmailDomainsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listEmailDomainsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listEmailDomainsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmailDomain[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmailDomain[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void removeEmailDomainsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void createHierarchyCompletedEventHandler(object sender, createHierarchyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createHierarchyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createHierarchyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void deleteHierarchyCompletedEventHandler(object sender, deleteHierarchyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteHierarchyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteHierarchyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getHierarchyCompletedEventHandler(object sender, getHierarchyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getHierarchyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getHierarchyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HierarchyMetadata Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HierarchyMetadata)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void updateHierarchyCompletedEventHandler(object sender, updateHierarchyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateHierarchyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateHierarchyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void LogoutCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void LoginViaSamlCompletedEventHandler(object sender, LoginViaSamlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginViaSamlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginViaSamlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void clearCacheInSpaceCompletedEventHandler(object sender, clearCacheInSpaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class clearCacheInSpaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal clearCacheInSpaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void swapSpaceContentsCompletedEventHandler(object sender, swapSpaceContentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class swapSpaceContentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal swapSpaceContentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void swapSpaceForPackagesCompletedEventHandler(object sender, swapSpaceForPackagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class swapSpaceForPackagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal swapSpaceForPackagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void copySpaceContentsCompletedEventHandler(object sender, copySpaceContentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class copySpaceContentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal copySpaceContentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void copySpaceCompletedEventHandler(object sender, copySpaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class copySpaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal copySpaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void copyCatalogDirectoryCompletedEventHandler(object sender, copyCatalogDirectoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class copyCatalogDirectoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal copyCatalogDirectoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void resetPasswordCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void addUserToSpaceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void listUsersInSpaceCompletedEventHandler(object sender, listUsersInSpaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listUsersInSpaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listUsersInSpaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void removeUserFromSpaceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void addGroupToSpaceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void removeGroupFromSpaceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void listGroupsInSpaceCompletedEventHandler(object sender, listGroupsInSpaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listGroupsInSpaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listGroupsInSpaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getAvailableACLsCompletedEventHandler(object sender, getAvailableACLsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAvailableACLsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAvailableACLsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void listGroupAclsInSpaceCompletedEventHandler(object sender, listGroupAclsInSpaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listGroupAclsInSpaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listGroupAclsInSpaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void addAclToGroupInSpaceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void removeAclFromGroupInSpaceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void addUserToGroupInSpaceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void removeUserFromGroupInSpaceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void listUsersInGroupInSpaceCompletedEventHandler(object sender, listUsersInGroupInSpaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listUsersInGroupInSpaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listUsersInGroupInSpaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void listUserGroupMembershipCompletedEventHandler(object sender, listUserGroupMembershipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listUserGroupMembershipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listUserGroupMembershipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void listProxyUsersCompletedEventHandler(object sender, listProxyUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listProxyUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listProxyUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void listOpenIDsCompletedEventHandler(object sender, listOpenIDsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listOpenIDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listOpenIDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void addOpenIDCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void removeOpenIDCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void setUserDefaultSpaceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void listReleasesCompletedEventHandler(object sender, listReleasesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listReleasesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listReleasesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getUserReleaseCompletedEventHandler(object sender, getUserReleaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserReleaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserReleaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void setUserReleaseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void enableUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void unlockUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void deleteUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void enableAccountCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void addProxyUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void removeProxyUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void listCreatedUsersCompletedEventHandler(object sender, listCreatedUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listCreatedUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listCreatedUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void listManagedUsersCompletedEventHandler(object sender, listManagedUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listManagedUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listManagedUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void listAllowedIpsCompletedEventHandler(object sender, listAllowedIpsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listAllowedIpsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listAllowedIpsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void addAllowedIpCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void removeAllowedIpCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void listAllowedIPAddrsForAccountCompletedEventHandler(object sender, listAllowedIPAddrsForAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listAllowedIPAddrsForAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listAllowedIPAddrsForAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void addAllowedIPAddrForAccountCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void removeAllowedIPAddrForAccountCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void setVariableInSpaceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void addUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void addProductToUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void removeProductFromUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void executeQueryInSpaceCompletedEventHandler(object sender, executeQueryInSpaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class executeQueryInSpaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal executeQueryInSpaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CommandQueryResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CommandQueryResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void executeQueryInSpaceWithOptionsCompletedEventHandler(object sender, executeQueryInSpaceWithOptionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class executeQueryInSpaceWithOptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal executeQueryInSpaceWithOptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CommandQueryResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CommandQueryResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getReportDataCompletedEventHandler(object sender, getReportDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getReportDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getReportDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CommandQueryResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CommandQueryResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void queryMoreCompletedEventHandler(object sender, queryMoreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class queryMoreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal queryMoreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CommandQueryResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CommandQueryResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void createDashboardCollectionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void createExpressionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void updateExpressionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void deleteExpressionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getExpressionCompletedEventHandler(object sender, getExpressionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getExpressionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getExpressionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SavedExpression Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SavedExpression)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void saveQueryReportCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void replaceExpressionInReportCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void beginDataUploadCompletedEventHandler(object sender, beginDataUploadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class beginDataUploadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal beginDataUploadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void setDataUploadOptionsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void uploadDataCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void finishDataUploadCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void isDataUploadCompleteCompletedEventHandler(object sender, isDataUploadCompleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isDataUploadCompleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isDataUploadCompleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getDataUploadStatusCompletedEventHandler(object sender, getDataUploadStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDataUploadStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDataUploadStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void isJobCompleteCompletedEventHandler(object sender, isJobCompleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isJobCompleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isJobCompleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getJobStatusCompletedEventHandler(object sender, getJobStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getJobStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getJobStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatusResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatusResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void publishDataCompletedEventHandler(object sender, publishDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class publishDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal publishDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void isPublishingCompleteCompletedEventHandler(object sender, isPublishingCompleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isPublishingCompleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isPublishingCompleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getPublishingStatusCompletedEventHandler(object sender, getPublishingStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPublishingStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPublishingStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getVariablesForSpaceCompletedEventHandler(object sender, getVariablesForSpaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getVariablesForSpaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getVariablesForSpaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[][])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getDirectoryContentsCompletedEventHandler(object sender, getDirectoryContentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDirectoryContentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDirectoryContentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FileNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FileNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getDirectoryPermissionsCompletedEventHandler(object sender, getDirectoryPermissionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDirectoryPermissionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDirectoryPermissionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GroupPermission[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GroupPermission[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void setDirectoryPermissionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void setDirectoryPermissionsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void setCatalogPermissionsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void copyFileOrDirectoryCompletedEventHandler(object sender, copyFileOrDirectoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class copyFileOrDirectoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal copyFileOrDirectoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void copyFileCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void deleteFileOrDirectoryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void renameFileOrDirectoryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void createNewDirectoryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void checkAndCreateDirectoryCompletedEventHandler(object sender, checkAndCreateDirectoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkAndCreateDirectoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkAndCreateDirectoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getLoadStatusCompletedEventHandler(object sender, getLoadStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLoadStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLoadStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void createNewSpaceCompletedEventHandler(object sender, createNewSpaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createNewSpaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createNewSpaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void createNewSpaceUsingSchemaCompletedEventHandler(object sender, createNewSpaceUsingSchemaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createNewSpaceUsingSchemaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createNewSpaceUsingSchemaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void deleteSpaceCompletedEventHandler(object sender, deleteSpaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteSpaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteSpaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void copyCustomSubjectAreaCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void listCustomSubjectAreasCompletedEventHandler(object sender, listCustomSubjectAreasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listCustomSubjectAreasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listCustomSubjectAreasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getSubjectAreaContentCompletedEventHandler(object sender, getSubjectAreaContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSubjectAreaContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSubjectAreaContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getExtendedSubjectAreaCompletedEventHandler(object sender, getExtendedSubjectAreaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getExtendedSubjectAreaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getExtendedSubjectAreaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getUpdatedSubjectAreaCompletedEventHandler(object sender, getUpdatedSubjectAreaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUpdatedSubjectAreaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUpdatedSubjectAreaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void createSubjectAreaCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void renameSubjectAreaCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void setSubjectAreaPermissionsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getSubjectAreaPermissionsCompletedEventHandler(object sender, getSubjectAreaPermissionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSubjectAreaPermissionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSubjectAreaPermissionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void setSubjectAreaDescriptionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getSubjectAreaDescriptionCompletedEventHandler(object sender, getSubjectAreaDescriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSubjectAreaDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSubjectAreaDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void setSubjectAreaCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void addExpressionToSubjectAreaCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void removeExpressionFromSubjectAreaCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void deleteSubjectAreaCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void listSpacesCompletedEventHandler(object sender, listSpacesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listSpacesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listSpacesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserSpace[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserSpace[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void deleteLastDataFromSpaceCompletedEventHandler(object sender, deleteLastDataFromSpaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteLastDataFromSpaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteLastDataFromSpaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void deleteAllDataFromSpaceCompletedEventHandler(object sender, deleteAllDataFromSpaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteAllDataFromSpaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteAllDataFromSpaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void executeScheduledReportCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void exportReportToPNGCompletedEventHandler(object sender, exportReportToPNGCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class exportReportToPNGCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal exportReportToPNGCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void exportReportToPDFCompletedEventHandler(object sender, exportReportToPDFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class exportReportToPDFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal exportReportToPDFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void exportReportToPPTCompletedEventHandler(object sender, exportReportToPPTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class exportReportToPPTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal exportReportToPPTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void exportReportToXLSCompletedEventHandler(object sender, exportReportToXLSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class exportReportToXLSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal exportReportToXLSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void exportReportToCSVCompletedEventHandler(object sender, exportReportToCSVCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class exportReportToCSVCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal exportReportToCSVCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void exportReportToRTFCompletedEventHandler(object sender, exportReportToRTFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class exportReportToRTFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal exportReportToRTFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getExportDataCompletedEventHandler(object sender, getExportDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getExportDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getExportDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void setSpaceSSOPasswordCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void extractSalesforceDataCompletedEventHandler(object sender, extractSalesforceDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractSalesforceDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractSalesforceDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void extractConnectorDataCompletedEventHandler(object sender, extractConnectorDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractConnectorDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractConnectorDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void extractCloudConnectorDataCompletedEventHandler(object sender, extractCloudConnectorDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractCloudConnectorDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractCloudConnectorDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getSpaceJNLPFileCompletedEventHandler(object sender, getSpaceJNLPFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSpaceJNLPFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSpaceJNLPFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getSpaceStatisticsCompletedEventHandler(object sender, getSpaceStatisticsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSpaceStatisticsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSpaceStatisticsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SpaceStatistics Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SpaceStatistics)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void setUpGenericJDBCRealTimeConnectionForSpaceCompletedEventHandler(object sender, setUpGenericJDBCRealTimeConnectionForSpaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setUpGenericJDBCRealTimeConnectionForSpaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setUpGenericJDBCRealTimeConnectionForSpaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void setUpRealTimeConnectionForSpaceCompletedEventHandler(object sender, setUpRealTimeConnectionForSpaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setUpRealTimeConnectionForSpaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setUpRealTimeConnectionForSpaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void modifyRealTimeConnectionInformationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void importCubeMetaDataIntoSpaceCompletedEventHandler(object sender, importCubeMetaDataIntoSpaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class importCubeMetaDataIntoSpaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal importCubeMetaDataIntoSpaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void setUserPasswordCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void clearDashboardCacheCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void renameDashboardCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void renameDashboardPageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591